<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Формула</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Регламент</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ИмяКнопки</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Произвольный стандартный сценарий</Value>
		<Value xsi:type="xs:string">//Сценарий выполнения
МассивСтруктурИсходящих    = Новый Массив;
ТипыДокументовДляЗагрузки  = Новый Массив;
ТипыДокументовДляОбработки = Новый Массив;    

СтруктураЛога = DR_EDI_ОбщегоНазначения.ПолучитьСтруктуруЛогаНаСервере();	
ДеревоXMLВходящие = Настройка_Параметр_Прочитать("СтруктураФайлаXMLВходящие"); 
ДеревоXMLИсходящие = Настройка_Параметр_Прочитать("СтруктураФайлаXMLИсходящие");
ДеревоXMLСоздать = Настройка_Параметр_Прочитать("СтруктураФайлаXMLДокументы");    
ДеревоXMLПроизвольные = Настройка_Параметр_Прочитать("СтруктураФайлаXMLПроизвольные");


//Входящие
Для Каждого СтрокаДерева Из ДеревоXMLВходящие.Строки Цикл
	
	ИмяШаблона = СтрокаДерева.ИмяКнопки;
	ТипДокумента = СтрЗаменить(СтрокаДерева.ТипТранзакции, "Входящий ", "");
	ИспользоватьШаблон = Ложь;
	
	Для Каждого СтрРегламента Из СтрокаДерева.Регламент Цикл
		Если СтрРегламента.Представление = "ТекстЗапроса" Тогда
			ИспользоватьШаблон = СтрРегламента.Пометка;
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ ИспользоватьШаблон Тогда
		Продолжить;	
	КонецЕсли;	
	
	Если ИспользоватьШаблон Тогда
		
		Попытка
			
			ПроверитьНаличиеФайловНаСервере(ТипДокумента, ЭтоРегламентноеЗадание, СтруктураЛога);
			ВыполнитьСценарийПоИмениКнопки(ИмяШаблона, ТипДокумента, МассивЛогаСобытий, ЭтоРегламентноеЗадание);
			
		Исключение
			
			ТекстЛогаСобытий = "Ошибка при выполнении регламентного задания: " + ИмяШаблона + "! - " + ОписаниеОшибки();
			ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Ошибка", "Регламентное задание");
			МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
			
		КонецПопытки;
		
	КонецЕсли;
	
КонецЦикла;

//Создание документов
Для Каждого СтрокаДерева Из ДеревоXMLСоздать.Строки Цикл
	
	ИмяШаблона = СтрокаДерева.ИмяКнопки;
	ТекстЗапроса = "";
	ИспользоватьШаблон = Ложь; 
	СтрокиДерева = ДеревоXMLИсходящие.Строки.НайтиСтроки(Новый Структура("Использовать, ИмяКнопки", Истина, ИмяШаблона));
	
	Для каждого СтрРегламента Из СтрокаДерева.Регламент Цикл
		Если СтрРегламента.Представление = "ТекстЗапроса" Тогда 
			Выполнить(СтрРегламента.Значение); 
			ИспользоватьШаблон = СтрРегламента.Пометка;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ ИспользоватьШаблон Тогда
		Продолжить;	
	КонецЕсли;
	
	Если ИспользоватьШаблон И ЗначениеЗаполнено(ТекстЗапроса) Тогда
		
		Попытка
			
			МассивСтрок = Новый Массив;
			Запрос = Новый Запрос;
			Запрос.Текст = ТекстЗапроса;
			Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());					
			
			РезультатЗапроса = Запрос.Выполнить();	
			Выборка = РезультатЗапроса.Выбрать();	
			Пока Выборка.Следующий() Цикл
				
				СтруктураСтроки = Новый Структура;
				СтруктураСтроки.Вставить("Документ", Выборка.Документ);
				СтруктураСтроки.Вставить("ИдентификаторЦепочки", Выборка.ИдентификаторЦепочки);
				
				МассивСтрок.Добавить(СтруктураСтроки);	
			КонецЦикла;
			
			DR_СоздатьДокументПоДинамическойКнопке(МассивСтрок, ИмяШаблона, "РегламентноеЗадание", МассивЛогаСобытий);
			
		Исключение
			
			ТекстЛогаСобытий = "Ошибка при выполнении регламентного задания: " + ИмяШаблона + "! - " + ОписаниеОшибки();
			ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Ошибка", "Регламентное задание");
			МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
			
		КонецПопытки;	
		
	КонецЕсли;
	
КонецЦикла;	

//Исходящие
Для Каждого СтрокаДерева Из ДеревоXMLИсходящие.Строки Цикл
	
	ИмяШаблона = СтрокаДерева.ИмяКнопки;
	ТипДокумента = СтрЗаменить(СтрокаДерева.ТипТранзакции, "Исходящий ", "");
	ИспользоватьШаблон = Ложь;
	ТекстЗапроса = "";
	
	Для каждого СтрРегламента Из СтрокаДерева.Регламент Цикл
		Если СтрРегламента.Представление = "ТекстЗапроса" Тогда 
			Выполнить(СтрРегламента.Значение); 
			ИспользоватьШаблон = СтрРегламента.Пометка;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ТипЗнч(СтрокаДерева.КоллекцияТЧ) = Тип("СписокЗначений") Тогда
		
		ПодписатьФайлИзШаблона = СтрокаДерева.КоллекцияТЧ.НайтиПоЗначению("НужнаПодпись");
		ПодписатьФайл = ?(ПодписатьФайлИзШаблона = Неопределено, ПодписатьФайл, ВРег(ПодписатьФайлИзШаблона) = "ДА");	
		
		ВидДокументаИзШаблона = СтрокаДерева.КоллекцияТЧ.НайтиПоЗначению("ИсточникВидДокумента");
		Если НЕ ВидДокументаИзШаблона = Неопределено И Строка(ВидДокументаИзШаблона) = "ОбменКвитанциями_Исходящий" Тогда 
			ТипДокумента = "ОбменКвитанциями";
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ИспользоватьШаблон Тогда
		Продолжить;	
	КонецЕсли;
	
	Если ИспользоватьШаблон Тогда
		
		Попытка
			
			МассивСтрок = Новый Массив;
			
			Если ЗначениеЗаполнено(ТекстЗапроса) Тогда
				
				Запрос = Новый Запрос;
				Запрос.Текст = ТекстЗапроса;
				Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());					
				
				РезультатЗапроса = Запрос.Выполнить();	
				Выборка = РезультатЗапроса.Выбрать();	
				Пока Выборка.Следующий() Цикл
					
					СтруктураСтроки = Новый Структура;
					СтруктураСтроки.Вставить("Документ"			, Выборка.Документ);
					СтруктураСтроки.Вставить("СтатусОбработкиДокумента"	, Выборка.СтатусОбработкиДокумента);     
					
					//Ошибка!! Нужно в выборку исх запросов добавить 2 поля (смотри шаблоны запросов исх документов)
					СтруктураСтроки.Вставить("Проведен"			, Выборка.Проведен);  
					СтруктураСтроки.Вставить("ПредставлениеДокумента" , Выборка.ПредставлениеДокумента); 
					
					МассивСтрок.Добавить(СтруктураСтроки);	
				КонецЦикла;
			КонецЕсли;	
			//МассивСтруктур = СформироватьДокументыXML(МассивСтрок, МассивЛогаСобытий, ЭтоРегламентноеЗадание, ТипДокумента,,, ИмяШаблона,);
			//ОтправитьФайлы(МассивСтруктур, ТипДокумента, МассивЛогаСобытий, Истина, Истина, Неопределено);
			
			ЭтоНовыеДокументы = Истина;
			ОтправитьВсеФайлыНаСервере(МассивСтрок, ТипДокумента, ЭтоРегламентноеЗадание, ПодписатьФайл, ЭтоНовыеДокументы, СтруктураЛога, СтрокаДерева.ИмяКнопки);
			
		Исключение
			
			ТекстЛогаСобытий = "Ошибка при выполнении регламентного задания: " + ИмяШаблона + "! - " + ОписаниеОшибки();
			ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Ошибка", "Регламентное задание");
			МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
			
		КонецПопытки;	
		
	КонецЕсли;
	
КонецЦикла; 


//Произвольные
Для Каждого СтрокаДерева Из ДеревоXMLПроизвольные.Строки Цикл 
	
	ИмяШаблона = СтрокаДерева.ИмяКнопки;    
	Роль = "ПроизвольныйСценарий"; 
	ИспользоватьШаблон = Ложь;
	
	Если СтрокаДерева.ИмяКнопки = "ПроизвольныйСтандартныйСценарий" Тогда
		Продолжить;
	КонецЕсли;  
	
	Для каждого СтрРегламента Из СтрокаДерева.Регламент Цикл
		Если СтрРегламента.Представление = "ТекстЗапроса" Тогда 
			Выполнить(СтрРегламента.Значение); 
			ИспользоватьШаблон = СтрРегламента.Пометка;
			Прервать;
		КонецЕсли;
	КонецЦикла; 
	
	Если НЕ ИспользоватьШаблон Тогда
		Продолжить;	
	КонецЕсли;
	
	Если ИспользоватьШаблон Тогда
			
		Попытка
			
			ВыполнитьПроизвольныйСценарийПоИмениКнопки(ИмяШаблона, Роль, МассивЛогаСобытий); 
			
		Исключение
			ТекстЛогаСобытий = "Ошибка при выполнении регламентного задания: " + ИмяШаблона + "! - " + ОписаниеОшибки();
			ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Ошибка", "Регламентное задание");
			МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
			
		КонецПопытки;   
		
	КонецЕсли;
	
КонецЦикла;
</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">5</lastId>
			<item>
				<value xsi:type="xs:string">Прайс-лист</value>
				<id xsi:type="xs:decimal">0</id>
			</item>
			<item>
				<value xsi:type="xs:string">Поставщик</value>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">1</id>
			</item>
			<item>
				<value xsi:type="xs:string">Неструкт. докум.</value>
				<id xsi:type="xs:decimal">2</id>
			</item>
			<item>
				<value xsi:type="xs:string">Покупатель</value>
				<id xsi:type="xs:decimal">3</id>
			</item>
			<item>
				<value xsi:type="xs:string">Синоним</value>
				<presentation>Произвольный стандартный сценарий</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">4</id>
			</item>
			<item>
				<value xsi:type="xs:string">ИмяКнопки</value>
				<presentation>ПроизвольныйСтандартныйСценарий</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">5</id>
			</item>
		</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">1</lastId>
			<item>
				<value xsi:type="xs:string"/>
				<presentation>ТекстЗапроса</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">0</id>
			</item>
			<item>
				<value xmlns:d5p1="http://v8.1c.ru/8.1/data/enterprise" xsi:type="d5p1:JobSchedule" BeginDate="2024-05-08" EndDate="0001-01-01" BeginTime="11:00:00" EndTime="23:00:00" CompletionTime="00:00:00" CompletionInterval="0" RepeatPeriodInDay="180" RepeatPause="0" WeekDayInMonth="0" DayInMonth="0" WeeksPeriod="1" DaysRepeatPeriod="0">
					<d5p1:WeekDays>1 2 3 4 5 6 7</d5p1:WeekDays>
					<d5p1:Months/>
				</value>
				<presentation>Расписание</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">1</id>
			</item>
		</Value>
		<Value xsi:type="xs:string">ПроизвольныйСтандартныйСценарий</Value>
	</row>
</ValueTree>