<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ИмяКнопки</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Формула</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Регламент</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">false</Value>
		<Value xsi:type="xs:string">Автосверка ЮЗД</Value>
		<Value xsi:type="xs:string">ПроизвольныйАвтосверкаЮЗД</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:string">	    //&lt;Служебные переменные&gt;
		ВыбранныеСтроки = ?(ВыбранныеСтроки = Неопределено, Новый Массив, ВыбранныеСтроки);      
		
		МассивДокументов = Новый Массив;
		Для Каждого Стр Из ВыбранныеСтроки Цикл
			МассивДокументов.Добавить(Стр.Документ);
		КонецЦикла;
		
		Дельта = Настройка_Параметр_Прочитать("EDI_ДопустимаяДельтаПриРасхожении"	 , "0,01");
		
		СверитьПоСтрочно = Настройка_Параметр_Прочитать("EDI_ПострочнаяСверкаДанных" , Ложь);
		
		ЕстьРасхождения = Ложь;
		//&lt;/Служебные переменные&gt;
		
		КвалификаторСтрок 	= Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная);
		ОписаниеТипаЧисло 	= Новый ОписаниеТипов("Число");
		ОписаниеТипаСтрока 	= Новый ОписаниеТипов("Строка", КвалификаторСтрок);
		ОписаниеТипаDR_Документ = Новый ОписаниеТипов("ДокументСсылка.DR_Документ");  
		
		ВидыДокументовУПД = Новый Массив;
		DR_EDI_ОбщегоНазначения.ПолучитьПервичныеВидыДокументовЮЗД(ВидыДокументовУПД);
		
		ВидыДокументовИУПДУКД = Новый Массив;
		DR_EDI_ОбщегоНазначения.ПолучитьИсправительныеВидыДокументовЮЗД(ВидыДокументовИУПДУКД);
		DR_EDI_ОбщегоНазначения.ПолучитьКорректировочныеВидыДокументовЮЗД(ВидыДокументовИУПДУКД);
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	DR_События_ЮЗД.Документ КАК DR_Документ,
		               |	ТЧ_СвеТов.ХранилищеЗначения КАК ХЗ_ДокументТЧ,
		               |	ЕСТЬNULL(Номер_накладной.Значение, НЕОПРЕДЕЛЕНО) КАК НомерНакладной,
		               |	DR_События_ЮЗД.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
		               |	ЕСТЬNULL(ТЧ_НомерИсхСЧФ_УКД.Значение, НЕОПРЕДЕЛЕНО) КАК НомерИсхСЧФ__УКД,
		               |	DR_События_ЮЗД.ВидДокумента КАК ВидДокумента
		               |ПОМЕСТИТЬ втОсновная
		               |ИЗ
		               |	РегистрСведений.DR_События КАК DR_События_ЮЗД
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК ТЧ_СвеТов
		               |		ПО DR_События_ЮЗД.Документ = ТЧ_СвеТов.Ссылка
		               |			И (ТЧ_СвеТов.Реквизит = ""ДокументТЧ"")
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК ТЧ_Сверено
		               |		ПО DR_События_ЮЗД.Документ = ТЧ_Сверено.Ссылка
		               |			И (ТЧ_Сверено.Реквизит = ""Сверено"")
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК Номер_накладной
		               |		ПО DR_События_ЮЗД.Документ = Номер_накладной.Ссылка
		               |			И (Номер_накладной.Реквизит = ""Документ_СвПродПер_СвПер_ТранГруз_ТранНакл_НомТранНакл"")
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК ТЧ_НомерИсхСЧФ_УКД
		               |		ПО DR_События_ЮЗД.Документ = ТЧ_НомерИсхСЧФ_УКД.Ссылка
		               |			И (ТЧ_НомерИсхСЧФ_УКД.Реквизит = ""Документ_СвКСчФ_СчФ_НомерСчФ"")
		               |ГДЕ
		               |	DR_События_ЮЗД.ВидДокумента В(&amp;ВидыДокументовЮЗД)
		               |	И DR_События_ЮЗД.Документ.Статус = ""Обработан""
		               |	И DR_События_ЮЗД.Документ.ПометкаУдаления = ЛОЖЬ
		               |	И ЕСТЬNULL(ТЧ_Сверено.Значение, ЛОЖЬ) = ЛОЖЬ
		               |	И DR_События_ЮЗД.Документ В(&amp;МассивДокументовЮЗД)
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	втОсновная.DR_Документ КАК DR_Документ,
		               |	втОсновная.DR_Документ.ВидДокумента КАК ВидДокумента,
		               |	втОсновная.ХЗ_ДокументТЧ КАК ХЗ_ДокументТЧ,
		               |	ВЫРАЗИТЬ(DR_СобытияНакладные.Документ КАК Документ.ПоступлениеТоваровУслуг) КАК НакладнаяВходящая,
		               |	ВЫРАЗИТЬ(DR_СобытияНакладные.Документ КАК Документ.ПоступлениеТоваровУслуг).СуммаДокумента КАК НакладнаяСуммаСНДС,
		               |	ВЫРАЗИТЬ(DR_СобытияНакладные.Документ КАК Документ.ПоступлениеТоваровУслуг).Номер КАК НакладнаяНомер,
		               |	ВЫРАЗИТЬ(DR_СобытияНакладные.Документ КАК Документ.ПоступлениеТоваровУслуг).СуммаВключаетНДС КАК СуммаВключаетНДС
		               |ИЗ
		               |	втОсновная КАК втОсновная
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_СобытияНакладные
		               |		ПО втОсновная.ИдентификаторЦепочки = DR_СобытияНакладные.ИдентификаторЦепочки
		               |			И (DR_СобытияНакладные.ВидДокумента = ""Накладная_Входящая"")
		               |			И (втОсновная.НомерНакладной = ВЫРАЗИТЬ(DR_СобытияНакладные.Документ КАК Документ.ПоступлениеТоваровУслуг).НомерВходящегоДокумента)
		               |ГДЕ
		               |	DR_СобытияНакладные.Документ ЕСТЬ НЕ NULL 
		               |	И ВЫРАЗИТЬ(DR_СобытияНакладные.Документ КАК Документ.ПоступлениеТоваровУслуг).Проведен
		               |	И втОсновная.ВидДокумента В(&amp;ВидыДокументовУПД)
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	втОсновная.DR_Документ,
		               |	втОсновная.DR_Документ.ВидДокумента,
		               |	втОсновная.ХЗ_ДокументТЧ,
		               |	КорректировкаПоступления.Ссылка,
		               |	КорректировкаПоступления.СуммаДокумента,
		               |	КорректировкаПоступления.Номер,
		               |	КорректировкаПоступления.СуммаВключаетНДС
		               |ИЗ
		               |	втОсновная КАК втОсновная
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_События_ИсхСЧФ_УКД
		               |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученный
		               |				ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаПоступления КАК КорректировкаПоступления
		               |				ПО ((ВЫРАЗИТЬ(СчетФактураПолученный.ДокументОснование КАК Документ.ПоступлениеТоваровУслуг)) = (ВЫРАЗИТЬ(КорректировкаПоступления.ДокументПоступления КАК Документ.ПоступлениеТоваровУслуг)))
		               |			ПО DR_События_ИсхСЧФ_УКД.Документ = СчетФактураПолученный.Ссылка
		               |		ПО втОсновная.ИдентификаторЦепочки = DR_События_ИсхСЧФ_УКД.ИдентификаторЦепочки
		               |			И (DR_События_ИсхСЧФ_УКД.ВидДокумента = ""СчетФактура_Входящий"")
		               |			И (втОсновная.НомерИсхСЧФ__УКД = ВЫРАЗИТЬ(DR_События_ИсхСЧФ_УКД.Документ КАК Документ.СчетФактураПолученный).НомерВходящегоДокумента)
		               |ГДЕ
		               |	DR_События_ИсхСЧФ_УКД.Документ ЕСТЬ НЕ NULL 
		               |	И КорректировкаПоступления.Проведен
		               |	И втОсновная.ВидДокумента В(&amp;ВидыДокументовИУПДУКД)";
		
		Если Не ВыбранныеСтроки.Количество() Тогда 
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"И DR_События_ЮЗД.Документ В(&amp;МассивДокументовЮЗД)","");   	  
		КонецЕсли;
		Запрос.УстановитьПараметр("МассивДокументовЮЗД", МассивДокументов);	
		Запрос.УстановитьПараметр("ВидыДокументовЮЗД", Вычислить("DR_EDI_ОбщегоНазначения.ВидыДокументовВходящихЮЗД()")); 
		Запрос.УстановитьПараметр("ВидыДокументовУПД", ВидыДокументовУПД);		
		Запрос.УстановитьПараметр("ВидыДокументовИУПДУКД", ВидыДокументовИУПДУКД); 
		
		ВыборкаЮЗД = Запрос.Выполнить().Выбрать();
		
		СписокТиповДокументов = Новый Массив;
		СписокТиповДокументов.Добавить(Тип("ДокументСсылка.ПоступлениеТоваровУслуг"));
		СписокТиповДокументов.Добавить(Тип("ДокументСсылка.КорректировкаПоступления"));
		
		
		ТаблицаСведТов = Новый ТаблицаЗначений;
		
		ТаблицаСведТов.Колонки.Добавить("DR_Документ" 			, ОписаниеТипаDR_Документ); 
		ТаблицаСведТов.Колонки.Добавить("НакладнаяВходящая" 	, Новый ОписаниеТипов(СписокТиповДокументов));				
		ТаблицаСведТов.Колонки.Добавить("НакладнаяНомер"		, ОписаниеТипаСтрока);
		ТаблицаСведТов.Колонки.Добавить("НакладнаяСуммаСНДС"	, ОписаниеТипаЧисло); 
		ТаблицаСведТов.Колонки.Добавить("СуммаВключаетНДС"		, Новый ОписаниеТипов("Булево"));
		ТаблицаСведТов.Колонки.Добавить("КолТов"				, ОписаниеТипаЧисло); //Количество			
		ТаблицаСведТов.Колонки.Добавить("СтТовБезНДС"			, ОписаниеТипаЧисло); //Сумма без НДС
		ТаблицаСведТов.Колонки.Добавить("СтТовУчНал"			, ОписаниеТипаЧисло); //Сумма с НДС
		ТаблицаСведТов.Колонки.Добавить("СумНал"				, ОписаниеТипаЧисло); //Сумма НДС						
		ТаблицаСведТов.Колонки.Добавить("Номенклатура"			, Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		ТаблицаСведТов.Колонки.Добавить("СтавкаНДС"				, ОписаниеТипаЧисло);
		
		ТаблицаРезультатСверки = Новый ТаблицаЗначений;
		ТаблицаРезультатСверки.Колонки.Добавить("DR_Документ" 	  	, ОписаниеТипаDR_Документ);
		ТаблицаРезультатСверки.Колонки.Добавить("ТекстУточнения" 	, Новый ОписаниеТипов("Строка"));
		
		Пока ВыборкаЮЗД.Следующий() Цикл			
			
			МассивСведТов = ВыборкаЮЗД.ХЗ_ДокументТЧ.Получить();
			
			Для Каждого ЭлМассива Из МассивСведТов Цикл
				
				НоваяСтрока = ТаблицаСведТов.Добавить();
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаЮЗД);
				
				ЭлМассива.Свойство("Номенклатура" , НоваяСтрока.Номенклатура);
				
				Если Лев(ВыборкаЮЗД.ВидДокумента, 8) = "ON_NSCHF" Тогда
					
					ЭлМассива.Свойство("Документ_ТаблСчФакт_СведТов_КолТов"			, НоваяСтрока.КолТов);					
					ЭлМассива.Свойство("Документ_ТаблСчФакт_СведТов_СтТовБезНДС"	, НоваяСтрока.СтТовБезНДС);
					ЭлМассива.Свойство("Документ_ТаблСчФакт_СведТов_СтТовУчНал"		, НоваяСтрока.СтТовУчНал);
					ЭлМассива.Свойство("Документ_ТаблСчФакт_СведТов_СумНал_СумНал"	, НоваяСтрока.СумНал);
					ЭлМассива.Свойство("Документ_ТаблСчФакт_СведТов_НалСт"			, НоваяСтрока.СтавкаНДС);
					
				Иначе
					
					ЭлМассива.Свойство("Документ_ТаблКСчФ_СведТов_КолТовПосле"					, НоваяСтрока.КолТов);					
					ЭлМассива.Свойство("Документ_ТаблКСчФ_СведТов_СтТовБезНДС_СтоимПослеИзм"	, НоваяСтрока.СтТовБезНДС);
					ЭлМассива.Свойство("Документ_ТаблКСчФ_СведТов_СтТовУчНал_СтоимПослеИзм"		, НоваяСтрока.СтТовУчНал);
					ЭлМассива.Свойство("Документ_ТаблКСчФ_СведТов_СумНалПосле_СумНДС"			, НоваяСтрока.СумНал);
					ЭлМассива.Свойство("Документ_ТаблКСчФ_СведТов_НалСтПосле"					, НоваяСтрока.СтавкаНДС);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
		Запрос = Новый Запрос;
		Запрос.Текст ="ВЫБРАТЬ
		|	ТаблицаСведТов.DR_Документ КАК DR_Документ,
		|	ТаблицаСведТов.НакладнаяВходящая КАК НакладнаяВходящая,
		|	ТаблицаСведТов.НакладнаяНомер КАК НакладнаяНомер,
		|	ТаблицаСведТов.НакладнаяСуммаСНДС КАК НакладнаяСуммаСНДС,
		|	ТаблицаСведТов.КолТов КАК КолТов,
		|	ТаблицаСведТов.СтТовУчНал КАК СтТовУчНал,
		|	ТаблицаСведТов.СумНал КАК СумНал
		|ПОМЕСТИТЬ втСведТов
		|ИЗ
		|	&amp;ТаблицаСведТов КАК ТаблицаСведТов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втСведТов.DR_Документ КАК DR_Документ,
		|	втСведТов.НакладнаяВходящая КАК НакладнаяВходящая,
		|	втСведТов.НакладнаяНомер КАК НакладнаяНомер,
		|	втСведТов.НакладнаяСуммаСНДС КАК НакладнаяСуммаСНДС,
		|	СУММА(втСведТов.КолТов) КАК КолТов,
		|	СУММА(втСведТов.СтТовУчНал) КАК СтТовУчНал,
		|	СУММА(втСведТов.СумНал) КАК СумНал
		|ПОМЕСТИТЬ втГруппировкаСведТов
		|ИЗ
		|	втСведТов КАК втСведТов
		|
		|СГРУППИРОВАТЬ ПО
		|	втСведТов.DR_Документ,
		|	втСведТов.НакладнаяВходящая,
		|	втСведТов.НакладнаяНомер,
		|	втСведТов.НакладнаяСуммаСНДС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	DR_СведТов.DR_Документ КАК DR_Документ,
		|	DR_СведТов.НакладнаяНомер КАК НакладнаяНомер,
		|	DR_СведТов.КолТов КАК КолТов,
		|	DR_СведТов.СтТовУчНал КАК СтТовУчНал,
		|	DR_СведТов.СумНал КАК СумНал,
		|	DR_СведТов.НакладнаяСуммаСНДС КАК НакладнаяСуммаСНДС,
		|	СУММА(ЕСТЬNULL(ТЧ_ПоступлениеТовары.Количество, 0)) КАК НакладнаяКоличество,
		|	СУММА(ЕСТЬNULL(ТЧ_ПоступлениеТовары.СуммаНДС, 0)) КАК НакладнаяСуммаНДС
		|ПОМЕСТИТЬ втГруппировкаНакладная
		|ИЗ
		|	втГруппировкаСведТов КАК DR_СведТов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ТЧ_ПоступлениеТовары
		|		ПО DR_СведТов.НакладнаяВходящая = ТЧ_ПоступлениеТовары.Ссылка
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(DR_СведТов.НакладнаяВходящая) = ТИП(Документ.ПоступлениеТоваровУслуг)
		|
		|СГРУППИРОВАТЬ ПО
		|	DR_СведТов.DR_Документ,
		|	DR_СведТов.НакладнаяНомер,
		|	DR_СведТов.КолТов,
		|	DR_СведТов.СтТовУчНал,
		|	DR_СведТов.СумНал,
		|	DR_СведТов.НакладнаяСуммаСНДС
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	DR_СведТов.DR_Документ,
		|	DR_СведТов.НакладнаяНомер,
		|	DR_СведТов.КолТов,
		|	DR_СведТов.СтТовУчНал,
		|	DR_СведТов.СумНал,
		|	DR_СведТов.НакладнаяСуммаСНДС,
		|	СУММА(ЕСТЬNULL(ТЧ_КорректировкаТовары.Количество, 0)),
		|	СУММА(ЕСТЬNULL(ТЧ_КорректировкаТовары.СуммаНДС, 0))
		|ИЗ
		|	втГруппировкаСведТов КАК DR_СведТов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаПоступления.Товары КАК ТЧ_КорректировкаТовары
		|		ПО DR_СведТов.НакладнаяВходящая = ТЧ_КорректировкаТовары.Ссылка
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(DR_СведТов.НакладнаяВходящая) = ТИП(Документ.КорректировкаПоступления)
		|
		|СГРУППИРОВАТЬ ПО
		|	DR_СведТов.DR_Документ,
		|	DR_СведТов.НакладнаяНомер,
		|	DR_СведТов.КолТов,
		|	DR_СведТов.СтТовУчНал,
		|	DR_СведТов.СумНал,
		|	DR_СведТов.НакладнаяСуммаСНДС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втДанныеГруппировки.DR_Документ КАК DR_Документ,
		|	втДанныеГруппировки.НакладнаяНомер КАК НакладнаяНомер,
		|	втДанныеГруппировки.СтТовУчНал КАК СтТовУчНал,
		|	втДанныеГруппировки.СумНал КАК СумНал,
		|	втДанныеГруппировки.КолТов КАК КолТов,
		|	втДанныеГруппировки.НакладнаяКоличество КАК НакладнаяКоличество,
		|	втДанныеГруппировки.НакладнаяСуммаСНДС КАК НакладнаяСуммаСНДС,
		|	втДанныеГруппировки.НакладнаяСуммаНДС КАК НакладнаяСуммаНДС,
		|	ВЫБОР
		|		КОГДА втДанныеГруппировки.НакладнаяСуммаСНДС - втДанныеГруппировки.СтТовУчНал МЕЖДУ &amp;ДельтаОтрицательная И &amp;ДельтаПоложительная
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьРасхождениеПоСумме_с_НДС,
		|	ВЫБОР
		|		КОГДА втДанныеГруппировки.НакладнаяСуммаНДС - втДанныеГруппировки.СумНал МЕЖДУ &amp;ДельтаОтрицательная И &amp;ДельтаПоложительная
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьРасхождениеПоСуммеНДС,
		|	ВЫБОР
		|		КОГДА втДанныеГруппировки.КолТов &lt;&gt; втДанныеГруппировки.НакладнаяКоличество
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЕстьРасхождениеПоКоличеству
		|ИЗ
		|	втГруппировкаНакладная КАК втДанныеГруппировки";
		
		Запрос.УстановитьПараметр("ТаблицаСведТов" 		, ТаблицаСведТов);
		Запрос.УстановитьПараметр("ДельтаОтрицательная" , Число("-" + Дельта));
		Запрос.УстановитьПараметр("ДельтаПоложительная" , Число(Дельта));
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		DR_ДокументПредыдущий = Неопределено;
		
		Пока Выборка.Следующий() Цикл
			
			ТекстУточнения = "";
			
			ЕСЛИ Выборка.ЕстьРасхождениеПоСумме_с_НДС 
				ИЛИ Выборка.ЕстьРасхождениеПоСуммеНДС Тогда	
				
				ЕстьРасхождения = Истина;
				
				ТекстУточнения = "Проверьте суммы документов: " + Символы.ПС +
				"Сумма Всего 1С " + Выборка.НакладнаяНомер + " = " + Выборка.НакладнаяСуммаСНДС + "; " +
				"Сумма Всего УПД = " + Выборка.СтТовУчНал + "; " + Символы.ПС +
				"Сумма НДС 1С = " + Выборка.НакладнаяСуммаНДС + "; " +
				"Сумма НДС УПД =  " + Выборка.СумНал;
				
			КонецЕсли;
			
			Если Выборка.ЕстьРасхождениеПоКоличеству Тогда
				
				ЕстьРасхождения = Истина;
				
				ТекстУточнения = ТекстУточнения + ?(ЗначениеЗаполнено(ТекстУточнения), Символы.ПС + Символы.ПС, "") +
				"Проверьте количество в документах: " + Символы.ПС + 
				"Количество Всего 1С документ = " + Выборка.НакладнаяКоличество + "; " +
				"Количество Всего УПД (XML) = " + Выборка.КолТов + "; ";
				
			КонецЕсли;
			
			Если DR_ДокументПредыдущий &lt;&gt; Выборка.DR_Документ Тогда
				
				НоваяСтрока = ТаблицаРезультатСверки.Добавить();
				НоваяСтрока.DR_Документ = Выборка.DR_Документ; 
				НоваяСтрока.ТекстУточнения = ?(ЗначениеЗаполнено(ТекстУточнения),ТекстУточнения + Символы.ПС,"");
				
			КонецЕсли;
			
			DR_ДокументПредыдущий = Выборка.DR_Документ;				
			
		КонецЦикла;
		
		Если ЕстьРасхождения И СверитьПоСтрочно Тогда
			
			// построчная проверка
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	ТаблицаСведТов.DR_Документ КАК DR_Документ,
			               |	ТаблицаСведТов.НакладнаяВходящая КАК НакладнаяВходящая,
			               |	ТаблицаСведТов.СуммаВключаетНДС КАК СуммаВключаетНДС,
			               |	ТаблицаСведТов.Номенклатура КАК Номенклатура,
			               |	ТаблицаСведТов.СтавкаНДС КАК СтавкаНДС,
			               |	ТаблицаСведТов.КолТов КАК КолТов,
			               |	ТаблицаСведТов.СтТовУчНал КАК СтТовУчНал,
			               |	ТаблицаСведТов.СумНал КАК СумНал
			               |ПОМЕСТИТЬ втТаблицаСведТов
			               |ИЗ
			               |	&amp;ТаблицаСведТов КАК ТаблицаСведТов
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	втТаблицаСведТов.НакладнаяВходящая КАК Ссылка,
			               |	ПоступлениеТовары.Номенклатура КАК Номенклатура,
			               |	ПоступлениеТовары.Количество КАК Количество,
			               |	ВЫБОР
			               |		КОГДА ПоступлениеТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
			               |			ТОГДА 10
			               |		КОГДА ПоступлениеТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
			               |			ТОГДА 20
			               |		ИНАЧЕ 0
			               |	КОНЕЦ КАК СтавкаНДСЧислом,
			               |	ВЫБОР
			               |		КОГДА втТаблицаСведТов.СуммаВключаетНДС
			               |			ТОГДА ПоступлениеТовары.Сумма
			               |		ИНАЧЕ ПоступлениеТовары.Сумма + ПоступлениеТовары.СуммаНДС
			               |	КОНЕЦ КАК СуммаСНДС,
			               |	ПоступлениеТовары.СуммаНДС КАК СуммаНДС
			               |ПОМЕСТИТЬ втПоступлениеТовары
			               |ИЗ
			               |	втТаблицаСведТов КАК втТаблицаСведТов
			               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТовары
			               |		ПО втТаблицаСведТов.НакладнаяВходящая = ПоступлениеТовары.Ссылка
			               |ГДЕ
			               |	ТИПЗНАЧЕНИЯ(втТаблицаСведТов.НакладнаяВходящая) = ТИП(Документ.ПоступлениеТоваровУслуг)
			               |
			               |ОБЪЕДИНИТЬ ВСЕ
			               |
			               |ВЫБРАТЬ
			               |	втТаблицаСведТов.НакладнаяВходящая,
			               |	КорректировкаТовары.Номенклатура,
			               |	КорректировкаТовары.Количество,
			               |	ВЫБОР
			               |		КОГДА КорректировкаТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
			               |			ТОГДА 10
			               |		КОГДА КорректировкаТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
			               |			ТОГДА 20
			               |		ИНАЧЕ 0
			               |	КОНЕЦ,
			               |	ВЫБОР
			               |		КОГДА втТаблицаСведТов.СуммаВключаетНДС
			               |			ТОГДА КорректировкаТовары.Сумма
			               |		ИНАЧЕ КорректировкаТовары.Сумма + КорректировкаТовары.СуммаНДС
			               |	КОНЕЦ,
			               |	КорректировкаТовары.СуммаНДС
			               |ИЗ
			               |	втТаблицаСведТов КАК втТаблицаСведТов
			               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаПоступления.Товары КАК КорректировкаТовары
			               |		ПО втТаблицаСведТов.НакладнаяВходящая = КорректировкаТовары.Ссылка
			               |ГДЕ
			               |	ТИПЗНАЧЕНИЯ(втТаблицаСведТов.НакладнаяВходящая) = ТИП(Документ.КорректировкаПоступления)
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ РАЗЛИЧНЫЕ
			               |	втТаблицаСведТов.DR_Документ КАК DR_Документ,
			               |	ЕСТЬNULL(втПоступлениеТовары.Номенклатура, втТаблицаСведТов.Номенклатура) КАК Номенклатура,
			               |	ЕСТЬNULL(втПоступлениеТовары.Количество, 0) КАК Накладная_Количество,
			               |	ЕСТЬNULL(втПоступлениеТовары.СуммаСНДС, 0) КАК Накладная_СуммаСНДС,
			               |	ЕСТЬNULL(втПоступлениеТовары.СуммаНДС, 0) КАК Накладная_СуммаНДС,
			               |	ЕСТЬNULL(втПоступлениеТовары.СтавкаНДСЧислом, 0) КАК Накладная_СтавкаНДС,
			               |	ЕСТЬNULL(втТаблицаСведТов.КолТов, 0) КАК ЮЗД_Количество,
			               |	ЕСТЬNULL(втТаблицаСведТов.СтТовУчНал, 0) КАК ЮЗД_СуммаСНДС,
			               |	ЕСТЬNULL(втТаблицаСведТов.СумНал, 0) КАК ЮЗД_СуммаНДС,
			               |	ЕСТЬNULL(втТаблицаСведТов.СтавкаНДС, 0) КАК ЮЗД_СтавкаНДС
			               |ИЗ
			               |	втТаблицаСведТов КАК втТаблицаСведТов
			               |		ПОЛНОЕ СОЕДИНЕНИЕ втПоступлениеТовары КАК втПоступлениеТовары
			               |		ПО втТаблицаСведТов.НакладнаяВходящая = втПоступлениеТовары.Ссылка
			               |			И втТаблицаСведТов.Номенклатура = втПоступлениеТовары.Номенклатура"; 
			
			Запрос.УстановитьПараметр("ТаблицаСведТов", ТаблицаСведТов);
			
			ВыборкаПострочный = Запрос.Выполнить().Выбрать();
			
			ТаблицаРезультатСверки.Индексы.Добавить("DR_Документ");
			
			ЗаголовокТекстРасхождений = "Результат построчной проверки.";
			
			DR_ДокументПредыдущий = Неопределено;
			
			Пока ВыборкаПострочный.Следующий() Цикл 
				
				ТекстРасхождений = "";
				
				Если ВыборкаПострочный.Накладная_Количество = ВыборкаПострочный.ЮЗД_Количество
					И ВыборкаПострочный.Накладная_СуммаСНДС = ВыборкаПострочный.ЮЗД_СуммаСНДС
					И ВыборкаПострочный.Накладная_СуммаНДС = ВыборкаПострочный.ЮЗД_СуммаНДС 
					И ВыборкаПострочный.Накладная_СтавкаНДС = ВыборкаПострочный.ЮЗД_СтавкаНДС Тогда
					
					Продолжить;
				КонецЕсли;
				
				Если DR_ДокументПредыдущий &lt;&gt; ВыборкаПострочный.DR_Документ Тогда
					
					DR_ДокументПредыдущий = ВыборкаПострочный.DR_Документ;
					
					НайденнаяСтрока = ТаблицаРезультатСверки.Найти(DR_ДокументПредыдущий, "DR_Документ");
					
					НайденнаяСтрока.ТекстУточнения = НайденнаяСтрока.ТекстУточнения + Символы.ПС + ЗаголовокТекстРасхождений; 
					
				КонецЕсли;
				
				НоменклатураПредставление = Строка(ВыборкаПострочный.Номенклатура) + ":";
				
				ТекстРасхождений = ТекстРасхождений + ?(ЗначениеЗаполнено(ТекстРасхождений), Символы.ПС, "") 
				+ "По Номенклатуре " + НоменклатураПредставление + Символы.ПС;
				
				Если ВыборкаПострочный.Накладная_Количество &lt;&gt; ВыборкаПострочный.ЮЗД_Количество Тогда
					
					ТекстРасхождений = ТекстРасхождений + " - не совпадает количество." 
					+ " в ПН количество = " + ВыборкаПострочный.Накладная_Количество 
					+ ", в УПД XML количество = " + ВыборкаПострочный.ЮЗД_Количество + Символы.ПС;
				КонецЕсли;
				
				Если ВыборкаПострочный.Накладная_СуммаНДС &lt;&gt; ВыборкаПострочный.ЮЗД_СуммаНДС Тогда
					
					ТекстРасхождений = ТекстРасхождений + " - не совпадает Сумма НДС." 
					+ " в ПН Сумма НДС = " + ВыборкаПострочный.Накладная_СуммаНДС 
					+ ", в УПД XML Сумма НДС = " + ВыборкаПострочный.ЮЗД_СуммаНДС + Символы.ПС;
				КонецЕсли;
				
				Если ВыборкаПострочный.Накладная_СуммаСНДС &lt;&gt; ВыборкаПострочный.ЮЗД_СуммаСНДС Тогда
					
					ТекстРасхождений = ТекстРасхождений + " - не совпадает Сумма c НДС." 
					+ " в ПН Сумма с НДС = " + ВыборкаПострочный.Накладная_СуммаСНДС
					+ ", в УПД XML Сумма с НДС = " + ВыборкаПострочный.ЮЗД_СуммаСНДС + Символы.ПС; 
				КонецЕсли;
				
				Если ВыборкаПострочный.Накладная_СтавкаНДС &lt;&gt; ВыборкаПострочный.ЮЗД_СтавкаНДС Тогда
					
					ТекстРасхождений = ТекстРасхождений + " - не совпадает Ставка НДС." 
					+ " в ПН Ставка НДС = " + ВыборкаПострочный.Накладная_СтавкаНДС 
					+ ", в УПД XML Ставка НДС = " + ВыборкаПострочный.ЮЗД_СтавкаНДС + Символы.ПС; 
				КонецЕсли;					
				
				НайденнаяСтрока.ТекстУточнения = НайденнаяСтрока.ТекстУточнения + Символы.ПС + ТекстРасхождений;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Сч = 0;
		Для каждого Строка Из ТаблицаРезультатСверки Цикл
			
			DR_ДокументОбъект = Строка.DR_Документ.ПолучитьОбъект();
			
			DR_ДокументОбъект.Комментарий = Строка.ТекстУточнения;
			
			DR_ТабличнаяЧасть = DR_ДокументОбъект.ДополнительныеРеквизиты;
			
			НайденнаяСтрока = DR_ТабличнаяЧасть.Найти("Сверено", "Реквизит");    
			
			Если НайденнаяСтрока = Неопределено Тогда
				НайденнаяСтрока = DR_ТабличнаяЧасть.Добавить();
				НайденнаяСтрока.Реквизит = "Сверено";  
			КонецЕсли;
			
			НайденнаяСтрока.Значение = Истина;
			
			DR_ДокументОбъект.Записать(); 
			
			Сч = Сч + 1;
			
		КонецЦикла; 
		
		ТекстЛогаСобытий = "Сверено "+ Сч + " документа ЮЗД";
		ЗаписьСтруктурыЛога = Вычислить("DR_EDI_ОбщегоНазначения.ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, ""Успешно"", ИмяСобытия)");
		МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);  
</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">5</lastId>
			<item>
				<value xsi:type="xs:string">Прайс-лист</value>
				<id xsi:type="xs:decimal">0</id>
			</item>
			<item>
				<value xsi:type="xs:string">Поставщик</value>
				<id xsi:type="xs:decimal">1</id>
			</item>
			<item>
				<value xsi:type="xs:string">Неструкт. докум.</value>
				<id xsi:type="xs:decimal">2</id>
			</item>
			<item>
				<value xsi:type="xs:string">Покупатель</value>
				<id xsi:type="xs:decimal">3</id>
			</item>
			<item>
				<value xsi:type="xs:string">Синоним</value>
				<presentation>Автосверка ЮЗД</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">4</id>
			</item>
			<item>
				<value xsi:type="xs:string">ИмяКнопки</value>
				<presentation>ПроизвольныйАвтосверкаЮЗД</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">5</id>
			</item>
		</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">1</lastId>
			<item>
				<value xsi:type="xs:string"/>
				<presentation>ТекстЗапроса</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">0</id>
			</item>
		</Value>
	</row>
</ValueTree>