<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Формула</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Регламент</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ИмяКнопки</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Создать реализацию товаров</Value>
		<Value xsi:type="xs:string">//&lt;Служебные переменные&gt;
ТипПриемника = "РеализацияТоваровУслуг";
ИмяСобытия   = "Создание документов по кнопке &lt;&lt;&lt; Создать реализацию товаров &gt;&gt;&gt;";

ОперацияЗапись = Ложь;
ЛогСобытий	   = ""; 

РазделятьРеализации = Настройка_Параметр_Прочитать("EDI_РазделятьРеализации", Ложь);

ВыбранныеСтроки = ?(ВыбранныеСтроки = Неопределено, Новый Массив, ВыбранныеСтроки);
//&lt;/Служебные переменные&gt;

КвалификаторСтрок = Новый КвалификаторыСтроки(36);

ТаблицаВыбранныхЗаписей = Новый ТаблицаЗначений;
ТаблицаВыбранныхЗаписей.Колонки.Добавить("Документ"				, Новый ОписаниеТипов("ДокументСсылка.СчетНаОплатуПокупателю"));
ТаблицаВыбранныхЗаписей.Колонки.Добавить("ИдентификаторЦепочки"	, Новый ОписаниеТипов("Строка",,,,КвалификаторСтрок));
ТаблицаВыбранныхЗаписей.Колонки.Добавить("Идентификатор"		, Новый ОписаниеТипов("Строка",,,,КвалификаторСтрок));

Для Каждого Элемент Из ВыбранныеСтроки Цикл
	
	Элемент.Вставить("Идентификатор", Элемент.Документ.УникальныйИдентификатор());
	
	НоваяСтрока = ТаблицаВыбранныхЗаписей.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Элемент);
	
КонецЦикла;

Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
|	ВыбранныеЗаписи.Документ КАК Документ,
|	ВыбранныеЗаписи.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
|	ВыбранныеЗаписи.Идентификатор КАК Идентификатор
|ПОМЕСТИТЬ ВыбранныеЗаписи
|ИЗ
|	&amp;ТаблицаВыбранныхЗаписей КАК ВыбранныеЗаписи
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ВыбранныеЗаписи.Документ КАК Документ,
|	ВыбранныеЗаписи.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
|	ВыбранныеЗаписи.Идентификатор КАК Идентификатор,
|	Заказ_События.ИдентификаторОснования КАК ИдентификаторОснования
|ПОМЕСТИТЬ ВТ_СобытияЗаказ
|ИЗ
|	ВыбранныеЗаписи КАК ВыбранныеЗаписи
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК Заказ_События
|		ПО ВыбранныеЗаписи.Идентификатор = Заказ_События.Идентификатор
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ВТ_СобытияЗаказ.Документ КАК Источник,
|	ВТ_СобытияЗаказ.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
|	ВЫРАЗИТЬ(ORDER_События.Документ КАК Документ.DR_Документ) КАК DR_Документ,
|	МАКСИМУМ(ЕСТЬNULL(Реализация_События.Документ, ЗНАЧЕНИЕ(Документ.РеализацияТоваровУслуг.ПустаяСсылка))) КАК ДокументРеализации
|ПОМЕСТИТЬ Итог
|ИЗ
|	ВТ_СобытияЗаказ КАК ВТ_СобытияЗаказ
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК ORDER_События
|		ПО ВТ_СобытияЗаказ.ИдентификаторЦепочки = ORDER_События.ИдентификаторЦепочки
|			И (ORDER_События.ВидДокумента = ""ORDER_Входящий"")
|			И ВТ_СобытияЗаказ.ИдентификаторОснования = ORDER_События.Идентификатор
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК Реализация_События
|		ПО ВТ_СобытияЗаказ.ИдентификаторЦепочки = Реализация_События.ИдентификаторЦепочки
|			И (Реализация_События.ВидДокумента = ""Накладная_исходящая"")
|
|СГРУППИРОВАТЬ ПО
|	ВТ_СобытияЗаказ.Документ,
|	ВТ_СобытияЗаказ.ИдентификаторЦепочки,
|	ВЫРАЗИТЬ(ORDER_События.Документ КАК Документ.DR_Документ)
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	Итог.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
|	Итог.Источник КАК Источник,
|	Итог.DR_Документ КАК DR_Документ,
|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРеализацияТоваров.Товары) КАК ВидОперации,
|	ВЫРАЗИТЬ(ДР_ДатаПоставки.Значение КАК ДАТА) КАК ДатаПоставки,
|	ВЫРАЗИТЬ(ДР_NUMBER.Значение КАК СТРОКА(35)) КАК ORDERNUMBER,
|	ВЫРАЗИТЬ(ДР_ДатаЭлектронногоДокумента.Значение КАК ДАТА) КАК ORDERDATE,
|	ВЫРАЗИТЬ(ДР_ДатаПоставки.Значение КАК ДАТА) КАК DELIVERYDATE,
|	ЕСТЬNULL(СчетНаОплатуПокупателю.Проведен, ЛОЖЬ) КАК ИсточникПроведен,
|	ЕСТЬNULL(СчетНаОплатуПокупателю.Комментарий, """") КАК ИсточникКомментарий,
|	ЕСТЬNULL(СчетНаОплатуПокупателю.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ИсточникДата,
|	ЕСТЬNULL(СчетНаОплатуПокупателю.Номер, """") КАК ИсточникНомер,
|	Итог.ДокументРеализации КАК ДокументРеализации
|ИЗ
|	Итог КАК Итог
|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетНаОплатуПокупателю КАК СчетНаОплатуПокупателю
|		ПО Итог.Источник = СчетНаОплатуПокупателю.Ссылка
|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК ДР_ДатаПоставки
|		ПО Итог.DR_Документ = ДР_ДатаПоставки.Ссылка
|			И (ДР_ДатаПоставки.Реквизит = ""ДатаПоставки"")
|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК ДР_NUMBER
|		ПО Итог.DR_Документ = ДР_NUMBER.Ссылка
|			И (ДР_NUMBER.Реквизит = ""NUMBER"")
|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК ДР_ДатаЭлектронногоДокумента
|		ПО Итог.DR_Документ = ДР_ДатаЭлектронногоДокумента.Ссылка
|			И (ДР_ДатаЭлектронногоДокумента.Реквизит = ""ДатаЭлектронногоДокумента"")";

Запрос.УстановитьПараметр("ТаблицаВыбранныхЗаписей", ТаблицаВыбранныхЗаписей);

Выборка = Запрос.Выполнить().Выбрать();

Пока Выборка.Следующий() Цикл
	
	Если КэшированныеЗначения = Неопределено Тогда
		КэшированныеЗначения = Новый Структура;
	КонецЕсли;
	
	// Получение общих для всех документов значений.
	ПроводитьРеализацию			= Неопределено;		
	Если НЕ КэшированныеЗначения.Свойство("ПроводитьРеализацию", ПроводитьРеализацию) Тогда
		ПроводитьРеализацию		= Настройка_Параметр_Прочитать("EDI_СоздаватьДокументРеализация1СПроведенным");
		КэшированныеЗначения.Вставить("ПроводитьРеализацию", ПроводитьРеализацию);
	КонецЕсли;
	
	ЗагружатьДатойПоставки		= Неопределено;		
	Если НЕ КэшированныеЗначения.Свойство("ЗагружатьДатойПоставки", ЗагружатьДатойПоставки) Тогда
		ЗагружатьДатойПоставки	= Настройка_Параметр_Прочитать("EDI_РеализацииСоздаватьДатойПоставки");
		КэшированныеЗначения.Вставить("ЗагружатьДатойПоставки", ЗагружатьДатойПоставки);
	КонецЕсли;
	
	Приемник = Документы[ТипПриемника].СоздатьДокумент();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Накладная,
	|	РеализацияТоваровУслуг.Проведен КАК Проведен,
	|	РеализацияТоваровУслуг.Представление КАК РеализацияПредставление
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &amp;Ссылка
	|	И НЕ РеализацияТоваровУслуг.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Ссылка", Выборка.ДокументРеализации);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаНакладная = РезультатЗапроса.Выбрать();
	
	ВыборкаНакладная.Следующий();
	
	НакладнаяПроведена		= ВыборкаНакладная.Проведен;  		
	Накладная			    = ВыборкаНакладная.Накладная;
	РеализацияПредставление = ВыборкаНакладная.РеализацияПредставление;
	
	Если ЗначениеЗаполнено(Накладная) Тогда
		
		Если НЕ НакладнаяПроведена И НЕ РазделятьРеализации Тогда
			
			ОперацияЗапись = Истина;
			
			Приемник = Накладная.ПолучитьОбъект();
			Приемник.Товары.Очистить();
			
		ИначеЕсли НЕ (НакладнаяПроведена И РазделятьРеализации) Тогда
			
			Причина = "Отмените проведение созданной %Реализация% или включите опцию ""Разделение реализации 1С"" в настройках интеграционного решения ""Docrobot"".";		
			
			ТекстЛогаСобытий = НСтр("ru = 'По документу %Счет% операция создания новой реализации или перезаписи существущей %Реализация% невыполнена. %Причина%'", 
								ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
								
			ТекстЛогаСобытий = СтрЗаменить(ТекстЛогаСобытий, "%Причина%"	, Причина);
			ТекстЛогаСобытий = СтрЗаменить(ТекстЛогаСобытий, "%Счет%"		, Строка(Выборка.Источник));
			ТекстЛогаСобытий = СтрЗаменить(ТекстЛогаСобытий, "%Реализация%"	, Строка(Накладная));
			
			ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Предупреждение", ИмяСобытия);
			МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
			
			Продолжить;				
		КонецЕсли;
		
	КонецЕсли;
	
	ДанныеЗаполнения = Новый Структура();
	ДанныеЗаполнения.Вставить("Основание"	, Выборка.Источник);
	ДанныеЗаполнения.Вставить("ВидОперации"	, Выборка.ВидОперации);
	
	Если Выборка.ИсточникПроведен Тогда
		Приемник.Заполнить(ДанныеЗаполнения);
	Иначе
		
		ТекстЛогаСобытий = НСтр("ru = '%Счет% не проведен. Реализация товаров и услуг не создана.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ТекстЛогаСобытий = СтрЗаменить(ТекстЛогаСобытий, "%Счет%", Строка(Выборка.Источник));
		
		ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Предупреждение", ИмяСобытия);
		МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
		
		Продолжить;
	КонецЕсли;
	
	ДатаРеализации = ?(ЗагружатьДатойПоставки, Выборка.DELIVERYDATE, ТекущаяДата());
	Приемник.Дата = ДатаРеализации;
	
	Если РазделятьРеализации Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
		|	СУММА(РеализацияТоваровУслугТовары.Количество) КАК Количество,
		|	РеализацияТоваровУслугТовары.Цена КАК Цена
		|ПОМЕСТИТЬ ТоварыРеализаций
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
		|ГДЕ
		|	РеализацияТоваровУслугТовары.Ссылка.СчетНаОплатуПокупателю = &amp;Источник
		|
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТоваровУслугТовары.Номенклатура,
		|	РеализацияТоваровУслугТовары.Цена
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетНаОплатуПокупателюТовары.Номенклатура КАК Номенклатура,
		|	СУММА(СчетНаОплатуПокупателюТовары.Количество) КАК Количество,
		|	СчетНаОплатуПокупателюТовары.Цена КАК Цена
		|ПОМЕСТИТЬ ТоварыСчетПокупателя
		|ИЗ
		|	Документ.СчетНаОплатуПокупателю.Товары КАК СчетНаОплатуПокупателюТовары
		|ГДЕ
		|	СчетНаОплатуПокупателюТовары.Ссылка = &amp;Источник
		|
		|СГРУППИРОВАТЬ ПО
		|	СчетНаОплатуПокупателюТовары.Номенклатура,
		|	СчетНаОплатуПокупателюТовары.Цена
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыСчетПокупателя.Номенклатура КАК Номенклатура,
		|	ТоварыСчетПокупателя.Количество - ЕСТЬNULL(ТоварыРеализаций.Количество, 0) КАК КоличествоОстаток,
		|	ТоварыСчетПокупателя.Цена КАК Цена
		|ИЗ
		|	ТоварыСчетПокупателя КАК ТоварыСчетПокупателя
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыРеализаций КАК ТоварыРеализаций
		|		ПО ТоварыСчетПокупателя.Номенклатура = ТоварыРеализаций.Номенклатура
		|			И ТоварыСчетПокупателя.Цена = ТоварыРеализаций.Цена";	
		
		Запрос.УстановитьПараметр("Источник", Выборка.Источник);		
		
		ВыборкаОстатки = Запрос.Выполнить().Выбрать();
		
		Пока ВыборкаОстатки.Следующий() Цикл
			
			КоличествоОстаток = ВыборкаОстатки.КоличествоОстаток;
			
			ПараметрыОтбора = Новый Структура("Номенклатура, Цена");
			ЗаполнитьЗначенияСвойств(ПараметрыОтбора, ВыборкаОстатки);
			
			НайденныеСтроки = Приемник.Товары.НайтиСтроки(ПараметрыОтбора);
			
			Для Каждого Строка Из НайденныеСтроки Цикл
				
				Если КоличествоОстаток &lt;= 0 Тогда
					Приемник.Товары.Удалить(Строка);
				Иначе
					Строка.Количество = Мин(КоличествоОстаток, Строка.Количество);
					КоличествоОстаток = КоличествоОстаток - Строка.Количество;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если Приемник.Товары.Количество() = 0 И Приемник.Услуги.Количество() = 0 Тогда
		
		ТекстЛогаСобытий = "Документ Реализация по документу " + Строка(Выборка.Источник) +
							" не создан, т.к. не заполнены товары/услуги, возможно документ был сформирован вручную или весь товар по заказу уже реализован.";
		
		ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Предупреждение", ИмяСобытия);			
		МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога); 
		
		Продолжить;			
	КонецЕсли;
	
	ОшибокНеОбнаружено = Приемник.ПроверитьЗаполнение();
	
	Если ОшибокНеОбнаружено Тогда
		
		НачатьТранзакцию();
		
		Попытка
			
			Если НЕ ОперацияЗапись Тогда   				
				
				ДокументСсылка = Документы[ТипПриемника].ПолучитьСсылку(Новый УникальныйИдентификатор);
				Идентификатор = ДокументСсылка.УникальныйИдентификатор();	
				Приемник.УстановитьСсылкуНового(ДокументСсылка);
				
			Иначе
				
				ДокументСсылка = Приемник.Ссылка;
				Идентификатор = Приемник.Ссылка.УникальныйИдентификатор();
				
			КонецЕсли;
			
			ВидДокументаПриемник = "Накладная_Исходящая";
			
			СтруктураРегистраDR_События = Новый Структура;
			СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, Выборка.ИдентификаторЦепочки);
			СтруктураРегистраDR_События.Вставить("Документ"					, ДокументСсылка);
			СтруктураРегистраDR_События.Вставить("ВидДокумента"				, ВидДокументаПриемник);
			СтруктураРегистраDR_События.Вставить("Идентификатор"			, Идентификатор);
			СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, Выборка.Источник.УникальныйИдентификатор());
			СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
			
			НЗ_DRСобытия = РегистрыСведений.DR_События.СоздатьНаборЗаписей();
			НЗ_DRСобытия.Отбор.ИдентификаторЦепочки.Установить(СтруктураРегистраDR_События.ИдентификаторЦепочки);
			НЗ_DRСобытия.Отбор.Документ.Установить(СтруктураРегистраDR_События.Документ);
			НЗ_DRСобытия.Отбор.ВидДокумента.Установить(СтруктураРегистраDR_События.ВидДокумента);
			НЗ_DRСобытия.Отбор.Идентификатор.Установить(СтруктураРегистраDR_События.Идентификатор);
			НЗ_DRСобытия.Прочитать();
			
			Если НЗ_DRСобытия.Количество() = 0 Тогда
				НоваяЗапись = НЗ_DRСобытия.Добавить();
			Иначе
				НоваяЗапись = НЗ_DRСобытия[0];
			КонецЕсли;
			
			Для Каждого Элемент Из СтруктураРегистраDR_События Цикл			
				НоваяЗапись[Элемент.Ключ] = Элемент.Значение; 	
			КонецЦикла;
			
			НЗ_DRСобытия.Записать();	            
			
			Приемник.Записать(?(ПроводитьРеализацию, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			Ошибка = ОписаниеОшибки();
			
			ТекстЛогаСобытий = НСтр("ru = 'Ошибка %РежимЗаписиДокумента% документа на основе входящего документа № %ФайлНомер% от %ФайлДата%. '" 
							 + Ошибка, ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
							 
			ТекстЛогаСобытий = СтрЗаменить(ТекстЛогаСобытий, "%РежимЗаписиДокумента%"	, ?(ПроводитьРеализацию, "проведения", "записи"));
			ТекстЛогаСобытий = СтрЗаменить(ТекстЛогаСобытий, "%ФайлНомер%"				, Выборка.ИсточникНомер);
			ТекстЛогаСобытий = СтрЗаменить(ТекстЛогаСобытий, "%ФайлДата%"				, Формат(Выборка.ИсточникДата, "ДФ=dd.MM.yyyy"));
			
			ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Ошибка", ИмяСобытия);
			МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
			
			Продолжить;
		КонецПопытки;
		
		Если ОперацияЗапись Тогда	
			
			ТекстЛогаСобытий = "Перезаписан уже существующий документ " + РеализацияПредставление + " по " + Строка(Выборка.Источник);
			
			ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий,"Успешно", ИмяСобытия);
			МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
			
		ИначеЕсли ЗначениеЗаполнено(Накладная) И РазделятьРеализации Тогда
			
			ТекстЛогаСобытий = "Разделена цепочка по " + Строка(Выборка.Источник) + ". Создан документ " + Строка(Приемник.Ссылка) + ".";
			
			ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Успешно", ИмяСобытия);
			МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
			
		КонецЕсли;   		
	
    Иначе
	
		МассивСообщенийПользователю = ПолучитьСообщенияПользователю();
						
		Для каждого Элемент Из МассивСообщенийПользователю Цикл
						
			ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(Элемент.Текст, "Ошибка", ИмяСобытия);
			МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);	
						
		КонецЦикла;
	
	КонецЕсли;
	
	// служебные операции
	Если ЗначениеЗаполнено(Приемник.Ссылка) И Не ОперацияЗапись Тогда
		КоличествоСозданныхДокументов = КоличествоСозданныхДокументов + 1;
	КонецЕсли;  
	
КонецЦикла;</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">4</lastId>
			<item>
				<value xsi:type="xs:string">Прайс-лист</value>
				<id xsi:type="xs:decimal">0</id>
			</item>
			<item>
				<value xsi:type="xs:string">Поставщик</value>
				<presentation>СписокЗаказыВходящиеПоставщик</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">1</id>
			</item>
			<item>
				<value xsi:type="xs:string">Покупатель</value>
				<id xsi:type="xs:decimal">2</id>
			</item>
			<item>
				<value xsi:type="xs:string">Синоним</value>
				<presentation>Создать реализацию товаров</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">3</id>
			</item>
			<item>
				<value xsi:type="xs:string">ИмяКнопки</value>
				<presentation>СоздатьРеализацию</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">4</id>
			</item>
		</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">1</lastId>
			<item>
				<value xsi:type="xs:string">ТекстЗапроса = "ВЫБРАТЬ
				|	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
				|	DR_События.Документ КАК Документ,
				|	DR_События.Идентификатор КАК Идентификатор
				|ПОМЕСТИТЬ ВТ_ЗАКАЗЫ
				|ИЗ
				|	РегистрСведений.DR_События КАК DR_События
				|ГДЕ
				|	DR_События.ВидДокумента = ""Заказ_Входящий""
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
				|	DR_События.ИдентификаторОснования КАК ИдентификаторОснования,
				|	DR_События.Документ КАК Документ,
				|	МАКСИМУМ(DR_События.ДатаЗаписи) КАК ДатаЗаписи
				|ПОМЕСТИТЬ ВТ_Накладные
				|ИЗ
				|	РегистрСведений.DR_События КАК DR_События
				|ГДЕ
				|	DR_События.ВидДокумента = ""Накладная_Исходящая""
				|
				|СГРУППИРОВАТЬ ПО
				|	DR_События.ИдентификаторЦепочки,
				|	DR_События.ИдентификаторОснования,
				|	DR_События.Документ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ ПЕРВЫЕ 2
				|	ВТ_ЗАКАЗЫ.Документ КАК Документ,
				|	ВТ_ЗАКАЗЫ.ИдентификаторЦепочки КАК ИдентификаторЦепочки
				|ИЗ
				|	ВТ_ЗАКАЗЫ КАК ВТ_ЗАКАЗЫ
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Накладные КАК ВТ_Накладные
				|		ПО ВТ_ЗАКАЗЫ.ИдентификаторЦепочки = ВТ_Накладные.ИдентификаторЦепочки
				|			И ВТ_ЗАКАЗЫ.Идентификатор = ВТ_Накладные.ИдентификаторОснования
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_ЦепочкиДокументов КАК DR_ЦепочкиДокументов
				|		ПО ВТ_ЗАКАЗЫ.ИдентификаторЦепочки = DR_ЦепочкиДокументов.ИдентификаторЦепочки
				|ГДЕ
				|	ВТ_ЗАКАЗЫ.Документ.Проведен
				|	И ВТ_Накладные.ИдентификаторЦепочки ЕСТЬ NULL
				|
				|УПОРЯДОЧИТЬ ПО
				|	DR_ЦепочкиДокументов.ДатаЗаказа УБЫВ";</value>
				<presentation>ТекстЗапроса</presentation>
				<id xsi:type="xs:decimal">0</id>
			</item>
		</Value>
		<Value xsi:type="xs:string">СоздатьРеализацию</Value>
	</row>
</ValueTree>