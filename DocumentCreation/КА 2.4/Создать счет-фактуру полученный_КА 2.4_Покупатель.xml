<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Формула</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Регламент</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ИмяКнопки</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Создать счет-фактуру полученный</Value>
		<Value xsi:type="xs:string">//&lt;Служебные переменные&gt;
ТипПриемника = "СчетФактураПолученный";
ИмяСобытия   = "Создание документов по кнопке &lt;&lt;&lt; Создать счет-фактуру полученный &gt;&gt;&gt;";

ОперацияЗапись = Ложь;
ЛогСобытий	   = ""; 

ВыбранныеСтроки = ?(ВыбранныеСтроки = Неопределено, Новый Массив, ВыбранныеСтроки);
//&lt;/Служебные переменные&gt;

КвалификаторСтрок = Новый КвалификаторыСтроки(36);

ТаблицаВыбранныхЗаписей = Новый ТаблицаЗначений;
ТаблицаВыбранныхЗаписей.Колонки.Добавить("Документ"				, Новый ОписаниеТипов("ДокументСсылка.DR_Документ"));
ТаблицаВыбранныхЗаписей.Колонки.Добавить("ИдентификаторЦепочки"	, Новый ОписаниеТипов("Строка",,,,КвалификаторСтрок));

Для Каждого Элемент Из ВыбранныеСтроки Цикл
	НоваяСтрока = ТаблицаВыбранныхЗаписей.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Элемент);
КонецЦикла;

Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
               |	ВыбранныеЗаписи.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
               |	ВЫРАЗИТЬ(ВыбранныеЗаписи.Документ КАК Документ.DR_Документ) КАК Документ
               |ПОМЕСТИТЬ ВыбранныеЗаписи
               |ИЗ
               |	&amp;ТаблицаВыбранныхЗаписей КАК ВыбранныеЗаписи
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	ВыбранныеЗаписи.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
               |	ВыбранныеЗаписи.Документ КАК Источник,
               |	ВыбранныеЗаписи.Документ.Статус КАК СтатусИсточник,
               |	ВыбранныеЗаписи.Документ.ИдентификаторДокумента КАК Идентификатор,
               |	ВЫБОР
               |		КОГДА DR_НомерИсправления.Значение ЕСТЬ NULL
               |			ТОГДА """"
               |		КОГДА DR_НомерИсправления.Значение = ""-""
               |			ТОГДА """"
               |		ИНАЧЕ DR_НомерИсправления.Значение
               |	КОНЕЦ КАК НомерИсправления,
               |	ЕСТЬNULL(DR_ДатаИсправления.Значение, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаИсправления,
               |	ВЫБОР
               |		КОГДА ВЫРАЗИТЬ(ВыбранныеЗаписи.Документ КАК Документ.DR_Документ).ВидДокумента В (""ON_NSCHFDOPPR_01_Входящий"", ""ON_NSCHFDOPPRMARK_01_Входящий"", ""ON_NSCHFDOPPRPROS_01_Входящий"", ""ON_NSCHFDOPPR_01_Испр_Входящий"", ""ON_NSCHFDOPPRMARK_01_Испр_Входящий"", ""ON_NSCHFDOPPRPROS_01_Испр_Входящий"")
               |			ТОГДА ИСТИНА
               |		ИНАЧЕ ЛОЖЬ
               |	КОНЕЦ КАК ЭтоУПД,
               |	ВЫБОР
               |		КОГДА ВЫРАЗИТЬ(ВыбранныеЗаписи.Документ КАК Документ.DR_Документ).ВидДокумента В (""ON_NSCHFDOPPR_01_Испр_Входящий"", ""ON_NSCHFDOPPRMARK_01_Испр_Входящий"", ""ON_NSCHFDOPPRPROS_01_Испр_Входящий"")
               |			ТОГДА ИСТИНА
               |		ИНАЧЕ ЛОЖЬ
               |	КОНЕЦ КАК Исправленный,
               |	ВЫБОР
               |		КОГДА ВЫРАЗИТЬ(ВыбранныеЗаписи.Документ КАК Документ.DR_Документ).ВидДокумента В (""ON_NKORSCHFDOPPR_01_Входящий"", ""ON_NKORSCHFDOPPRMARK_01_Входящий"", ""ON_NKORSCHFDOPPRPROS_01_Входящий"")
               |			ТОГДА ИСТИНА
               |		ИНАЧЕ ЛОЖЬ
               |	КОНЕЦ КАК Корректировочный,
               |	ВЫРАЗИТЬ(ВыбранныеЗаписи.Документ КАК Документ.DR_Документ).Дата КАК ИсточникДата,
               |	ВЫРАЗИТЬ(ВыбранныеЗаписи.Документ КАК Документ.DR_Документ).Номер КАК ИсточникНомер
               |ИЗ
               |	ВыбранныеЗаписи КАК ВыбранныеЗаписи
               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК DR_НомерИсправления
               |		ПО ВыбранныеЗаписи.Документ = DR_НомерИсправления.Ссылка
               |			И (DR_НомерИсправления.Реквизит = ""Документ_СвСчФакт_ИспрСчФ_НомИспрСчФ"")
               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК DR_ДатаИсправления
               |		ПО ВыбранныеЗаписи.Документ = DR_ДатаИсправления.Ссылка
               |			И (DR_ДатаИсправления.Реквизит = ""Документ_СвСчФакт_ИспрСчФ_ДатаИспрСчФ"")
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	ВыбранныеЗаписи.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
               |	DR_Накладная.Документ КАК Накладная,
               |	DR_ДокументДопРек_ДатаСчФ.Значение КАК ДатаВходящегоДокумента,
               |	DR_ДокументДопРек_НомерСчФ.Значение КАК НомерВходящегоДокумента
               |ИЗ
               |	ВыбранныеЗаписи КАК ВыбранныеЗаписи
               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_Накладная
               |		ПО ВыбранныеЗаписи.ИдентификаторЦепочки = DR_Накладная.ИдентификаторЦепочки
               |			И (DR_Накладная.ВидДокумента = ""Накладная_Входящая"")
               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК DR_ДокументДопРек_НомерСчФ
               |		ПО ВыбранныеЗаписи.Документ = DR_ДокументДопРек_НомерСчФ.Ссылка
               |			И (DR_ДокументДопРек_НомерСчФ.Реквизит = ""Документ_СвСчФакт_НомерСчФ"")
               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК DR_ДокументДопРек_ДатаСчФ
               |		ПО ВыбранныеЗаписи.Документ = DR_ДокументДопРек_ДатаСчФ.Ссылка
               |			И (DR_ДокументДопРек_ДатаСчФ.Реквизит = ""Документ_СвСчФакт_ДатаСчФ"")
               |ГДЕ
               |	НЕ DR_Накладная.Документ ЕСТЬ NULL
               |	И ВыбранныеЗаписи.Документ.ВидДокумента В (""ON_NSCHFDOPPR_01_Входящий"", ""ON_NSCHFDOPPRMARK_01_Входящий"", ""ON_NSCHFDOPPRPROS_01_Входящий"")
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	ВыбранныеЗаписи.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
               |	DR_Накладная.Документ КАК Накладная,
               |	DR_ДокументДопРек_ДатаСчФ.Значение КАК ДатаВходящегоДокумента,
               |	DR_ДокументДопРек_НомерСчФ.Значение КАК НомерВходящегоДокумента,
               |	ВЫБОР
               |		КОГДА ВЫРАЗИТЬ(DR_Накладная.Документ КАК Документ.КорректировкаПриобретения).ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок)
               |			ТОГДА ИСТИНА
               |		ИНАЧЕ ЛОЖЬ
               |	КОНЕЦ КАК Исправление
               |ИЗ
               |	ВыбранныеЗаписи КАК ВыбранныеЗаписи
               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_Накладная
               |		ПО ВыбранныеЗаписи.ИдентификаторЦепочки = DR_Накладная.ИдентификаторЦепочки
               |			И (DR_Накладная.ВидДокумента = ""КорректировочнаяНакладная_Входящая"")
               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК DR_ДокументДопРек_НомерСчФ
               |		ПО ВыбранныеЗаписи.Документ = DR_ДокументДопРек_НомерСчФ.Ссылка
               |			И (DR_ДокументДопРек_НомерСчФ.Реквизит = ""Документ_СвКСчФ_НомерКСчФ"")
               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК DR_ДокументДопРек_ДатаСчФ
               |		ПО ВыбранныеЗаписи.Документ = DR_ДокументДопРек_ДатаСчФ.Ссылка
               |			И (DR_ДокументДопРек_ДатаСчФ.Реквизит = ""Документ_СвКСчФ_ДатаКСчФ"")
               |ГДЕ
               |	НЕ DR_Накладная.Документ ЕСТЬ NULL
               |	И ВыбранныеЗаписи.Документ.ВидДокумента В (""ON_NSCHFDOPPR_01_Испр_Входящий"", ""ON_NSCHFDOPPRMARK_01_Испр_Входящий"", ""ON_NSCHFDOPPRPROS_01_Испр_Входящий"", ""ON_NKORSCHFDOPPR_01_Входящий"", ""ON_NKORSCHFDOPPR_01_Испр_Входящий"", ""ON_NKORSCHFDOPPRMARK_01_Входящий"", ""ON_NKORSCHFDOPPRMARK_01_Испр_Входящий"", ""ON_NKORSCHFDOPPRPROS_01_Входящий"", ""ON_NKORSCHFDOPPRPROS_01_Испр_Входящий"")
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	ВыбранныеЗаписи.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
               |	DR_СчетФактура.Документ КАК СчетФактура,
               |	DR_СчетФактура.ИдентификаторОснования КАК ИдентификаторОснования,
               |	DR_ДокументыОснования.ДокументОснование КАК ДокументОснование,
               |	ВЫРАЗИТЬ(DR_СчетФактура.Документ КАК Документ.СчетФактураПолученный).Исправление КАК Исправленный,
               |	ВЫРАЗИТЬ(DR_СчетФактура.Документ КАК Документ.СчетФактураПолученный).Корректировочный КАК Корректировочный,
               |	СТРОКА(ВЫРАЗИТЬ(DR_СчетФактура.Документ КАК Документ.СчетФактураПолученный).НомерИсправления) КАК НомерИсправления,
               |	ВЫРАЗИТЬ(ВЫРАЗИТЬ(DR_СчетФактура.Документ КАК Документ.СчетФактураПолученный).ДатаИсправления КАК ДАТА) КАК ДатаИсправления
               |ИЗ
               |	ВыбранныеЗаписи КАК ВыбранныеЗаписи
               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_СчетФактура
               |		ПО ВыбранныеЗаписи.ИдентификаторЦепочки = DR_СчетФактура.ИдентификаторЦепочки
               |			И (DR_СчетФактура.ВидДокумента = ""СчетФактура_Входящий"")
               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК DR_ДокументыОснования
               |		ПО (DR_СчетФактура.Документ = DR_ДокументыОснования.Ссылка)
               |ГДЕ
               |	НЕ DR_СчетФактура.Документ ЕСТЬ NULL";
Запрос.УстановитьПараметр("ТаблицаВыбранныхЗаписей", ТаблицаВыбранныхЗаписей);

Пакет = Запрос.ВыполнитьПакет(); 
Выборка   = Пакет[1].Выбрать();  
Накладные = Пакет[2].Выгрузить();
Накладные.Индексы.Добавить("ИдентификаторЦепочки"); 
КорНакладные = Пакет[3].Выгрузить();
КорНакладные.Индексы.Добавить("ИдентификаторЦепочки");
СчФактуры = Пакет[4].Выгрузить();
СчФактуры.Индексы.Добавить("ИдентификаторЦепочки, ИдентификаторОснования");
СчФактуры.Индексы.Добавить("ДокументОснование");
ИмяДокументаПриемника = "Счет-фактура полученный 1С";

Пока Выборка.Следующий() Цикл 
	
	Если Выборка.СтатусИсточник = "НеОбработан" Тогда
	
		ТекстЛогаСобытий = "Не создан документ ""Счет-фактура"", т.к. документ УПД в статусе ""не обработан"".";                          
		ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Ошибка", ИмяСобытия);			
		МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
		
		Продолжить;
		
	КонецЕсли;
               
	Если Выборка.ЭтоУПД 
		 И НЕ Выборка.Исправленный Тогда
		 
		    СтруктураПоиска = Новый Структура("ИдентификаторЦепочки, ИдентификаторОснования, Исправленный", Выборка.ИдентификаторЦепочки, Выборка.Идентификатор, Ложь);
			СтрокиСчФактуры = СчФактуры.НайтиСтроки(СтруктураПоиска);		
			Если СтрокиСчФактуры.Количество() &gt; 0  Тогда
				ТекстЛогаСобытий = ИмяДокументаПриемника + " по документу " + Строка(Выборка.Источник) + " уже создана";
				ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Информация", ИмяСобытия);
				МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
				Продолжить;	
			КонецЕсли;
							
	КонецЕсли;
	
	Накладная = Неопределено;
	КомментарийДополение = "";
	НеобходимаПроверкаПервичнойСчф = Ложь;	
	ПоискВНакладных = Истина;
	
	Если НЕ Выборка.ЭтоУПД 
		 ИЛИ (Выборка.ЭтоУПД И Выборка.Исправленный) Тогда
		 ПоискВНакладных = Ложь;
		 КомментарийДополение = "корректировочная";
		 НеобходимаПроверкаПервичнойСчф = Истина;
	КонецЕсли;
	
	Если ПоискВНакладных Тогда 
		СтрокиНакладные = Накладные.НайтиСтроки(Новый Структура("ИдентификаторЦепочки", Выборка.ИдентификаторЦепочки)); 
	Иначе
		СтрокиНакладные = КорНакладные.НайтиСтроки(Новый Структура("ИдентификаторЦепочки", Выборка.ИдентификаторЦепочки));
	КонецЕсли;
	Если СтрокиНакладные.Количество() = 1 Тогда 
		СтрокаТЗНакладные = СтрокиНакладные.Получить(0);
		СтруктураПоиска = Новый Структура("ДокументОснование", СтрокаТЗНакладные.Накладная);
				
		Если Выборка.Исправленный Тогда
		     СтруктураПоиска.Вставить("Исправленный", Истина);
		ИначеЕсли Выборка.Корректировочный Тогда
			 СтруктураПоиска.Вставить("Исправленный", Ложь);
		КонецЕсли;
		
		СтрокиСчФактуры = СчФактуры.НайтиСтроки(СтруктураПоиска);
		
		Если СтрокиСчФактуры.Количество() = 0 Тогда	
		
			Если НеобходимаПроверкаПервичнойСчф Тогда
				
				ТекстЗапроса = "ВЫБРАТЬ
				               |	СчетФактураПолученныйДокументыОснования.Ссылка КАК СчетФактураПервичный
				               |ИЗ
				               |	Документ.КорректировкаПриобретения КАК КорректировкаПриобретения
				               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
				               |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
				               |			ПО (ПриобретениеТоваровУслуг.Ссылка = СчетФактураПолученныйДокументыОснования.ДокументОснование)
				               |		ПО (КорректировкаПриобретения.ДокументОснование = ПриобретениеТоваровУслуг.Ссылка)
				               |ГДЕ
				               |	КорректировкаПриобретения.Ссылка = &amp;Ссылка
				               |	И НЕ СчетФактураПолученныйДокументыОснования.Ссылка ЕСТЬ NULL";
				
				Запрос = Новый Запрос;
				Запрос.Текст = ТекстЗапроса;
				Запрос.УстановитьПараметр("Ссылка", СтрокаТЗНакладные.Накладная);
				
				РезультатЗапроса = Запрос.Выполнить();
				Если РезультатЗапроса.Пустой() Тогда
					
					ТекстЛогаСобытий = "Для документа " + Строка(СтрокаТЗНакладные.Накладная) + " не создана первичная Счет-фактура в цепочке. Обработка прекращена.";
					ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Информация", ИмяСобытия);
					МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
					Продолжить;
					
				КонецЕсли;	
				
			КонецЕсли;
		
			Накладная = СтрокаТЗНакладные.Накладная;
			ДатаВходящегоДокумента  = ?(ЗначениеЗаполнено(СтрокаТЗНакладные.ДатаВходящегоДокумента),  СтрокаТЗНакладные.ДатаВходящегоДокумента,  Выборка.ИсточникДата);
			НомерВходящегоДокумента = ?(ЗначениеЗаполнено(СтрокаТЗНакладные.НомерВходящегоДокумента), СтрокаТЗНакладные.НомерВходящегоДокумента, Выборка.ИсточникНомер);   
		
		Иначе 
			ТекстЛогаСобытий = ИмяДокументаПриемника + " по документу " + Строка(Выборка.Источник) + " не создан, уже существует для накладной. ";
			ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Информация", ИмяСобытия);
			МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
			Продолжить;	
		КонецЕсли;
		
	ИначеЕсли СтрокиНакладные.Количество() &gt; 1 Тогда
		ТекстЛогаСобытий = ИмяДокументаПриемника + " по документу " + Строка(Выборка.Источник) + " не создан, обнаружено более одной накладной. ";
		ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Информация", ИмяСобытия);
		МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
		Продолжить; 
		
	ИначеЕсли СтрокиНакладные.Количество() = 0 Тогда 
		ТекстЛогаСобытий = ИмяДокументаПриемника + " по документу " + Строка(Выборка.Источник) + " не создан, не обнаружена накладная. ";
		ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Информация", ИмяСобытия);
		МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
		Продолжить; 
		
	КонецЕсли;
	
	Приемник = Документы[ТипПриемника].СоздатьДокумент();
	
	//Выполняется через проверку переменной для удобства чтения.
	Если Накладная &lt;&gt; Неопределено Тогда
		ПараметрыДокумента = Новый Структура;
		ПараметрыДокумента.Вставить("ДокументОснование",	Накладная);
		ПараметрыДокумента.Вставить("Организация", 			Накладная.Организация);
		ПараметрыДокумента.Вставить("Контрагент",  			Накладная.Контрагент);
		ПараметрыДокумента.Вставить("Исправление",			Выборка.Исправленный);
		
		Приемник.Заполнить(ПараметрыДокумента);
		Приемник.ДатаСоставления = ДатаВходящегоДокумента;
		Приемник.Номер 			 = НомерВходящегоДокумента; 
	Иначе 
		Продолжить;
	КонецЕсли;
	
	Приемник.Дата = ТекущаяДата();
	Приемник.ПолученВЭлектронномВиде = Ложь; 
	Приемник.Корректировочный = Выборка.Корректировочный;
	
	Если Выборка.Исправленный Тогда 
	    Приемник.Исправление 		= Истина;
		Приемник.НомерИсправления   = Выборка.НомерИсправления;
		Приемник.ДатаИсправления    = Выборка.ДатаИсправления;
	КонецЕсли;
		
	СоздаватьДокумент1СПроведенным = Настройка_Параметр_Прочитать("EDI_СоздаватьДокументПолученныйСЧФ1СПроведенным", Ложь); 
	
	ОшибокНеОбнаружено = Приемник.ПроверитьЗаполнение();
	
	Если ОшибокНеОбнаружено Тогда
		Попытка
			Приемник.Записать(?(СоздаватьДокумент1СПроведенным, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
		Исключение
			Приемник.Записать(РежимЗаписиДокумента.Запись);
			ТекстЛогаСобытий = ИмяДокументаПриемника + " по документу " + Строка(Выборка.Источник) + " не создано!!! " + СокрЛП(ОписаниеОшибки()); 
			ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Информация", ИмяСобытия);
			МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога); 
		КонецПопытки;  
		
	Иначе
	
		МассивСообщенийПользователю = ПолучитьСообщенияПользователю();
						
		Для каждого Элемент Из МассивСообщенийПользователю Цикл
						
			ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(Элемент.Текст, "Ошибка", ИмяСобытия);
			МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);	
						
		КонецЦикла;
	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Приемник.Ссылка) Тогда
		ВидДокументаПриемник = "СчетФактура_Входящий";	
		
		СтруктураРегистраDR_События = Новый Структура;
		СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, Выборка.ИдентификаторЦепочки);
		СтруктураРегистраDR_События.Вставить("Документ"					, Приемник.Ссылка);
		СтруктураРегистраDR_События.Вставить("ВидДокумента"				, ВидДокументаПриемник);
		СтруктураРегистраDR_События.Вставить("Идентификатор"			, Приемник.Ссылка.УникальныйИдентификатор());
		СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, Выборка.Идентификатор);
		СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
		DR_EDI_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);
		
	КонецЕсли;
	
	// служебные операции
	Если ЗначениеЗаполнено(Приемник.Ссылка) И Не ОперацияЗапись Тогда 
		КоличествоСозданныхДокументов = КоличествоСозданныхДокументов + 1;
	КонецЕсли;
	
КонецЦикла;</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">4</lastId>
			<item>
				<value xsi:type="xs:string">Прайс-лист</value>
				<id xsi:type="xs:decimal">0</id>
			</item>
			<item>
				<value xsi:type="xs:string">Поставщик</value>
				<id xsi:type="xs:decimal">1</id>
			</item>
			<item>
				<value xsi:type="xs:string">Покупатель</value>
				<presentation>СписокOnNschfdopprВходящиеПокупатель; СписокOnNkorschfdopprВходящиеПокупатель; СписокOnNschfdopprИспрВходящиеПокупатель</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">2</id>
			</item>
			<item>
				<value xsi:type="xs:string">Синоним</value>
				<presentation>Создать счет-фактуру полученный</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">3</id>
			</item>
			<item>
				<value xsi:type="xs:string">ИмяКнопки</value>
				<presentation>СоздатьСчетФактуруПолученный</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">4</id>
			</item>
		</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">1</lastId>
			<item>
				<value xsi:type="xs:string">ТекстЗапроса = "ВЫБРАТЬ
               |	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
               |	DR_События.Документ КАК Документ,
               |	DR_События.Идентификатор КАК Идентификатор
               |ПОМЕСТИТЬ ВТ_УПД
               |ИЗ
               |	РегистрСведений.DR_События КАК DR_События
               |ГДЕ
               |	DR_События.ВидДокумента В (""ON_NSCHFDOPPR_01_Входящий"", ""ON_NSCHFDOPPR_01_Испр_Входящий"", ""ON_NSCHFDOPPRMARK_01_Входящий"", ""ON_NSCHFDOPPRMARK_01_Испр_Входящий"", ""ON_NSCHFDOPPRPROS_01_Входящий"", ""ON_NSCHFDOPPRPROS_01_Испр_Входящий"", ""ON_NKORSCHFDOPPR_01_Входящий"", ""ON_NKORSCHFDOPPR_01_Испр_Входящий"", ""ON_NKORSCHFDOPPRMARK_01_Входящий"", ""ON_NKORSCHFDOPPRMARK_01_Испр_Входящий"", ""ON_NKORSCHFDOPPRPROS_01_Входящий"", ""ON_NKORSCHFDOPPRPROS_01_Испр_Входящий"")
               |	И DR_События.Статус &lt;&gt; ""Архивный""
               |	И DR_События.Документ.Статус = ""Обработан""
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
               |	DR_События.ИдентификаторОснования КАК ИдентификаторОснования,
               |	DR_События.Документ КАК Документ,
               |	МАКСИМУМ(DR_События.ДатаЗаписи) КАК ДатаЗаписи
               |ПОМЕСТИТЬ ВТ_СчетФактура
               |ИЗ
               |	РегистрСведений.DR_События КАК DR_События
               |ГДЕ
               |	DR_События.ВидДокумента = ""СчетФактура_Входящий""
               |
               |СГРУППИРОВАТЬ ПО
               |	DR_События.ИдентификаторЦепочки,
               |	DR_События.ИдентификаторОснования,
               |	DR_События.Документ
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ Первые 2
               |	ВТ_УПД.Документ КАК Документ,
               |	ВТ_УПД.ИдентификаторЦепочки КАК ИдентификаторЦепочки
               |ИЗ
               |	ВТ_УПД КАК ВТ_УПД
               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетФактура КАК ВТ_СчетФактура
               |		ПО ВТ_УПД.ИдентификаторЦепочки = ВТ_СчетФактура.ИдентификаторЦепочки
               |			И ВТ_УПД.Идентификатор = ВТ_СчетФактура.ИдентификаторОснования
               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_ЦепочкиДокументов КАК DR_ЦепочкиДокументов
               |		ПО ВТ_УПД.ИдентификаторЦепочки = DR_ЦепочкиДокументов.ИдентификаторЦепочки
               |ГДЕ
               |	ВТ_СчетФактура.ИдентификаторЦепочки ЕСТЬ NULL
               |
               |УПОРЯДОЧИТЬ ПО
               |	DR_ЦепочкиДокументов.ДатаЗаказа УБЫВ";</value>
				<presentation>ТекстЗапроса</presentation>
				<id xsi:type="xs:decimal">0</id>
			</item>
		</Value>
		<Value xsi:type="xs:string">СоздатьСчетФактуруПолученный</Value>
	</row>
</ValueTree>