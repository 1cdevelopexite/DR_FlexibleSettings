<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Формула</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Регламент</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ИмяКнопки</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Создать корректировку поступления товаров</Value>
		<Value xsi:type="xs:string">//// Ваш код ///
	
	//&lt;Служебные переменные&gt;
	ИмяДокументаПриемника 		= "Корректировка поступления 1С";
	ТипПриемника          		= "КорректировкаПриобретения";
	ВидДокументаПриемник  		= "КорректировочнаяНакладная_Входящая";
	ИмяСобытия            		= "Создание документов по кнопке &lt;&lt;&lt; Создать корректировку поступления &gt;&gt;&gt;";
	ОперацияЗапись        		= Ложь;
	ЛогСобытий	          		= "";
	ВыбранныеСтроки       		= ?(ВыбранныеСтроки = Неопределено, Новый Массив, ВыбранныеСтроки);
	КвалификаторСтрок     		= Новый КвалификаторыСтроки(36);
	КвалификаторЧисло 			= Новый КвалификаторыЧисла(15, 3, ДопустимыйЗнак.Неотрицательный);
	ВызовВходящимDESADV   	    = ?(ВызовВходящимDESADV = Неопределено, Ложь, ВызовВходящимDESADV);
	АвтоПоступление 			= ?(АвтоПоступление = Неопределено, Ложь, АвтоПоступление);
	ПерезаписыватьПоступление 	= ?(ПерезаписыватьПоступление = Неопределено, Ложь, ПерезаписыватьПоступление);
	ПроводитьПоступление      	= Настройка_Параметр_Прочитать("ЭКОМ_СоздаватьДокументПоступления1СПроведенным", Ложь);
	ИспользоватьКорректировкиПриобретений = ПолучитьФункциональнуюОпцию("ИспользоватьКорректировкиПриобретений");
	//&lt;/Служебные переменные&gt;
	
	ТаблицаВыбранныхЗаписей = Новый ТаблицаЗначений;
	ТаблицаВыбранныхЗаписей.Колонки.Добавить("Документ"				, Новый ОписаниеТипов("ДокументСсылка.ПриобретениеТоваровУслуг"));
	ТаблицаВыбранныхЗаписей.Колонки.Добавить("ИдентификаторЦепочки"	, Новый ОписаниеТипов("Строка",,,,КвалификаторСтрок));
	ТаблицаВыбранныхЗаписей.Колонки.Добавить("Идентификатор"		, Новый ОписаниеТипов("Строка",,,,КвалификаторСтрок));
	
	Для Каждого Элемент Из ВыбранныеСтроки Цикл
		
		Элемент.Вставить("Идентификатор", Элемент.Документ.УникальныйИдентификатор());
		
		НоваяСтрока = ТаблицаВыбранныхЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Элемент);
		
	КонецЦикла;
	
	Если ИспользоватьКорректировкиПриобретений Тогда 
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ВыбранныеЗаписи.Документ КАК Документ,
		               |	ВыбранныеЗаписи.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
		               |	ВыбранныеЗаписи.Идентификатор КАК Идентификатор
		               |ПОМЕСТИТЬ ВыбранныеЗаписи
		               |ИЗ
		               |	&amp;ТаблицаВыбранныхЗаписей КАК ВыбранныеЗаписи
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВыбранныеЗаписи.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
		               |	ВыбранныеЗаписи.Идентификатор КАК Идентификатор,
		               |	ВЫРАЗИТЬ(ВыбранныеЗаписи.Документ КАК Документ.ПриобретениеТоваровУслуг) КАК Источник,
		               |	ВЫРАЗИТЬ(DESADV_События.Документ КАК Документ.DR_Документ) КАК DESADV,
		               |	ВЫРАЗИТЬ(DESADV_События.Документ КАК Документ.DR_Документ).Представление КАК DESADV_Представление,
		               |	ЕСТЬNULL(RECADV_События.Документ, НЕОПРЕДЕЛЕНО) КАК RECADV,
		               |	ВЫРАЗИТЬ(ВыбранныеЗаписи.Документ КАК Документ.ПриобретениеТоваровУслуг).Представление КАК ПриобретениеТоваровУслуг_Представление,
		               |	ВЫРАЗИТЬ(ВыбранныеЗаписи.Документ КАК Документ.ПриобретениеТоваровУслуг).Проведен КАК ПриобретениеТоваровУслуг_Проведен
		               |ПОМЕСТИТЬ ВТ_События
		               |ИЗ
		               |	ВыбранныеЗаписи КАК ВыбранныеЗаписи
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DESADV_События
		               |		ПО ВыбранныеЗаписи.ИдентификаторЦепочки = DESADV_События.ИдентификаторЦепочки
		               |			И (DESADV_События.ВидДокумента = ""DESADV_входящий"")
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК RECADV_События
		               |		ПО ВыбранныеЗаписи.ИдентификаторЦепочки = RECADV_События.ИдентификаторЦепочки
		               |			И (RECADV_События.ВидДокумента = ""RECADV_исходящий"")
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВТ_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
		               |	ВТ_События.Источник КАК Источник,
		               |	ВТ_События.Идентификатор КАК Идентификатор,
		               |	ВТ_События.ПриобретениеТоваровУслуг_Представление КАК ПриобретениеТоваровУслуг_Представление,
		               |	ВТ_События.ПриобретениеТоваровУслуг_Проведен КАК ПриобретениеТоваровУслуг_Проведен,
		               |	ВТ_События.DESADV КАК DESADV,
		               |	ВТ_События.DESADV_Представление КАК DESADV_Представление,
		               |	ВТ_События.RECADV КАК RECADV,
		               |	ВЫРАЗИТЬ(ДР_NUMBER.Значение КАК СТРОКА(35)) КАК НомерЭлектронногоДокумента,
		               |	ДР_ДатаЭлектронногоДокумента.Значение КАК ДатаЭлектронногоДокумента,
		               |	ВЫРАЗИТЬ(ДР_НомерНакладной.Значение КАК СТРОКА(35)) КАК НомерНакладной,
		               |	ДР_ДатаНакладной.Значение КАК ДатаНакладной,
		               |	ЕСТЬNULL(ДР_POSITION.ХранилищеЗначения, НЕОПРЕДЕЛЕНО) КАК POSITION
		               |ИЗ
		               |	ВТ_События КАК ВТ_События
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК ДР_POSITION
		               |		ПО ВТ_События.DESADV = ДР_POSITION.Ссылка
		               |			И (ДР_POSITION.Реквизит = ""POSITION"")
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК ДР_НомерНакладной
		               |		ПО ВТ_События.DESADV = ДР_НомерНакладной.Ссылка
		               |			И (ДР_НомерНакладной.Реквизит = ""DELIVERYNOTENUMBER"")
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК ДР_ДатаНакладной
		               |		ПО ВТ_События.DESADV = ДР_ДатаНакладной.Ссылка
		               |			И (ДР_ДатаНакладной.Реквизит = ""ДатаНакладной"")
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК ДР_NUMBER
		               |		ПО ВТ_События.DESADV = ДР_NUMBER.Ссылка
		               |			И (ДР_NUMBER.Реквизит = ""NUMBER"")
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК ДР_ДатаЭлектронногоДокумента
		               |		ПО ВТ_События.DESADV = ДР_ДатаЭлектронногоДокумента.Ссылка
		               |			И (ДР_ДатаЭлектронногоДокумента.Реквизит = ""ДатаЭлектронногоДокумента"")";
		
		Запрос.УстановитьПараметр("ТаблицаВыбранныхЗаписей", ТаблицаВыбранныхЗаписей);
		Запрос.УстановитьПараметр("ВидДокументаПриемник", 	 ВидДокументаПриемник);
		
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ДокументЗаписан = Ложь;
			
			//ПРОВЕРКА 1		
			Если Выборка.RECADV = Неопределено Тогда
				
				ТекстЛогаСобытий = СтрШаблон("Документ %1 по документу-основанию %2 не создан. Причина: исходящий RECADV отправлен.",
				ИмяДокументаПриемника,
				Выборка.ПриобретениеТоваровУслуг_Представление);
				ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Ошибка", ИмяСобытия);
				МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);  
				Продолжить;
				
			ИначеЕсли НЕ Выборка.ПриобретениеТоваровУслуг_Проведен Тогда 	
				
				ТекстЛогаСобытий = СтрШаблон("Документ %1 по документу-основанию %2 не создан. Причина: документ-основание не проведен.",
				ИмяДокументаПриемника,
				Выборка.ПриобретениеТоваровУслуг_Представление);
				ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Предупреждение", ИмяСобытия);
				МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
				Продолжить;
							
			КонецЕсли;	
			
			//СОЗДАНИЕ И ЗАПОЛНЕНИЕ ДОКУМЕНТА
			Приемник = Документы[ТипПриемника].СоздатьДокумент();
			Приемник.Заполнить(Выборка.Источник);
			
			Приемник.Дата = ТекущаяДата();
			Приемник.НомерВходящегоДокумента = Выборка.НомерНакладной; 
			Приемник.ДатаВходящегоДокумента  = Выборка.ДатаНакладной;
			//Приемник.ВидКорректировки        = Перечисления.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон;
			Комментарий = СтрШаблон("Документ создан на основании %1.", Выборка.ПриобретениеТоваровУслуг_Представление);						
			Приемник.Комментарий = Комментарий;
						
			// Проверка и запись документов.
			ОшибокНеОбнаружено = Приемник.ПроверитьЗаполнение();
			
			Если ОшибокНеОбнаружено Тогда
				
				НачатьТранзакцию();
				
				Попытка
					
					Если НЕ ДокументЗаписан Тогда
						ДокументСсылка = Документы[ТипПриемника].ПолучитьСсылку(Новый УникальныйИдентификатор);
						Идентификатор = ДокументСсылка.УникальныйИдентификатор();	
						Приемник.УстановитьСсылкуНового(ДокументСсылка);
					Иначе
						ДокументСсылка = Приемник.Ссылка;
						Идентификатор = Приемник.Ссылка.УникальныйИдентификатор();		
					КонецЕсли;
					
					СтруктураРегистраDR_События = Новый Структура;
					СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, Выборка.ИдентификаторЦепочки);
					СтруктураРегистраDR_События.Вставить("Документ"					, ДокументСсылка);
					СтруктураРегистраDR_События.Вставить("ВидДокумента"				, ВидДокументаПриемник);
					СтруктураРегистраDR_События.Вставить("Идентификатор"			, Идентификатор);
					СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, Выборка.Идентификатор);
					СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
					
					НЗ_DRСобытия = РегистрыСведений.DR_События.СоздатьНаборЗаписей();
					НЗ_DRСобытия.Отбор.ИдентификаторЦепочки.Установить(СтруктураРегистраDR_События.ИдентификаторЦепочки);
					НЗ_DRСобытия.Отбор.Документ.Установить(СтруктураРегистраDR_События.Документ);
					НЗ_DRСобытия.Отбор.ВидДокумента.Установить(СтруктураРегистраDR_События.ВидДокумента);
					НЗ_DRСобытия.Отбор.Идентификатор.Установить(СтруктураРегистраDR_События.Идентификатор);
					НЗ_DRСобытия.Прочитать();
					
					Если НЗ_DRСобытия.Количество() = 0 Тогда
						НоваяЗапись = НЗ_DRСобытия.Добавить();
					Иначе
						НоваяЗапись = НЗ_DRСобытия[0];
					КонецЕсли;
					
					Для Каждого Элемент Из СтруктураРегистраDR_События Цикл			
						НоваяЗапись[Элемент.Ключ] = Элемент.Значение; 	
					КонецЦикла;
					
					НЗ_DRСобытия.Записать();
					
					Приемник.Записать(?(ПроводитьПоступление, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
					
					ЗафиксироватьТранзакцию();
					
				Исключение
					
					ОтменитьТранзакцию();
					
					ТекстЛогаСобытий = НСтр("ru = 'Ошибка %РежимЗаписиДокумента% документа %ДокументПриемник% на основе входящего DR_Документа № %НомерDR_Документа% от %ДатаDR_Документа%. '", 
					ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
					
					ТекстЛогаСобытий = СтрЗаменить(ТекстЛогаСобытий, "%РежимЗаписиДокумента%"	, ?(ПроводитьПоступление, "проведения", "записи"));    
					ТекстЛогаСобытий = СтрЗаменить(ТекстЛогаСобытий, "%ДокументПриемник%"		, ИмяДокументаПриемника);
					ТекстЛогаСобытий = СтрЗаменить(ТекстЛогаСобытий, "%НомерDR_Документа%"		, Выборка.Источник.Номер);
					ТекстЛогаСобытий = СтрЗаменить(ТекстЛогаСобытий, "%ДатаDR_Документа%"		, Формат(Выборка.Источник.Дата, "ДФ=dd.MM.yyyy"));
					
					ТекстЛогаСобытий = ТекстЛогаСобытий + Символы.ПС + ОписаниеОшибки();
					
					ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Ошибка", ИмяСобытия);
					МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
					
					Продолжить;
				КонецПопытки;
				
				// служебные операции ++  
				Если ЗначениеЗаполнено(Приемник.Ссылка) И Не ОперацияЗапись Тогда
					КоличествоСозданныхДокументов = КоличествоСозданныхДокументов + 1;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ЛогСобытий) Тогда
					ТекстЛогаСобытий = ЛогСобытий;
					ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Информация", ИмяСобытия);
					МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);  			
				КонецЕсли;  
				
			Иначе
				
				МассивСообщенийПользователю = ПолучитьСообщенияПользователю();
				
				Для каждого Элемент Из МассивСообщенийПользователю Цикл
					
					ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(Элемент.Текст, "Ошибка", ИмяСобытия);
					МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);	
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		
		ТекстЛогаСобытий = НСтр("ru = 'В настройках программы отключена возможность создания корректировок приобретения'", 
		ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Ошибка", ИмяСобытия);
		МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
		
	КонецЕсли;
	</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">5</lastId>
			<item>
				<value xsi:type="xs:string">Прайс-лист</value>
				<id xsi:type="xs:decimal">0</id>
			</item>
			<item>
				<value xsi:type="xs:string">Поставщик</value>
				<id xsi:type="xs:decimal">1</id>
			</item>
			<item>
				<value xsi:type="xs:string">Неструкт. докум.</value>
				<id xsi:type="xs:decimal">2</id>
			</item>
			<item>
				<value xsi:type="xs:string">Покупатель</value>
				<presentation>СписокНакладныеВходящиеПокупатель</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">3</id>
			</item>
			<item>
				<value xsi:type="xs:string">Синоним</value>
				<presentation>Создать корректировку поступления товаров</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">4</id>
			</item>
			<item>
				<value xsi:type="xs:string">ИмяКнопки</value>
				<presentation>СоздатьКорректировкуПоступления</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">5</id>
			</item>
		</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">-1</lastId>
		</Value>
		<Value xsi:type="xs:string">СоздатьКорректировкуПоступления</Value>
	</row>
</ValueTree>