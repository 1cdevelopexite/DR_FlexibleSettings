<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Источник</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Приемник</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Формула</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КолонкаИсточника</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Создать PRICAT на основании 1С документа</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:string">PRICAT_Исходящий</Value>
		<Value xsi:type="xs:string">ИмяСобытия = "Создание документов по кнопке &lt;&lt;&lt; Создать PRICAT на основании 1С документа &gt;&gt;&gt;";
// служебные переменные гибких настроек ++
ТипПриемника   = "ЭКОМ_Документ";
ОперацияЗапись = Ложь;
ЛогСобытий = ""; 
// служебные переменные гибких настроек --

Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
|	ВыбранныеЗаписи.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
|	ВыбранныеЗаписи.Документ КАК Документ,
|	ВыбранныеЗаписи.Идентификатор КАК Идентификатор
|ПОМЕСТИТЬ ВыбранныеЗаписи
|ИЗ
|	&amp;ТаблицаВыбранныхЗаписей КАК ВыбранныеЗаписи
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ВыбранныеЗаписи.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
|	ВыбранныеЗаписи.Документ КАК Источник,
|	ВыбранныеЗаписи.Идентификатор КАК Идентификатор
|ИЗ
|	ВыбранныеЗаписи КАК ВыбранныеЗаписи
|
|СГРУППИРОВАТЬ ПО
|	ВыбранныеЗаписи.Документ,
|	ВыбранныеЗаписи.ИдентификаторЦепочки,
|	ВыбранныеЗаписи.Идентификатор";
Запрос.УстановитьПараметр("ТаблицаВыбранныхЗаписей", ТаблицаВыбранныхЗаписей);     
Выборка = Запрос.Выполнить().Выбрать(); 

Пока Выборка.Следующий() Цикл
    Источник = Выборка.Источник;

	ЦенаВключаетНДС = Ложь;
	МетаданныеТипЦен = Источник.Метаданные().Реквизиты.Найти("ТипЦен");
	Если НЕ МетаданныеТипЦен = Неопределено Тогда
		МетаданныеЦенаВключаетНДС = Источник.ТипЦен.Метаданные().Реквизиты.Найти("ЦенаВключаетНДС");
		Если НЕ МетаданныеЦенаВключаетНДС = Неопределено Тогда
			ЦенаВключаетНДС = Источник.ТипЦен.ЦенаВключаетНДС;
		КонецЕсли;  		
	КонецЕсли;  

	// Берем ранее созданный документ
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭКОМ_ДокументыПрайсЛист.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЭКОМ_Документы КАК ЭКОМ_ДокументыПрайсЛист
	|ГДЕ
	|	ЭКОМ_ДокументыПрайсЛист.Документ1С = &amp;Документ1С
	|	И ЭКОМ_ДокументыПрайсЛист.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ЭКОМ_ВидыДокументов.PRICAT_Исходящий)";

	Запрос.УстановитьПараметр("Документ1С", Источник);
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаДок = РезультатЗапроса.Выбрать();
		ВыборкаДок.Следующий();
		Приемник = ВыборкаДок.Ссылка.ПолучитьОбъект();
		ТекстЛогаСобытий = "Перезаписан уже существующий документ для " + Строка(Источник.Ссылка);
		ЗаписатьЛогСобытий(ЛогСобытий, ТекстЛогаСобытий);
	Иначе
		Приемник = Документы.ЭКОМ_Документы.СоздатьДокумент();	
	КонецЕсли;

	ИмяДокументаПрименика = "Электронный документ PRICAT";
	Пользователь = НайтиТекущегоПользователя();

	Приемник.Дата = ТекущаяДата();
	Приемник.Документ1С   = Источник;
	Приемник.ВидДокумента = Перечисления.ЭКОМ_ВидыДокументов.PRICAT_Исходящий;
	Приемник.Валюта       = Константы.ВалютаРегламентированногоУчета.Получить();
	Приемник.ФайлНомер    = Источник.Номер;
	Приемник.ФайлДата     = Источник.Дата;
	Приемник.ДействуетС   = Источник.Дата;
	Приемник.КонтактноеЛицоФИО  = СокрЛП(Пользователь);
	Приемник.Ответственный      = Пользователь;
	Приемник.УточнениеОПоставке = "9";
	Приемник.СтатусОбработкиДокумента = Перечисления.ЭКОМ_Статусы.Обработан;
	Приемник.ИдентификаторЦепочки = Выборка.ИдентификаторЦепочки;
	Приемник.ПрайсЛист.Очистить();
	ЗаписатьДокумент = Истина;

	ТипШтрихКода = "ШтрихкодыНоменклатуры";
	ОбъектШтрихкода = Метаданные.РегистрыСведений.Найти(ТипШтрихКода);
	Если ОбъектШтрихкода = Неопределено Тогда
		ТипШтрихКода = "Штрихкоды";
	КонецЕсли;

	ТипШтрихкодаНоменклатура = "Номенклатура"; 
	ОбъектШтрихкодаНоменклатура = Метаданные.РегистрыСведений[ТипШтрихКода].Ресурсы.Найти(ТипШтрихкодаНоменклатура);
	Если ОбъектШтрихкодаНоменклатура = Неопределено Тогда
		ТипШтрихкодаНоменклатура = "Владелец"; 	
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод,
	|	УстановкаЦенНоменклатурыТовары.Номенклатура КАК Номенклатура,
	|	УстановкаЦенНоменклатурыТовары.Цена КАК Цена
	|ИЗ
	|	Документ.УстановкаЦенНоменклатуры.Товары КАК УстановкаЦенНоменклатурыТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО УстановкаЦенНоменклатурыТовары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|ГДЕ
	|	УстановкаЦенНоменклатурыТовары.Ссылка = &amp;Ссылка
	|	И НЕ УстановкаЦенНоменклатурыТовары.Цена = 0";

	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ШтрихкодыНоменклатуры.Номенклатура", "ШтрихкодыНоменклатуры." + ТипШтрихкодаНоменклатура);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ШтрихкодыНоменклатуры", ТипШтрихКода);
	Запрос.УстановитьПараметр("Ссылка", Источник);

	РезультатЗапроса = Запрос.Выполнить();

	ТипЕдиницыИзмерения = "ЕдиницаИзмерения";
	МетаданныеЕдиницаИзмерения = Метаданные.Справочники.Номенклатура.Реквизиты.Найти(ТипЕдиницыИзмерения);
	Если МетаданныеЕдиницаИзмерения = Неопределено Тогда
		ТипЕдиницыИзмерения = "БазоваяЕдиницаИзмерения";	
	КонецЕсли;


	ТипСтавкаНДС = "ВидСтавкиНДС";
	МетаданныеСтавкаНДС = Метаданные.Справочники.Номенклатура.Реквизиты.Найти(ТипСтавкаНДС);
	Если МетаданныеСтавкаНДС = Неопределено Тогда
	ТипСтавкаНДС = "СтавкаНДС";	
	КонецЕсли;

	ВыборкаТЧ = РезультатЗапроса.Выбрать();
	Н = 1;
	Пока ВыборкаТЧ.Следующий() Цикл
	НовСтр = Приемник.ПрайсЛист.Добавить();
	НовСтр.ПолноеНазваниеПродукта = СокрЛП(ВыборкаТЧ.Номенклатура);
	НовСтр.НомерСтрокиXML   = Н;
	НовСтр.Номенклатура     = ВыборкаТЧ.Номенклатура;
	НовСтр.ЕдиницаИзмерения = ПолучитьЕдиницуИзмерения(СокрЛП(ВыборкаТЧ.Номенклатура[ТипЕдиницыИзмерения]));
	НовСтр.СтавкаНДС        = СтавкаНДСЧислом(ВыборкаТЧ.Номенклатура[ТипСтавкаНДС]);
	НовСтр.ШтрихКодПродукта = ВыборкаТЧ.Штрихкод;
	Если ЦенаВключаетНДС Тогда
		НовСтр.ЦенаВключаяНДС = ВыборкаТЧ.Цена;
		НовСтр.ЦенаБезНДС     = Окр((НовСтр.ЦенаВключаяНДС * 100) / (100 + НовСтр.СтавкаНДС) , 4);
	Иначе
		НовСтр.ЦенаБезНДС     = ВыборкаТЧ.Цена;
		НовСтр.ЦенаВключаяНДС = Окр((НовСтр.ЦенаБезНДС * (100 + НовСтр.СтавкаНДС)/100), 4);			
	КонецЕсли;
	НовСтр.ТребуемоеДействие = "2"; // добавление новых позиций
	Н = Н + 1;
	КонецЦикла;

	ИмяДокументаПриемника = "PRICAT исходящий";
	ДокументЗаписан = Ложь;

	ОшибокНеОбнаружено = Приемник.ПроверитьЗаполнение();
	Если ОшибокНеОбнаружено И ЗаписатьДокумент Тогда	

		Попытка

		Приемник.Записать(РежимЗаписиДокумента.Запись);      
		ДокументЗаписан = Истина;

		ВидДокументаПриемник = Перечисления.ЭКОМ_ВидыДокументов.PRICAT_Исходящий;	
							           	 					
		СтруктураРегистраDR_События = Новый Структура;
		СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, Выборка.ИдентификаторЦепочки);
		СтруктураРегистраDR_События.Вставить("Документ"					, Приемник.Ссылка);
		СтруктураРегистраDR_События.Вставить("ВидДокумента"				, ВидДокументаПриемник);
		СтруктураРегистраDR_События.Вставить("Идентификатор"			, Приемник.Ссылка.УникальныйИдентификатор());
		СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, Выборка.Идентификатор);
		СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
		ЭКОМ_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);


		Исключение    

			    ТекстЛогаСобытий = "Ошибка при записи. " + ИмяДокументаПриемника + " по документу " + Строка(Выборка.Источник) + " не создан.";
				ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, Перечисления.ЭКОМ_УровниЛогирования.Ошибка, ИмяСобытия);
				МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);  				    
		    
		КонецПопытки;

	КонецЕсли;	

	// служебные операции ++  
	Если ЗначениеЗаполнено(Приемник.Ссылка) И Не ОперацияЗапись Тогда
	КоличествоСозданныхДокументов = КоличествоСозданныхДокументов + 1;
	КонецЕсли;

	Если ЗначениеЗаполнено(ЛогСобытий) Тогда
	ТекстЛогаСобытий = ЛогСобытий;
	ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, Перечисления.ЭКОМ_УровниЛогирования.Информация, ИмяСобытия);
	МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);  			
	КонецЕсли;  
	// служебные операции --

КонецЦикла;</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:string">УстановкаЦенНоменклатуры_Исходящий</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">4</lastId>
			<item>
				<value xsi:type="xs:string">Прайс-лист</value>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">0</id>
			</item>
			<item>
				<value xsi:type="xs:string">ЭТРН</value>
				<id xsi:type="xs:decimal">1</id>
			</item>
			<item>
				<value xsi:type="xs:string">Поставщик</value>
				<id xsi:type="xs:decimal">2</id>
			</item>
			<item>
				<value xsi:type="xs:string">Покупатель</value>
				<id xsi:type="xs:decimal">3</id>
			</item>
			<item>
				<value xsi:type="xs:string">ИмяКнопки</value>
				<presentation>Создать PRICAT на основании 1С документа</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">4</id>
			</item>
		</Value>
	</row>
</ValueTree>