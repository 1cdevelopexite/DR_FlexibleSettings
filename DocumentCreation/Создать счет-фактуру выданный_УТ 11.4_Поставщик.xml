<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Источник</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Приемник</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Формула</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КолонкаИсточника</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Создать счет-фактуру выданный</Value>
		<Value xsi:type="xs:string">Реализация товаров и услуг</Value>
		<Value xsi:type="xs:string">СчетФактура_Исходящий</Value>
		<Value xsi:type="xs:string">ИмяСобытия = "Создание документов по кнопке &lt;&lt;&lt; Создать счет-фактуру выданный &gt;&gt;&gt;";

// служебные переменные гибких настроек ++
ТипПриемника   = "СчетФактураВыданный";
ОперацияЗапись = Ложь;
ЛогСобытий	   = ""; 
// служебные переменные гибких настроек --

Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
|	ВыбранныеЗаписи.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
|	ВыбранныеЗаписи.Документ КАК Документ,
|	ВыбранныеЗаписи.Идентификатор КАК Идентификатор
|ПОМЕСТИТЬ ВыбранныеЗаписи
|ИЗ
|	&amp;ТаблицаВыбранныхЗаписей КАК ВыбранныеЗаписи
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ВыбранныеЗаписи.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
|	ВыбранныеЗаписи.Документ КАК Источник
|ИЗ
|	ВыбранныеЗаписи КАК ВыбранныеЗаписи";
Запрос.УстановитьПараметр("ТаблицаВыбранныхЗаписей", ТаблицаВыбранныхЗаписей);

РезультатЗапроса = Запрос.Выполнить();   
Выборка = РезультатЗапроса.Выбрать();

Пока Выборка.Следующий() Цикл
	Приемник = Документы[ТипПриемника].СоздатьДокумент();

	ПараметрыДокумента = Новый Структура;
	ПараметрыДокумента.Вставить("ДокументОснование", Выборка.Источник);
	Приемник.Заполнить(ПараметрыДокумента);
	Приемник.Дата = ТекущаяДата();
	Приемник.ВыставленВЭлектронномВиде = Истина;
	Если Приемник.ДокументыОснования.Количество() = 0 Тогда
	    НовСтрока = Приемник.ДокументыОснования.Добавить();
	    НовСтрока.ДокументОснование = Выборка.Источник;
	КонецЕсли;

	ИмяДокументаПриемника = "Счет-фактура выданный";
	ДокументЗаписан = Ложь;
	Попытка
	    Приемник.Записать(РежимЗаписиДокумента.Проведение);      
	    ДокументЗаписан = Истина;
	    
       	Если НоваяАрхитектура Тогда
			ВидДокументаПриемник = Перечисления.ЭКОМ_ВидыДокументов.СчетФактура_Исходящий;	
			           	  					
			СтруктураРегистраDR_События = Новый Структура;
			СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, Выборка.ИдентификаторЦепочки);
			СтруктураРегистраDR_События.Вставить("Документ"					, Приемник.Ссылка);
			СтруктураРегистраDR_События.Вставить("ВидДокумента"				, ВидДокументаПриемник);
			СтруктураРегистраDR_События.Вставить("Идентификатор"			, Приемник.Ссылка.УникальныйИдентификатор());
			СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, Выборка.Источник.УникальныйИдентификатор());
			СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
			ЭКОМ_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);
		КонецЕсли;    		            
	Исключение    
	
			Попытка
			    Приемник.Записать(РежимЗаписиДокумента.Запись);
			    ДокументЗаписан = Истина; 
			    ТекстЛогаСобытий = "Ошибка при проведении. Документ " + ИмяДокументаПриемника + " по " + Строка(Выборка.Источник) + " не проведен.";
				ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, Перечисления.ЭКОМ_УровниЛогирования.Предупреждение, ИмяСобытия);
				МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);  			
		    Исключение
			    ТекстЛогаСобытий = "Ошибка при записи. " + ИмяДокументаПриемника + " по документу " + Строка(Выборка.Источник) + " не создан.";
				ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, Перечисления.ЭКОМ_УровниЛогирования.Ошибка, ИмяСобытия);
				МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);  			
		    КонецПопытки;   
		    
	КонецПопытки;
	
	// служебные операции ++  
	Если ЗначениеЗаполнено(Приемник.Ссылка) И Не ОперацияЗапись Тогда
		КоличествоСозданныхДокументов = КоличествоСозданныхДокументов + 1;
	КонецЕсли;

	Если ЗначениеЗаполнено(ЛогСобытий) Тогда
		ТекстЛогаСобытий = ЛогСобытий;
		ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, Перечисления.ЭКОМ_УровниЛогирования.Информация, ИмяСобытия);
		МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);  			
	КонецЕсли;  
	// служебные операции --

КонецЦикла;</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:string">Накладная_Исходящая</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">3</lastId>
			<item>
				<value xsi:type="xs:string">ИмяКнопки</value>
				<presentation>Создать счет-фактуру выданный</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">0</id>
			</item>
			<item>
				<value xsi:type="xs:string">Покупатель</value>
				<id xsi:type="xs:decimal">1</id>
			</item>
			<item>
				<value xsi:type="xs:string">Поставщик</value>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">2</id>
			</item>
			<item>
				<value xsi:type="xs:string">ЭТРН</value>
				<id xsi:type="xs:decimal">3</id>
			</item>
		</Value>
	</row>
</ValueTree>