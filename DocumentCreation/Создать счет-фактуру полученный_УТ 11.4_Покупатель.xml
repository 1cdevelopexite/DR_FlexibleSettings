<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Источник</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Приемник</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Формула</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КолонкаИсточника</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Создать счет-фактуру полученный</Value>
		<Value xsi:type="xs:string">Приобретение товаров и услуг</Value>
		<Value xsi:type="xs:string">СчетФактура_Входящий</Value>
		<Value xsi:type="xs:string">ИмяСобытия = "Создание документов по кнопке &lt;&lt;&lt; Создать счет-фактуру полученный &gt;&gt;&gt;";
// служебные переменные гибких настроек ++
ТипПриемника   = "СчетФактураПолученный";
ОперацияЗапись = Ложь;
ЛогСобытий	   = ""; 
// служебные переменные гибких настроек -- 

Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
|	ВыбранныеЗаписи.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
|	ВыбранныеЗаписи.Документ КАК Документ,
|	ВыбранныеЗаписи.Идентификатор КАК Идентификатор
|ПОМЕСТИТЬ ВыбранныеЗаписи
|ИЗ
|	&amp;ТаблицаВыбранныхЗаписей КАК ВыбранныеЗаписи
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ВыбранныеЗаписи.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
|	ВыбранныеЗаписи.Документ КАК Источник,
|	ПриобретениеТоваровУслуг.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
|	ПриобретениеТоваровУслуг.НомерВходящегоДокумента КАК НомерВходящегоДокумента
|ИЗ
|	ВыбранныеЗаписи КАК ВыбранныеЗаписи
|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
|		ПО (ВыбранныеЗаписи.Документ = ПриобретениеТоваровУслуг.Ссылка)";
Запрос.УстановитьПараметр("ТаблицаВыбранныхЗаписей", ТаблицаВыбранныхЗаписей);
Выборка = Запрос.Выполнить().Выбрать();

Пока Выборка.Следующий() Цикл      
	Приемник = Документы[ТипПриемника].СоздатьДокумент();

	ПараметрыДокумента = Новый Структура;
	ПараметрыДокумента.Вставить("ДокументОснование", Выборка.Источник);
	Приемник.Заполнить(ПараметрыДокумента);
	Приемник.Дата = ТекущаяДата();
	Приемник.ПолученВЭлектронномВиде = Ложь;
	Приемник.ДатаСоставления  = Выборка.ДатаВходящегоДокумента;
	Приемник.Номер                  = Выборка.НомерВходящегоДокумента;

	ИмяДокументаПрименика = "Счет-фактура полученный 1С";
	СоздаватьДокумент1СПроведенным = Настройка_Параметр_Прочитать("ЭКОМ_СоздаватьДокументПолученныйСЧФ1СПроведенным", Ложь);
	ОшибокНеОбнаружено = Приемник.ПроверитьЗаполнение();
	
	Если ОшибокНеОбнаружено Тогда
		Попытка
			Приемник.Записать(?(СоздаватьДокумент1СПроведенным, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
		Исключение
			Приемник.Записать(РежимЗаписиДокумента.Запись);
			ТекстЛогаСобытий = ИмяДокументаПрименика + " по документу " + Строка(Выборка.Источник) + " не создано!!! " + СокрЛП(ОписаниеОшибки()); 
			ЗаписатьЛогСобытий(ЛогСобытий, ТекстЛогаСобытий);
		КонецПопытки;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Приемник.Ссылка) Тогда
			ВидДокументаПриемник = Перечисления.ЭКОМ_ВидыДокументов.СчетФактура_Входящий;	
			           	  					
			СтруктураРегистраDR_События = Новый Структура;
			СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, Выборка.ИдентификаторЦепочки);
			СтруктураРегистраDR_События.Вставить("Документ"					, Приемник.Ссылка);
			СтруктураРегистраDR_События.Вставить("ВидДокумента"				, ВидДокументаПриемник);
			СтруктураРегистраDR_События.Вставить("Идентификатор"			, Приемник.Ссылка.УникальныйИдентификатор());
			СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, Выборка.Источник.УникальныйИдентификатор());
			СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
			ЭКОМ_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);
	КонецЕсли;
	
	// служебные операции ++  
	Если ЗначениеЗаполнено(Приемник.Ссылка) И Не ОперацияЗапись Тогда 
		КоличествоСозданныхДокументов = КоличествоСозданныхДокументов + 1;
	КонецЕсли;

	Если ЗначениеЗаполнено(ЛогСобытий) Тогда
		ТекстЛогаСобытий = ЛогСобытий;
		ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, Перечисления.ЭКОМ_УровниЛогирования.Информация, ИмяСобытия);
		МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);  			
	КонецЕсли;  
	// служебные операции -- 

КонецЦикла;</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:string">Накладная_Входящая</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">-1</lastId>
		</Value>
	</row>
</ValueTree>