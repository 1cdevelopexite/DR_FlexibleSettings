<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ИмяКнопки</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Формула</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Регламент</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Создать корректировку реализации товаров</Value>
		<Value xsi:type="xs:string">СоздатьКорректировкуРеализации</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:string">//&lt;Служебные переменные&gt;
ТипПриемника   = "КорректировкаРеализации";
ИмяСобытия = "Создание документов по кнопке &lt;&lt;&lt; Создать корректировку реализации товаров &gt;&gt;&gt;";

ОперацияЗапись = Ложь;
ЛогСобытий	   = ""; 

ПроводитьРеализацию = Настройка_Параметр_Прочитать("EDI_СоздаватьДокументРеализация1СПроведенным");

ВыбранныеСтроки = ?(ВыбранныеСтроки = Неопределено, Новый Массив, ВыбранныеСтроки);
//&lt;/Служебные переменные&gt;

КвалификаторСтрок = Новый КвалификаторыСтроки(36);

ТаблицаВыбранныхЗаписей = Новый ТаблицаЗначений;                                  
ТаблицаВыбранныхЗаписей.Колонки.Добавить("Документ"				, Новый ОписаниеТипов("ДокументСсылка.РеализацияТоваровУслуг"));
ТаблицаВыбранныхЗаписей.Колонки.Добавить("ИдентификаторЦепочки"	, Новый ОписаниеТипов("Строка",,,,КвалификаторСтрок));
ТаблицаВыбранныхЗаписей.Колонки.Добавить("Идентификатор"		, Новый ОписаниеТипов("Строка",,,,КвалификаторСтрок));

Для Каждого Элемент Из ВыбранныеСтроки Цикл
	
	Элемент.Вставить("Идентификатор", Элемент.Документ.УникальныйИдентификатор());
	
	НоваяСтрока = ТаблицаВыбранныхЗаписей.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Элемент);
	
КонецЦикла;

Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
|	ВыбранныеЗаписи.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
|	ВыбранныеЗаписи.Документ КАК Документ,
|	ВыбранныеЗаписи.Идентификатор КАК Идентификатор
|ПОМЕСТИТЬ ВыбранныеЗаписи
|ИЗ
|	&amp;ТаблицаВыбранныхЗаписей КАК ВыбранныеЗаписи
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ВыбранныеЗаписи.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
|	ВыбранныеЗаписи.Документ КАК РеализацияСсылка,
|	ВыбранныеЗаписи.Документ.Грузополучатель КАК Грузополучатель,
|	ВЫРАЗИТЬ(RECADV_События.Документ КАК Документ.DR_Документ) КАК RECADV,
|	ВЫРАЗИТЬ(RECADV_События.Документ КАК Документ.DR_Документ).Статус КАК СтатусRECADV,
|	DR_ЦепочкиДокументов.НомерЗаказа КАК ORDERNUMBER,
|	DR_ЦепочкиДокументов.ДатаЗаказа КАК ORDERDATE,
|	ВЫРАЗИТЬ(RECADV_NUMBER.Значение КАК СТРОКА(50)) КАК RECADVФайлНомер,
|	ВЫРАЗИТЬ(RECADV_DATE.Значение КАК ДАТА) КАК RECADVФайлДата,
|	ЕСТЬNULL(RECADV_POSITION.ХранилищеЗначения, НЕОПРЕДЕЛЕНО) КАК POSITION
|ИЗ
|	ВыбранныеЗаписи КАК ВыбранныеЗаписи
|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
|		ПО (ВыбранныеЗаписи.Документ = РеализацияТоваровУслуг.Ссылка)
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_ЦепочкиДокументов КАК DR_ЦепочкиДокументов
|		ПО (ВыбранныеЗаписи.ИдентификаторЦепочки = DR_ЦепочкиДокументов.ИдентификаторЦепочки)
|			И (РАЗНОСТЬДАТ(DR_ЦепочкиДокументов.ДатаЗаказа, &amp;ТекущаяДата, ДЕНЬ) МЕЖДУ 0 И &amp;ПериодСвязиДокументов)
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК RECADV_События
|		ПО (ВыбранныеЗаписи.ИдентификаторЦепочки = RECADV_События.ИдентификаторЦепочки)
|			И (RECADV_События.ВидДокумента = ""RECADV_Входящий"")
|			И (ВыбранныеЗаписи.Идентификатор = RECADV_События.ИдентификаторОснования)
|        ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК RECADV_NUMBER
|        ПО RECADV_События.Документ = RECADV_NUMBER.Ссылка
|        	И (RECADV_NUMBER.Реквизит = ""NUMBER"")
|        ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК RECADV_DATE
|        ПО RECADV_События.Документ = RECADV_DATE.Ссылка
|        	И (RECADV_DATE.Реквизит = ""ДатаЭлектронногоДокумента"")
|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК RECADV_POSITION
|		ПО (RECADV_События.Документ = RECADV_POSITION.Ссылка)
|			И (RECADV_POSITION.Реквизит = ""POSITION"")"; 

Запрос.УстановитьПараметр("ТаблицаВыбранныхЗаписей", ТаблицаВыбранныхЗаписей);
Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
Запрос.УстановитьПараметр("ПериодСвязиДокументов", DR_EDI_ОбщегоНазначения.Настройка_Параметр_Прочитать("EDI_ПериодСвязиДокументов"));

РезультатЗапроса = Запрос.Выполнить();		
Запись = РезультатЗапроса.Выбрать();

Пока Запись.Следующий() Цикл  
	
	Если Не ЗначениеЗаполнено(Запись.RECADV) Тогда
		
		ТекстОшибки = "Не найден документ RECADV для накладной: " + Строка(Запись.РеализацияСсылка);                          
		
		ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстОшибки, "Ошибка", ИмяСобытия);
		МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
		
		Продолжить;
	
	ИначеЕсли Запись.СтатусRECADV = "НеОбработан" Тогда
		
		ТекстОшибки = "Не создан документ ""корректировка реализации"", т.к. документ RECADV в статусе ""не обработан"" для накладной: " + Строка(Запись.РеализацияСсылка);                          
		ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстОшибки, "Ошибка", ИмяСобытия);			
		МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
			
		Продолжить;
		
	КонецЕсли;
	
	Приемник = Документы[ТипПриемника].СоздатьДокумент();
	
	Приемник.Заполнить(Запись.РеализацияСсылка);
	
	Приемник.Дата = ТекущаяДатаСеанса();
	Приемник.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение");
	
	Приемник.Комментарий = "Заказ № %ORDERNUMBER% от %ORDERDATE%";
	Приемник.Комментарий = СтрЗаменить(Приемник.Комментарий, "%ORDERNUMBER%", Запись.ORDERNUMBER);
	Приемник.Комментарий = СтрЗаменить(Приемник.Комментарий, "%ORDERDATE%", Формат(Запись.ORDERDATE, "ДФ=dd.MM.yyyy"));
	
	Если НЕ ЗначениеЗаполнено(Приемник.ДокументРеализации) Тогда
		
		ТекстОшибки = НСтр("ru = 'В создаваемом документе поле ""Документ основание"" не заполнено.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());                          
		
		ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстОшибки, "Ошибка", ИмяСобытия);
		МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
		
		Продолжить;
	КонецЕсли;
	
	Если Приемник.Грузополучатель.Пустая() И Не Запись.РеализацияСсылка.Пустая() Тогда
		 Приемник.Грузополучатель = Запись.Грузополучатель;
	КонецЕсли;
	
	//&lt;Получение данных элемента POSITION&gt;
	Если Запись.POSITION &lt;&gt; Неопределено Тогда			
		МассивСтруктурPOSITION = Запись.POSITION.Получить();			
	Иначе
		
		ТекстЛогаСобытий = "Корректировка реализации не создана, т.к. в RECADV отсутсвует элемент POSITION.";
		
		ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Предупреждение", ИмяСобытия);			
		МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
		
		Продолжить;			
	КонецЕсли;			
	
	КвалификаторЧисло = Новый КвалификаторыЧисла(15, 3, ДопустимыйЗнак.Неотрицательный);
	
	ТаблицаPOSITION = Новый ТаблицаЗначений;
	ТаблицаPOSITION.Колонки.Добавить("Номенклатура"		, Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаPOSITION.Колонки.Добавить("ACCEPTEDQUANTITY"	, Новый ОписаниеТипов("Число",,,,КвалификаторЧисло));			
	
	Для Каждого ЭлСтруктура Из МассивСтруктурPOSITION Цикл
		
		НоваяСтрока = ТаблицаPOSITION.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ЭлСтруктура);
		
	КонецЦикла;
	
	Если Приемник.Услуги.Количество() &gt; 0 И Приемник.Товары.Количество() = 0 Тогда
	    ИмяТЧ = "Услуги";
	Иначе
		ИмяТЧ = "Товары";
	КонецЕсли;
	
	//&lt;Сравнение количества табличной части Товары и POSITION&gt;
	ЗапросТЧ = Новый Запрос;
	ЗапросТЧ.Текст = 
	"ВЫБРАТЬ
	|	POSITION.Номенклатура КАК Номенклатура,
	|	POSITION.ACCEPTEDQUANTITY КАК ACCEPTEDQUANTITY
	|ПОМЕСТИТЬ ТаблицаRecadv
	|ИЗ
	|	&amp;POSITION КАК POSITION
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.КоличествоДоКорректировки КАК КоличествоДоКорректировки,
	|	Товары.Количество КАК Количество
	|ПОМЕСТИТЬ ТаблицаКорректировка
	|ИЗ
	|	&amp;Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаКорректировка.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаКорректировка.Количество &lt;&gt; ТаблицаRecadv.ACCEPTEDQUANTITY
	|			ТОГДА ТаблицаRecadv.ACCEPTEDQUANTITY
	|		КОГДА ТаблицаRecadv.Номенклатура ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаКорректировка.Количество
	|	КОНЕЦ КАК КоличествоПринятое
	|ИЗ
	|	ТаблицаКорректировка КАК ТаблицаКорректировка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаRecadv КАК ТаблицаRecadv
	|		ПО ТаблицаКорректировка.Номенклатура = ТаблицаRecadv.Номенклатура";
	
	ЗапросТЧ.УстановитьПараметр("POSITION", ТаблицаPOSITION);
	ЗапросТЧ.УстановитьПараметр("Товары", Приемник[ИмяТЧ]);
	
	Результат = ЗапросТЧ.Выполнить();
	Выборка   = Результат.Выбрать();
	
	//Заполняем количество по данным RECADV
	Пока Выборка.Следующий() Цикл
		
		СтрокаКорр = Приемник[ИмяТЧ].Найти(Выборка.Номенклатура);
		СтрокаКорр.Количество = Выборка.КоличествоПринятое;
		
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(СтрокаКорр, Приемник);
		
		СтрокаКорр.СуммаНДС = УчетНДС.РассчитатьСуммуНДС(СтрокаКорр["Сумма"], 
														 Приемник.УчитыватьНДС, 
														 Приемник.СуммаВключаетНДС, 
														 УчетНДС.ПолучитьСтавкуНДС(СтрокаКорр.СтавкаНДС));
		
	КонецЦикла;
	
	Если Приемник[ИмяТЧ].Итог("Количество") = Приемник[ИмяТЧ].Итог("КоличествоДоИзменения") Тогда
		
		ТекстЛогаСобытий = "Документ не был создан. Причина: Между расходной накладной и RECADV расхождений нет";
		
		ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Предупреждение", ИмяСобытия);
		МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
		
		Продолжить;	
	КонецЕсли;
	
	ОшибокНеОбнаружено = Приемник.ПроверитьЗаполнение();
	
	Если ОшибокНеОбнаружено Тогда
		
		НачатьТранзакцию();
		
		Попытка 
			
			ДокументСсылка = Документы[ТипПриемника].ПолучитьСсылку(Новый УникальныйИдентификатор);
			Идентификатор = ДокументСсылка.УникальныйИдентификатор();	
			Приемник.УстановитьСсылкуНового(ДокументСсылка);
			
			ВидДокументаПриемник = "КорректировочнаяНакладная_Исходящая";					           	  					
			
			СтруктураРегистраDR_События = Новый Структура;
			СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, Запись.ИдентификаторЦепочки);    
			СтруктураРегистраDR_События.Вставить("Документ"					, ДокументСсылка);  
			СтруктураРегистраDR_События.Вставить("ВидДокумента"				, ВидДокументаПриемник);   
			СтруктураРегистраDR_События.Вставить("Идентификатор"			, Идентификатор);
			СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, Запись.РеализацияСсылка.УникальныйИдентификатор());
			СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());  
			
			НЗ_DRСобытия = РегистрыСведений.DR_События.СоздатьНаборЗаписей();
			НЗ_DRСобытия.Отбор.ИдентификаторЦепочки.Установить(СтруктураРегистраDR_События.ИдентификаторЦепочки);
			НЗ_DRСобытия.Отбор.Документ.Установить(СтруктураРегистраDR_События.Документ);
			НЗ_DRСобытия.Отбор.ВидДокумента.Установить(СтруктураРегистраDR_События.ВидДокумента);
			НЗ_DRСобытия.Отбор.Идентификатор.Установить(СтруктураРегистраDR_События.Идентификатор);
			НЗ_DRСобытия.Прочитать();
			
			Если НЗ_DRСобытия.Количество() = 0 Тогда
				НоваяЗапись = НЗ_DRСобытия.Добавить();
			Иначе
				НоваяЗапись = НЗ_DRСобытия[0];
			КонецЕсли;
			
			Для Каждого Элемент Из СтруктураРегистраDR_События Цикл			
				НоваяЗапись[Элемент.Ключ] = Элемент.Значение; 	
			КонецЦикла;
			
			НЗ_DRСобытия.Записать();
			
			Приемник.Записать(?(ПроводитьРеализацию, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			Ошибка = ОписаниеОшибки();
			
			ТекстОшибки = НСтр("ru = 'Ошибка %РежимЗаписиДокумента% документа на основе входящего документа № %ФайлНомер% от %ФайлДата%. '" 
						+ Ошибка, ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
						
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%РежимЗаписиДокумента%"	, ?(ПроводитьРеализацию, "проведения", "записи"));
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ФайлНомер%"			, Запись.RECADVФайлНомер);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ФайлДата%"				, Формат(Запись.RECADVФайлДата, "ДФ=dd.MM.yyyy"));
			
			ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстОшибки, "Ошибка", ИмяСобытия);
			МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);	
			
			Продолжить;				
		КонецПопытки;
		
	КонецЕсли;
	
  // служебные операции
	Если ЗначениеЗаполнено(Приемник.Ссылка) И Не ОперацияЗапись Тогда
		КоличествоСозданныхДокументов = КоличествоСозданныхДокументов + 1;
	КонецЕсли;
	
КонецЦикла;</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">4</lastId>
			<item>
				<value xsi:type="xs:string">Прайс-лист</value>
				<id xsi:type="xs:decimal">0</id>
			</item>
			<item>
				<value xsi:type="xs:string">Поставщик</value>
				<presentation>СписокНакладныеИсходящиеПоставщик</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">1</id>
			</item>
			<item>
				<value xsi:type="xs:string">Покупатель</value>
				<id xsi:type="xs:decimal">2</id>
			</item>
			<item>
				<value xsi:type="xs:string">Синоним</value>
				<presentation>Создать корректировку реализации товаров</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">3</id>
			</item>
			<item>
				<value xsi:type="xs:string">ИмяКнопки</value>
				<presentation>СоздатьКорректировкуРеализации</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">4</id>
			</item>
		</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">-1</lastId>
		</Value>
	</row>
</ValueTree>