<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Формула</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Регламент</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ИмяКнопки</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Создать PRICAT на основании 1С документа</Value>
		<Value xsi:type="xs:string">ИмяСобытия = "Создание документов по кнопке &lt;&lt;&lt; Создать PRICAT на основании 1С документа &gt;&gt;&gt;";

ЛогСобытий = ""; 

КвалификаторСтрок = Новый КвалификаторыСтроки(36);

МассивТипов = Новый Массив;
МассивТипов.Добавить(Тип("ДокументСсылка.УстановкаЦенНоменклатуры"));
	
ТаблицаВыбранныхЗаписей = Новый ТаблицаЗначений;
ТаблицаВыбранныхЗаписей.Колонки.Добавить("ИдентификаторЦепочки", Новый ОписаниеТипов("Строка",,,,КвалификаторСтрок));
	
Для Каждого Элемент Из ВыбранныеСтроки Цикл

	НоваяСтрока = ТаблицаВыбранныхЗаписей.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Элемент);
		
КонецЦикла;

Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
	|	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
	|	DR_События.Идентификатор КАК Идентификатор,
	|	DR_События.Документ КАК Источник
	|ИЗ
	|	РегистрСведений.DR_События КАК DR_События
	|ГДЕ
	|	DR_События.ВидДокумента = ""УстановкаЦенНоменклатуры_Исходящий""
	|	И DR_События.ИдентификаторЦепочки В(&amp;ЦепочкиДокументов)";

Запрос.УстановитьПараметр("ЦепочкиДокументов", ТаблицаВыбранныхЗаписей.ВыгрузитьКолонку("ИдентификаторЦепочки"));     
Выборка = Запрос.Выполнить().Выбрать(); 

Пока Выборка.Следующий() Цикл
    Источник = Выборка.Источник;
    
 	ЦенаВключаетНДС = Ложь;
	МетаданныеТипЦен = Источник.Метаданные().Реквизиты.Найти("ТипЦен");
	Если НЕ МетаданныеТипЦен = Неопределено Тогда
		МетаданныеЦенаВключаетНДС = Источник.ТипЦен.Метаданные().Реквизиты.Найти("ЦенаВключаетНДС");
		Если НЕ МетаданныеЦенаВключаетНДС = Неопределено Тогда
			ЦенаВключаетНДС = Источник.ТипЦен.ЦенаВключаетНДС;
		КонецЕсли;  		
	КонецЕсли;  
    
    ТаблицаТоваров = Новый ТаблицаЗначений;
	ТаблицаТоваров.Колонки.Добавить("PRODUCTNAME");
	ТаблицаТоваров.Колонки.Добавить("POSITIONNUMBER");
	ТаблицаТоваров.Колонки.Добавить("Номенклатура");
	ТаблицаТоваров.Колонки.Добавить("UNIT");
	ТаблицаТоваров.Колонки.Добавить("TAXRATE");
	ТаблицаТоваров.Колонки.Добавить("PRODUCT");
	ТаблицаТоваров.Колонки.Добавить("ACTION");
	ТаблицаТоваров.Колонки.Добавить("PRICEWITHVAT");
	ТаблицаТоваров.Колонки.Добавить("UNITPRICE");
   
	// Берем ранее созданный документ
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
		|	DR_События.Статус КАК Статус,
	    |	DR_События.Документ КАК Документ
	    |ПОМЕСТИТЬ ВтСобытиеPricat
	    |ИЗ
	    |	РегистрСведений.DR_События КАК DR_События
	    |ГДЕ
	    |	DR_События.ВидДокумента = ""PRICAT_Исходящий""
	    |;
	    |
	    |////////////////////////////////////////////////////////////////////////////////
	    |ВЫБРАТЬ
	    |	DR_Документ.Ссылка КАК Ссылка
	    |ПОМЕСТИТЬ ВтДокументPricat
	    |ИЗ
	    |	Документ.DR_Документ.ДополнительныеРеквизиты КАК DR_ДокументДополнительныеРеквизиты
	    |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ КАК DR_Документ
	    |		ПО (DR_ДокументДополнительныеРеквизиты.Ссылка = DR_Документ.Ссылка)
	    |			И (DR_ДокументДополнительныеРеквизиты.Реквизит = ""Документ1С"")
	    |ГДЕ
	    |	DR_ДокументДополнительныеРеквизиты.Значение = &amp;Документ1С
	    |	И DR_Документ.ВидДокумента = ""PRICAT_Исходящий""
	    |;
	    |
	    |////////////////////////////////////////////////////////////////////////////////
	    |ВЫБРАТЬ
	    |	ВтДокументPricat.Ссылка КАК Ссылка,
	    |	ВтСобытиеPricat.Статус КАК Статус
	    |ИЗ
	    |	ВтДокументPricat КАК ВтДокументPricat
	    |		ЛЕВОЕ СОЕДИНЕНИЕ ВтСобытиеPricat КАК ВтСобытиеPricat
	    |		ПО (ВтДокументPricat.Ссылка = ВтСобытиеPricat.Документ)";
        
	Запрос.УстановитьПараметр("Документ1С", Источник);
	ВыборкаДок = Запрос.Выполнить().Выбрать();
	
	Если ВыборкаДок.Следующий() Тогда
		Если ВыборкаДок.Статус = "Отправлен" Тогда
			ТекстЛогаСобытий = Строка(ВыборкаДок.Ссылка) +", уже отправлен, перезаписать документ невозможно.";
			ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Информация", ИмяСобытия);
			МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога); 
			Продолжить;
		Иначе
			Приемник = ВыборкаДок.Ссылка.ПолучитьОбъект();
			ТекстЛогаСобытий = "Перезаписан уже существующий документ для " + Строка(Источник.Ссылка);
			ЗаписатьЛогСобытий(ЛогСобытий, ТекстЛогаСобытий);
		КонецЕсли	
	Иначе
		Приемник = Документы.DR_Документ.СоздатьДокумент();	
	КонецЕсли;

	ИмяДокументаПрименика = "Электронный документ PRICAT";
	Пользователь = НайтиТекущегоПользователя();
    
    //Заполняем структуру данных документа для записи.
	Приемник.Дата = ТекущаяДата();
	Приемник.ВидДокумента 				= "PRICAT_Исходящий";
	Приемник.Статус						= "Обработан";
	Приемник.ИдентификаторЦепочки 		= Выборка.ИдентификаторЦепочки;
	Приемник.Пользователь 				= Пользователь;
	
	ДанныеДокумента = Новый Структура();
    ДанныеДокумента.Вставить("Документ1С"				, Источник);
    ДанныеДокумента.Вставить("Валюта"					, Константы.ВалютаРегламентированногоУчета.Получить());
    ДанныеДокумента.Вставить("NUMBER"					, Источник.Номер);
    ДанныеДокумента.Вставить("DATE"						, Источник.Дата);
    ДанныеДокумента.Вставить("ДействуетС"				, Источник.Дата);
	ДанныеДокумента.Вставить("ДействуетПо"				, Дата('00010101'));
    ДанныеДокумента.Вставить("CONTACTFACE"				, СокрЛП(Пользователь));
    ДанныеДокумента.Вставить("Пользователь"				, Пользователь);
    ДанныеДокумента.Вставить("Контрагент"				, Справочники.Контрагенты.ПустаяСсылка());
    ДанныеДокумента.Вставить("Организация"				, Справочники.Организации.ПустаяСсылка());
    ДанныеДокумента.Вставить("ACTION"					, "9");
    ДанныеДокумента.Вставить("СтатусОбработкиДокумента"	, "Обработан");
    ДанныеДокумента.Вставить("POSITION"					, ТаблицаТоваров);
	
	//Заполняем таблицу товаров документа для записи.	
	ТипШтрихКода = "ШтрихкодыНоменклатуры";
	ОбъектШтрихкода = Метаданные.РегистрыСведений.Найти(ТипШтрихКода);
	Если ОбъектШтрихкода = Неопределено Тогда
		ТипШтрихКода = "Штрихкоды";
	КонецЕсли;

	ТипШтрихкодаНоменклатура = "Номенклатура"; 
	ОбъектШтрихкодаНоменклатура = Метаданные.РегистрыСведений[ТипШтрихКода].Ресурсы.Найти(ТипШтрихкодаНоменклатура);
	Если ОбъектШтрихкодаНоменклатура = Неопределено Тогда
		ТипШтрихкодаНоменклатура = "Владелец"; 	
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
		|	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод,
		|	УстановкаЦенНоменклатурыТовары.Номенклатура КАК Номенклатура,
		|	УстановкаЦенНоменклатурыТовары.Цена КАК Цена
		|ИЗ
		|	Документ.УстановкаЦенНоменклатуры.Товары КАК УстановкаЦенНоменклатурыТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
		|		ПО УстановкаЦенНоменклатурыТовары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
		|ГДЕ
		|	УстановкаЦенНоменклатурыТовары.Ссылка = &amp;Ссылка
		|	И НЕ УстановкаЦенНоменклатурыТовары.Цена = 0";

	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ШтрихкодыНоменклатуры.Номенклатура", "ШтрихкодыНоменклатуры." + ТипШтрихкодаНоменклатура);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ШтрихкодыНоменклатуры", ТипШтрихКода);
	Запрос.УстановитьПараметр("Ссылка", Источник);

	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТЧ = РезультатЗапроса.Выбрать();

	ТипЕдиницыИзмерения = "ЕдиницаИзмерения";
	МетаданныеЕдиницаИзмерения = Метаданные.Справочники.Номенклатура.Реквизиты.Найти(ТипЕдиницыИзмерения);
	Если МетаданныеЕдиницаИзмерения = Неопределено Тогда
		ТипЕдиницыИзмерения = "БазоваяЕдиницаИзмерения";	
	КонецЕсли;

	ТипСтавкаНДС = "ВидСтавкиНДС";
	МетаданныеСтавкаНДС = Метаданные.Справочники.Номенклатура.Реквизиты.Найти(ТипСтавкаНДС);
	Если МетаданныеСтавкаНДС = Неопределено Тогда
		ТипСтавкаНДС = "СтавкаНДС";	
	КонецЕсли;

	Н = 1;
	Пока ВыборкаТЧ.Следующий() Цикл
				
		НоваяСтрока = ТаблицаТоваров.Добавить();
		НоваяСтрока.PRODUCTNAME 	= СокрЛП(ВыборкаТЧ.Номенклатура);
		НоваяСтрока.POSITIONNUMBER  = Н;
		НоваяСтрока.Номенклатура    = ВыборкаТЧ.Номенклатура;
		НоваяСтрока.UNIT 			= ПолучитьЕдиницуИзмерения(СокрЛП(ВыборкаТЧ.Номенклатура[ТипЕдиницыИзмерения]));
		НоваяСтрока.TAXRATE        	= СтавкаНДСЧислом(ВыборкаТЧ.Номенклатура[ТипСтавкаНДС]);
		НоваяСтрока.PRODUCT 		= ВыборкаТЧ.Штрихкод;
		НоваяСтрока.ACTION 			= "2"; // добавление новых позиций
		
		Если ЦенаВключаетНДС Тогда
			НоваяСтрока.PRICEWITHVAT = ВыборкаТЧ.Цена;
			НоваяСтрока.UNITPRICE    = Окр((НоваяСтрока.PRICEWITHVAT * 100) / (100 + НоваяСтрока.TAXRATE) , 4);
		Иначе
			НоваяСтрока.UNITPRICE    = ВыборкаТЧ.Цена;
			НоваяСтрока.PRICEWITHVAT = Окр((НоваяСтрока.UNITPRICE * (100 + НоваяСтрока.TAXRATE)/100), 4);			
		КонецЕсли;	

		Н = Н + 1;
		
	КонецЦикла;
    
    //Заполняем документ данными структуры.
    Приемник.ДополнительныеРеквизиты.Очистить();
    
    Для Каждого ЭлементСтруктуры Из ДанныеДокумента Цикл
		
		НоваяСтрока = Приемник.ДополнительныеРеквизиты.Добавить();
		
		НоваяСтрока.Реквизит = ЭлементСтруктуры.Ключ;
		
		Если ТипЗнч(ЭлементСтруктуры.Значение) = Тип("ТаблицаЗначений") Тогда					
			Хранилище = Новый ХранилищеЗначения(ЭлементСтруктуры.Значение);
			НоваяСтрока.ХранилищеЗначения = Хранилище;
		Иначе	
			НоваяСтрока.Значение = ЭлементСтруктуры.Значение;		
		КонецЕсли;
							
	КонецЦикла;
    
	ИмяДокументаПриемника = "PRICAT исходящий";
	ДокументЗаписан = Ложь;

	ОшибокНеОбнаружено = Приемник.ПроверитьЗаполнение();
	Если ОшибокНеОбнаружено Тогда	

		Попытка
			
			Если Приемник.Ссылка.Пустая() Тогда   				
				
				ДокументСсылка = Документы[Приемник.Метаданные().Имя].ПолучитьСсылку(Новый УникальныйИдентификатор);
				ИдентификаторДокумента = ДокументСсылка.УникальныйИдентификатор();	
				Приемник.УстановитьСсылкуНового(ДокументСсылка);
				
			Иначе
				
				ДокументСсылка = Приемник.Ссылка;
				ИдентификаторДокумента = Приемник.Ссылка.УникальныйИдентификатор();
				
			КонецЕсли;
			
			Приемник.ИдентификаторДокумента = ИдентификаторДокумента; 
			Приемник.Записать(РежимЗаписиДокумента.Запись);      
			ДокументЗаписан = Истина;

			ВидДокументаПриемник = "PRICAT_Исходящий";	
								           	 					
			СтруктураРегистраDR_События = Новый Структура;
			СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, Выборка.ИдентификаторЦепочки);
			СтруктураРегистраDR_События.Вставить("Документ"					, Приемник.Ссылка);
			СтруктураРегистраDR_События.Вставить("ВидДокумента"				, ВидДокументаПриемник);
			СтруктураРегистраDR_События.Вставить("Идентификатор"			, ИдентификаторДокумента);
			СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, Выборка.Идентификатор);
			СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
			СтруктураРегистраDR_События.Вставить("Статус"					, "Обработан");
			DR_EDI_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);

		Исключение    

			ТекстЛогаСобытий = "Ошибка при записи. " + ИмяДокументаПриемника + " по документу " + Строка(Выборка.Источник) + " не создан.";
			ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Ошибка", ИмяСобытия);
			МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);  				    
		    
		КонецПопытки;

	КонецЕсли;	
 
	Если ЗначениеЗаполнено(Приемник.Ссылка) Тогда
		КоличествоСозданныхДокументов = КоличествоСозданныхДокументов + 1;
	КонецЕсли;

	Если ЗначениеЗаполнено(ЛогСобытий) Тогда
		ТекстЛогаСобытий = ЛогСобытий;
		ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Информация", ИмяСобытия);
		МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);  			
	КонецЕсли;  

КонецЦикла;</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">5</lastId>
			<item>
				<value xsi:type="xs:string">Неструкт. докум.</value>
				<id xsi:type="xs:decimal">0</id>
			</item>
			<item>
				<value xsi:type="xs:string">Прайс-лист</value>
				<presentation>СписокPricatИсходящийПостащикПокупатель</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">1</id>
			</item>
			<item>
				<value xsi:type="xs:string">Поставщик</value>
				<id xsi:type="xs:decimal">2</id>
			</item>
			<item>
				<value xsi:type="xs:string">Покупатель</value>
				<id xsi:type="xs:decimal">3</id>
			</item>
			<item>
				<value xsi:type="xs:string">Синоним</value>
				<presentation>Создать PRICAT на основании 1С документа</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">4</id>
			</item>
			<item>
				<value xsi:type="xs:string">ИмяКнопки</value>
				<presentation>СоздатьPricatНаОсновании1СДокумента</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">5</id>
			</item>
		</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">1</lastId>
			<item>
				<value xsi:type="xs:string"/>
				<presentation>ТекстЗапроса</presentation>
				<id xsi:type="xs:decimal">0</id>
			</item>
		</Value>
		<Value xsi:type="xs:string">СоздатьPricatНаОсновании1СДокумента</Value>
	</row>
</ValueTree>