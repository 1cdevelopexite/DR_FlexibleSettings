<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Формула</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Регламент</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ИмяКнопки</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Создать документ установки цен</Value>
		<Value xsi:type="xs:string">ИмяСобытия = "Создание документов по кнопке &lt;&lt;&lt; Создать установку цен номенклатуры &gt;&gt;&gt;";
	
КвалификаторСтрок = Новый КвалификаторыСтроки(36);
	
ТаблицаВыбранныхЗаписей = Новый ТаблицаЗначений;
ТаблицаВыбранныхЗаписей.Колонки.Добавить("Документ", Новый ОписаниеТипов("ДокументСсылка.DR_Документ"));
ТаблицаВыбранныхЗаписей.Колонки.Добавить("ИдентификаторЦепочки", Новый ОписаниеТипов("Строка",,,,КвалификаторСтрок));
ТаблицаВыбранныхЗаписей.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка",,,,КвалификаторСтрок));
	
Для Каждого Элемент Из ВыбранныеСтроки Цикл
	Элемент.Вставить("Идентификатор", Элемент.Документ.ИдентификаторДокумента);
	НоваяСтрока = ТаблицаВыбранныхЗаписей.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Элемент);
КонецЦикла;

Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
	|	ВыбранныеЗаписи.Документ КАК Документ,
	|	ВыбранныеЗаписи.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
	|	ВыбранныеЗаписи.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ТЗ_ВыбранныеЗаписи
	|ИЗ
	|	&amp;ТаблицаВыбранныхЗаписей КАК ВыбранныеЗаписи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЗ_ВыбранныеЗаписи.Документ КАК Документ,
	|	ТЗ_ВыбранныеЗаписи.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
	|	ТЗ_ВыбранныеЗаписи.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ВТ_Отбор
	|ИЗ
	|	ТЗ_ВыбранныеЗаписи КАК ТЗ_ВыбранныеЗаписи
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ КАК DR_Документ
	|		ПО ТЗ_ВыбранныеЗаписи.Документ = DR_Документ.Ссылка
	|ГДЕ
	|	DR_Документ.Статус = ""Обработан""
	|	И НЕ DR_Документ.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Отбор.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
	|	ВТ_Отбор.Документ КАК Источник,
	|	ВТ_Отбор.Идентификатор КАК Идентификатор,
	|	РеквизитДокумент1С.Значение КАК Документ1С,  
	|	РеквизитВалюта.Значение КАК Валюта, 
	|	РеквизитPOSITION.ХранилищеЗначения КАК POSITION
	|ИЗ
	|	ВТ_Отбор КАК ВТ_Отбор
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитДокумент1С
	|		ПО ВТ_Отбор.Документ = РеквизитДокумент1С.Ссылка
	|			И (РеквизитДокумент1С.Реквизит = ""Документ1С"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитPOSITION
	|		ПО ВТ_Отбор.Документ = РеквизитPOSITION.Ссылка
	|			И (РеквизитPOSITION.Реквизит = ""POSITION"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитВалюта
	|		ПО ВТ_Отбор.Документ = РеквизитВалюта.Ссылка
	|			И (РеквизитВалюта.Реквизит = ""Валюта"")";
	
Запрос.УстановитьПараметр("ТаблицаВыбранныхЗаписей", ТаблицаВыбранныхЗаписей);     	
Выборка = Запрос.Выполнить().Выбрать();

КоличествоСозданныхДокументов = 0;

Пока Выборка.Следующий() Цикл
	
	Источник = Выборка.Источник;
	
	Если ЗначениеЗаполнено(Выборка.Документ1С) Тогда
		Приемник = Выборка.Документ1С.ПолучитьОбъект();
		ТекстЛогаСобытий = "Перезаписан уже существующий документ для " + Строка(Источник);
		ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Предупреждение", ИмяСобытия);
		МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);	
	Иначе
		Приемник = Документы.УстановкаЦенНоменклатуры.СоздатьДокумент();
	КонецЕсли;

	ИмяДокументаПрименика = "Установка цен номенклатуры 1С";

	ИмяТипЦен = "Закупочные"; 
	МетаданныеТипыЦенНоменклатуры = Метаданные.Справочники.Найти("ТипыЦенНоменклатуры");
	Если МетаданныеТипыЦенНоменклатуры = Неопределено Тогда
		 ТипЦен = Справочники.ВидыЦен.НайтиПоНаименованию(ИмяТипЦен);
	Иначе	
		 ТипЦен = Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию(ИмяТипЦен);	
	КонецЕсли;

	Если ЗначениеЗаполнено(ТипЦен) Тогда
		Приемник.Дата = ТекущаяДата();
		ЦенаВключаетНДС = Ложь;
		МетаданныеТипЦен = Приемник.Метаданные().Реквизиты.Найти("ТипЦен");
		Если НЕ МетаданныеТипЦен = Неопределено Тогда
			Приемник.ТипЦен = ТипЦен;
			МетаданныеЦенаВключаетНДС = ТипЦен.Метаданные().Реквизиты.Найти("ЦенаВключаетНДС");
			Если НЕ МетаданныеЦенаВключаетНДС = Неопределено Тогда
				ЦенаВключаетНДС = ТипЦен.ЦенаВключаетНДС;
			КонецЕсли; 		
		КонецЕсли;
		
		МетаданныеТипЦенТабличнаяЧасть = Приемник.Метаданные().ТабличныеЧасти.Найти("ТипыЦен");
		Если НЕ МетаданныеТипЦенТабличнаяЧасть = Неопределено Тогда
			Приемник.ТипыЦен.Очистить();
			
			НовСтр = Приемник.ТипыЦен.Добавить();
			НовСтр.ТипЦен = ТипЦен;
		КонецЕсли;
		
		МетаданныеВидыЦеныТабличнаяЧасть = Приемник.Метаданные().ТабличныеЧасти.Найти("ВидыЦен");
		Если НЕ МетаданныеВидыЦеныТабличнаяЧасть = Неопределено Тогда
			Приемник.ВидыЦен.Очистить();
			
			НовСтр = Приемник.ВидыЦен.Добавить();
			НовСтр.ВидЦены = ТипЦен;
		КонецЕсли;

		Приемник.Товары.Очистить();
		
		СтруктураТаблицы = Новый Структура;
		СтруктураТаблицы.Вставить("Валюта"         , Ложь);
		СтруктураТаблицы.Вставить("ВидЦены"         , Ложь);
		СтруктураТаблицы.Вставить("ТипЦен"          , Ложь);
		СтруктураТаблицы.Вставить("ЕдиницаИзмерения", Ложь);
		Для каждого ЭлементСтруктуры Из СтруктураТаблицы Цикл
			РеквизитТаблицы = Приемник.Метаданные().ТабличныеЧасти.Товары.Реквизиты.Найти(ЭлементСтруктуры.Ключ);
			Если НЕ РеквизитТаблицы = Неопределено Тогда
				СтруктураТаблицы[ЭлементСтруктуры.Ключ] = Истина;
			КонецЕсли;
		КонецЦикла;
	
		ЗначениеИзХранилища = Выборка.POSITION.Получить();	
		
		Если ЗначениеЗаполнено(ЗначениеИзХранилища) Тогда      					
			ТЧ_POSITION = ЗначениеИзХранилища;	
		КонецЕсли;
	
		ЗаписатьДокумент = Истина;
		Для каждого Стр Из ТЧ_POSITION Цикл
			Если ЗначениеЗаполнено(Стр.Номенклатура) Тогда
				НовСтр = Приемник.Товары.Добавить();
				НовСтр.Номенклатура = Стр.Номенклатура;
				Если ЦенаВключаетНДС Тогда
					НовСтр.Цена = Стр.PRICEWITHVAT;
				Иначе	
					НовСтр.Цена = Стр.UNITPRICE;
				КонецЕсли;
				
				Для каждого ЭлементСтруктуры Из СтруктураТаблицы Цикл
					Если ЭлементСтруктуры.Значение = Истина Тогда
						ЗначениеСтроки = Неопределено;
						Если ЭлементСтруктуры.Ключ = "ТипЦен" Тогда
							ЗначениеСтроки = ТипЦен;
							
						ИначеЕсли ЭлементСтруктуры.Ключ = "ЕдиницаИзмерения" Тогда	
							ЗначениеСтроки = НовСтр.Номенклатура.ЕдиницаХраненияОстатков;
							
						ИначеЕсли ЭлементСтруктуры.Ключ = "ВидЦены" Тогда	
							ЗначениеСтроки = ТипЦен;

						ИначеЕсли ЭлементСтруктуры.Ключ = "Валюта" Тогда	
							ЗначениеСтроки = Выборка.Валюта;

						КонецЕсли;
						НовСтр[ЭлементСтруктуры.Ключ] = ЗначениеСтроки;
					КонецЕсли;			
				КонецЦикла;
				
			Иначе
				ТекстЛогаСобытий = "Номенклатура не заполнена. " + Стр.PRODUCTNAME + " - " + Стр.PRODUCT
				+ ". " + ИмяДокументаПрименика + " по документу " + Строка(Источник) + " не создана."; 
				
				ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Ошибка", ИмяСобытия);
				МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
				
				ЗаписатьДокумент = Ложь;
			КонецЕсли;		
		КонецЦикла;
		
		Если ЗаписатьДокумент = Истина Тогда
			Попытка
				
				НачатьТранзакцию();
				
					Приемник.Записать(РежимЗаписиДокумента.Проведение);
					Идентификатор = Приемник.Ссылка.УникальныйИдентификатор();
					
					Если ЗначениеЗаполнено(Приемник.Ссылка) Тогда
						
						ИсточникОбъект = Источник.ПолучитьОбъект();
						
						НоваяСтрока = ИсточникОбъект.ДополнительныеРеквизиты.Найти("Документ1С", "Реквизит");
						Если НоваяСтрока = Неопределено Тогда
							НоваяСтрока = ИсточникОбъект.ДополнительныеРеквизиты.Добавить();
						КонецЕсли;	
						
						НоваяСтрока.Реквизит = "Документ1С";
						НоваяСтрока.Значение = Приемник.Ссылка;
						ИсточникОбъект.Записать();
						
					КонецЕсли;
					
					ВидДокументаПриемник = "УстановкаЦенНоменклатуры_Входящий";
					
					СтруктураРегистраDR_События = Новый Структура;
					СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, Выборка.ИдентификаторЦепочки);
					СтруктураРегистраDR_События.Вставить("Документ"					, Приемник.Ссылка);
					СтруктураРегистраDR_События.Вставить("ВидДокумента"				, ВидДокументаПриемник);
					СтруктураРегистраDR_События.Вставить("Идентификатор"			, Идентификатор);
					СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, Выборка.Идентификатор);
					СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
					
					НЗ_DRСобытия = РегистрыСведений.DR_События.СоздатьНаборЗаписей();
					НЗ_DRСобытия.Отбор.ИдентификаторЦепочки.Установить(СтруктураРегистраDR_События.ИдентификаторЦепочки);
					НЗ_DRСобытия.Отбор.Документ.Установить(СтруктураРегистраDR_События.Документ);
					НЗ_DRСобытия.Отбор.ВидДокумента.Установить(СтруктураРегистраDR_События.ВидДокумента);
					НЗ_DRСобытия.Отбор.Идентификатор.Установить(СтруктураРегистраDR_События.Идентификатор);
					НЗ_DRСобытия.Прочитать();
					
					Если НЗ_DRСобытия.Количество() = 0 Тогда
						НоваяЗапись = НЗ_DRСобытия.Добавить();
					Иначе
						НоваяЗапись = НЗ_DRСобытия[0];
					КонецЕсли;
					
					Для Каждого Элемент Из СтруктураРегистраDR_События Цикл			
						НоваяЗапись[Элемент.Ключ] = Элемент.Значение; 	
					КонецЦикла;
					
					НЗ_DRСобытия.Записать();
					
				ЗафиксироватьТранзакцию();
				
				КоличествоСозданныхДокументов = КоличествоСозданныхДокументов + 1;
				
			Исключение
				ОтменитьТранзакцию();
				Приемник.Записать(РежимЗаписиДокумента.Запись);
				ТекстЛогаСобытий = ИмяДокументаПрименика + " по документу " + Строка(Источник) + " не создана!!! " + СокрЛП(ОписаниеОшибки()); 
				ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Ошибка", ИмяСобытия);
				МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
			КонецПопытки;
			   	
		КонецЕсли;	
	Иначе
		ТекстЛогаСобытий = "Не найден тип/вид цен - " + ИмяТипЦен + ", " + ИмяДокументаПрименика + " по документу " + Строка(Источник) + " не создана."; 
		ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Ошибка", ИмяСобытия);
		МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
		
	КонецЕсли;
	
КонецЦикла;</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">5</lastId>
			<item>
				<value xsi:type="xs:string">Неструкт. докум.</value>
				<id xsi:type="xs:decimal">0</id>
			</item>
			<item>
				<value xsi:type="xs:string">Прайс-лист</value>
				<presentation>СписокPricatВходящиеПостащикПокупатель</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">1</id>
			</item>
			<item>
				<value xsi:type="xs:string">Поставщик</value>
				<id xsi:type="xs:decimal">2</id>
			</item>
			<item>
				<value xsi:type="xs:string">Покупатель</value>
				<id xsi:type="xs:decimal">3</id>
			</item>
			<item>
				<value xsi:type="xs:string">Синоним</value>
				<presentation>Создать документ установки цен</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">4</id>
			</item>
			<item>
				<value xsi:type="xs:string">ИмяКнопки</value>
				<presentation>СоздатьУстановкаЦенНоменклатуры</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">5</id>
			</item>
		</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">1</lastId>
			<item>
				<value xsi:type="xs:string"/>
				<presentation>ТекстЗапроса</presentation>
				<id xsi:type="xs:decimal">0</id>
			</item>
		</Value>
		<Value xsi:type="xs:string">СоздатьУстановкаЦенНоменклатуры</Value>
	</row>
</ValueTree>