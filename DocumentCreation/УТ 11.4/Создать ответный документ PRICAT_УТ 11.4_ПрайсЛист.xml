<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Формула</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Регламент</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ИмяКнопки</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Создать ответный докумет Pricat</Value>
		<Value xsi:type="xs:string">ИмяСобытия = "Создание документов по кнопке &lt;&lt;&lt; Создать ответный документ PRICAT &gt;&gt;&gt;";
		
КвалификаторСтрок = Новый КвалификаторыСтроки(36);
		
ТаблицаВыбранныхЗаписей = Новый ТаблицаЗначений;
ТаблицаВыбранныхЗаписей.Колонки.Добавить("Документ", Новый ОписаниеТипов("ДокументСсылка.DR_Документ"));
ТаблицаВыбранныхЗаписей.Колонки.Добавить("ИдентификаторЦепочки", Новый ОписаниеТипов("Строка",,,,КвалификаторСтрок));
ТаблицаВыбранныхЗаписей.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка",,,,КвалификаторСтрок));
		
Для Каждого Элемент Из ВыбранныеСтроки Цикл
	Элемент.Вставить("Идентификатор", Элемент.Документ.ИдентификаторДокумента);
	НоваяСтрока = ТаблицаВыбранныхЗаписей.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Элемент);
КонецЦикла;
		
Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
	|	ВыбранныеЗаписи.Документ КАК Документ,
	|	ВыбранныеЗаписи.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
	|	ВыбранныеЗаписи.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ТЗ_ВыбранныеЗаписи
	|ИЗ
	|	&amp;ТаблицаВыбранныхЗаписей КАК ВыбранныеЗаписи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЗ_ВыбранныеЗаписи.Документ КАК Документ,
	|	ТЗ_ВыбранныеЗаписи.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
	|	ТЗ_ВыбранныеЗаписи.Идентификатор КАК ИдентификаторОснования,
	|	DR_События.Документ КАК ОтветныйДокумент
	|ИЗ
	|	ТЗ_ВыбранныеЗаписи КАК ТЗ_ВыбранныеЗаписи
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_События
	|		ПО ТЗ_ВыбранныеЗаписи.ИдентификаторЦепочки = DR_События.ИдентификаторЦепочки
	|			И ТЗ_ВыбранныеЗаписи.Идентификатор = DR_События.ИдентификаторОснования
	|			И (DR_События.ВидДокумента = ""PRICAT_Исходящий"")";
		
Запрос.УстановитьПараметр("ТаблицаВыбранныхЗаписей", ТаблицаВыбранныхЗаписей);			   
Выборка = Запрос.Выполнить().Выбрать();
		
Пока Выборка.Следующий() Цикл
		
	Если ЗначениеЗаполнено(Выборка.ОтветныйДокумент) Тогда
		
		Приемник = Выборка.ОтветныйДокумент.ПолучитьОбъект();
		
		ЗаполнитьЗначенияСвойств(Приемник, Выборка.Документ, "ДанныеДокумента, ДанныеФайла, ДанныеЭЦП, Статус");
		Приемник.ДополнительныеРеквизиты.Загрузить(Выборка.Документ.ДополнительныеРеквизиты.Выгрузить());
		
		ТекстЛогаСобытий = "Перезаписан уже существующий DR документ №" + Приемник.Номер + " от " + Приемник.Дата;
		ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Предупреждение", ИмяСобытия);
		МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
	
	Иначе
	
		Приемник = ДокуметОснование.Скопировать();
		Идентификатор = Новый УникальныйИдентификатор();
		
		Приемник.ИдентификаторДокумента = Строка(Идентификатор);
		Приемник.ВидДокумента = "PRICAT_Исходящий";
		Приемник.Номер = "";
		Приемник.Дата = ТекущаяДата();
	
	КонецЕсли;
			
	НоваяСтрокаACTION = Приемник.ДополнительныеРеквизиты.Найти("ACTION", "Реквизит");
	Если НоваяСтрокаACTION = Неопределено Тогда
		НоваяСтрокаACTION = Приемник.ДополнительныеРеквизиты.Добавить();
	КонецЕсли;	
			
	НоваяСтрокаACTION.Реквизит = "ACTION";
	НоваяСтрокаACTION.Значение = "51";
			
	СтрокаPOSITION = Приемник.ДополнительныеРеквизиты.Найти("POSITION", "Реквизит");
	Если СтрокаPOSITION = Неопределено Тогда
		СтрокаPOSITION = Приемник.ДополнительныеРеквизиты.Добавить();
	КонецЕсли;
			
	ЗначениеИзХранилища = СтрокаPOSITION.ХранилищеЗначения.Получить();	
			
	Если ЗначениеЗаполнено(ЗначениеИзХранилища) Тогда      					
				
		ТЧ_POSITION = ЗначениеИзХранилища;	
				
		Для каждого СтрPOSITION Из ТЧ_POSITION Цикл
					
			СтрPOSITION.ACTION = "27";
					
		КонецЦикла;
				
		СтрокаPOSITION.ХранилищеЗначения = Новый ХранилищеЗначения(ТЧ_POSITION);
				
	КонецЕсли;
			
	Попытка
					
		НачатьТранзакцию();
		
		    Если Приемник.ЭтоНовый() Тогда
				DR_ДокументСсылка = Документы.DR_Документ.ПолучитьСсылку(Идентификатор);
				Приемник.УстановитьСсылкуНового(DR_ДокументСсылка);
			КонецЕсли;	
			
			Приемник.Записать(); 
					
			ВидДокументаПриемник = "PRICAT_Исходящий";
					
			СтруктураРегистраDR_События = Новый Структура;
			СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, Выборка.ИдентификаторЦепочки);
			СтруктураРегистраDR_События.Вставить("Документ"					, Приемник.Ссылка);
			СтруктураРегистраDR_События.Вставить("ВидДокумента"				, ВидДокументаПриемник);
			СтруктураРегистраDR_События.Вставить("Идентификатор"			, Приемник.ИдентификаторДокумента);
			СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, Выборка.ИдентификаторОснования);
			СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
					
			НЗ_DRСобытия = РегистрыСведений.DR_События.СоздатьНаборЗаписей();
			НЗ_DRСобытия.Отбор.ИдентификаторЦепочки.Установить(СтруктураРегистраDR_События.ИдентификаторЦепочки);
			НЗ_DRСобытия.Отбор.Документ.Установить(СтруктураРегистраDR_События.Документ);
			НЗ_DRСобытия.Отбор.ВидДокумента.Установить(СтруктураРегистраDR_События.ВидДокумента);
			НЗ_DRСобытия.Отбор.Идентификатор.Установить(СтруктураРегистраDR_События.Идентификатор);
			НЗ_DRСобытия.Прочитать();
					
			Если НЗ_DRСобытия.Количество() = 0 Тогда
				НоваяЗапись = НЗ_DRСобытия.Добавить();
			Иначе
				НоваяЗапись = НЗ_DRСобытия[0];
			КонецЕсли;
					
			Для Каждого Элемент Из СтруктураРегистраDR_События Цикл			
				НоваяЗапись[Элемент.Ключ] = Элемент.Значение; 	
			КонецЦикла;
					
			НЗ_DRСобытия.Записать();
					
		ЗафиксироватьТранзакцию();
					
	Исключение
		ОтменитьТранзакцию();
				
		ТекстЛогаСобытий = "Ошибка при создании ответного документа, на основании " + Строка(Выборка.Документ) + Символы.ПС + ОписаниеОшибки();				
		ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Ошибка", ИмяСобытия);
		МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
				
	КонецПопытки;
			
КонецЦикла;	
</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">5</lastId>
			<item>
				<value xsi:type="xs:string">Неструкт. докум.</value>
				<id xsi:type="xs:decimal">0</id>
			</item>
			<item>
				<value xsi:type="xs:string">Прайс-лист</value>
				<id xsi:type="xs:decimal">1</id>
			</item>
			<item>
				<value xsi:type="xs:string">Поставщик</value>
				<id xsi:type="xs:decimal">2</id>
			</item>
			<item>
				<value xsi:type="xs:string">Покупатель</value>
				<id xsi:type="xs:decimal">3</id>
			</item>
			<item>
				<value xsi:type="xs:string">Синоним</value>
				<presentation>Создать ответный докумет Pricat</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">4</id>
			</item>
			<item>
				<value xsi:type="xs:string">ИмяКнопки</value>
				<presentation>СоздатьОтветныйДокументPricat</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">5</id>
			</item>
		</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">1</lastId>
			<item>
				<value xsi:type="xs:string"/>
				<presentation>ТекстЗапроса</presentation>
				<id xsi:type="xs:decimal">0</id>
			</item>
		</Value>
		<Value xsi:type="xs:string">СоздатьОтветныйДокументPricat</Value>
	</row>
</ValueTree>