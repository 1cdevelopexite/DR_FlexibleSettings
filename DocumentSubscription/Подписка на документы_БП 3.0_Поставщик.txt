ТипДокументаDR_Документ				= "ДокументСсылка.DR_Документ";
ТипДокументаЗаказа					= "ДокументСсылка.СчетНаОплатуПокупателю";
ТипДокументаРеализации				= "ДокументСсылка.РеализацияТоваровУслуг"; 
ТипДокументаКорректировкиРеализации	= "ДокументСсылка.КорректировкаРеализации";
ТипДокументаСчетФактуры 			= "ДокументСсылка.СчетФактураВыданный";
ДокументВозвратТоваровОтКлиента     = "ДокументСсылка.ВозвратТоваровОтПокупателя";

ИмяОрганизации  	= "Организация";
ИмяКонтрагента  	= "Контрагент";
ИмяТочкиДоставки    = "ДоговорКонтрагента"; //Возможно значение Контрагент.

ДатаДокумента1С  = "Дата";
НомерДокумента1С = "Номер";
	
// Счет на оплату покупателю.
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаЗаказа) Тогда
	
	//РазделятьЗаказы = ЭКОМ_ОбщегоНазначения.Настройка_Параметр_Прочитать("ЭКОМ_РазделятьЗаказы", Ложь);   
	
	ВыборкаУчастниковВЭДО = ЭКОМ_ОбщегоНазначения.КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента]);
	
	Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0 Тогда
		
		//ИЩЕМ запись в регистре DR_События 
		ЗапросДокументов = Новый Запрос;
		ЗапросДокументов.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	DR_События.Документ КАК Документ
		|ИЗ
		|	РегистрСведений.DR_События КАК DR_События
		|ГДЕ
		|	DR_События.Документ = &Документ
		|	И DR_События.ВидДокумента = &ВидДокумента";
		
		ЗапросДокументов.УстановитьПараметр("Документ", Источник.Ссылка);
		ЗапросДокументов.УстановитьПараметр("ВидДокумента", "Заказ_Входящий");
		
		РезультатИдентификаторЦепочки = ЗапросДокументов.Выполнить();
		
		Если РезультатИдентификаторЦепочки.Пустой() Тогда
			
			ИдентификаторЦепочки = Строка("TMP_" + Источник.Ссылка.УникальныйИдентификатор());
				
			//Регистр DR_События
			СтруктураРегистраDR_События = Новый Структура;
			СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"			, ИдентификаторЦепочки);
			СтруктураРегистраDR_События.Вставить("Документ"						, Источник.Ссылка);
			СтруктураРегистраDR_События.Вставить("ВидДокумента"					, "Заказ_Входящий");
			СтруктураРегистраDR_События.Вставить("Идентификатор"				, Строка(Источник.Ссылка.УникальныйИдентификатор()));
			СтруктураРегистраDR_События.Вставить("АктуализироватьИдентификатор"	, Истина);
			СтруктураРегистраDR_События.Вставить("ДатаЗаписи"					, ТекущаяДата());
			
			ЭКОМ_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);
			
			//Регистр DR_ЦепочкиДокументов
			СтруктураРегистраDR_ЦепочкиДокументов = Новый Структура;
			СтруктураРегистраDR_ЦепочкиДокументов.Вставить("ДатаЗаказа"				, Источник[ДатаДокумента1С]);
			СтруктураРегистраDR_ЦепочкиДокументов.Вставить("ДатаПоставки"           , Источник[ДатаДокумента1С]); //У документа нет реквизита ДатаПоставки.
			СтруктураРегистраDR_ЦепочкиДокументов.Вставить("ИдентификаторЦепочки"   , ИдентификаторЦепочки);
			СтруктураРегистраDR_ЦепочкиДокументов.Вставить("Контрагент"             , Источник[ИмяКонтрагента]);
			СтруктураРегистраDR_ЦепочкиДокументов.Вставить("НомерЗаказа"            , Источник[НомерДокумента1С]);
			СтруктураРегистраDR_ЦепочкиДокументов.Вставить("Организация"            , Источник[ИмяОрганизации]);
			СтруктураРегистраDR_ЦепочкиДокументов.Вставить("ТочкаДоставки"          , Источник[ИмяТочкиДоставки]);
			
			ЭКОМ_ОбщегоНазначения.Записать_DR_ЦепочкиДокументов(СтруктураРегистраDR_ЦепочкиДокументов);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецЕсли;

// Реализация.
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаРеализации) Тогда
	
	ВыборкаУчастниковВЭДО = ЭКОМ_ОбщегоНазначения.КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента]);    //
	
	Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0 Тогда
		
		//ИЩЕМ запись в регистре DR_События 
		ЗапросДокументов = Новый Запрос;
		ЗапросДокументов.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	DR_События.Документ КАК Документ
		|ИЗ
		|	РегистрСведений.DR_События КАК DR_События
		|ГДЕ
		|	DR_События.Документ = &Документ
		|	И DR_События.ВидДокумента = &ВидДокумента";
		
		ЗапросДокументов.УстановитьПараметр("Документ", Источник.Ссылка);
		ЗапросДокументов.УстановитьПараметр("ВидДокумента", "Накладная_Исходящая");
		
		РезультатИдентификаторЦепочки = ЗапросДокументов.Выполнить();
		
		Если РезультатИдентификаторЦепочки.Пустой() Тогда
			
			//ИЩЕМ Документ основания
			ЗапросДокументОснование = Новый Запрос;
			ЗапросДокументОснование.Текст = "ВЫБРАТЬ
			                                |	РеализацияТоваровУслуг.СчетНаОплатуПокупателю КАК ДокументОснование
			                                |ПОМЕСТИТЬ ВТ_ДокументОснование
			                                |ИЗ
			                                |	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
			                                |ГДЕ
			                                |	РеализацияТоваровУслуг.Ссылка = &Источник
			                                |;
			                                |
			                                |////////////////////////////////////////////////////////////////////////////////
			                                |ВЫБРАТЬ ПЕРВЫЕ 1
			                                |	ВТ_ДокументОснование.ДокументОснование КАК ДокументОснование,
			                                |	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки
			                                |ИЗ
			                                |	ВТ_ДокументОснование КАК ВТ_ДокументОснование
			                                |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_События
			                                |		ПО ВТ_ДокументОснование.ДокументОснование = DR_События.Документ";
			                                
			ЗапросДокументОснование.УстановитьПараметр("Источник", Источник.Ссылка);
			
			РезультатДокументОснование = ЗапросДокументОснование.Выполнить();
			
			Если НЕ РезультатДокументОснование.Пустой() Тогда //НАЙДЕН Документ основания
			 
				ВыборкаДокументОснование = РезультатДокументОснование.Выбрать();
				
				ВыборкаДокументОснование.Следующий();
				
				СтруктураРегистраDR_События = Новый Структура;
				СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, ВыборкаДокументОснование.ИдентификаторЦепочки);
				СтруктураРегистраDR_События.Вставить("Документ"					, Источник.Ссылка);
				СтруктураРегистраDR_События.Вставить("ВидДокумента"				, "Накладная_Исходящая");
				СтруктураРегистраDR_События.Вставить("Идентификатор"			, Строка(Источник.Ссылка.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, Строка(ВыборкаДокументОснование.ДокументОснование.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
				
				ЭКОМ_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);
				
			Иначе // ЮЗД без EDI
				
				ИдентификаторЦепочки = Строка("TMP_" + Источник.Ссылка.УникальныйИдентификатор());
				
				//Регистр DR_События
				СтруктураРегистраDR_События = Новый Структура;
				СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"			, ИдентификаторЦепочки);
				СтруктураРегистраDR_События.Вставить("Документ"						, Источник.Ссылка);
				СтруктураРегистраDR_События.Вставить("ВидДокумента"					, "Накладная_Исходящая");
				СтруктураРегистраDR_События.Вставить("Идентификатор"				, Строка(Источник.Ссылка.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("АктуализироватьИдентификатор"	, Истина);
				СтруктураРегистраDR_События.Вставить("ДатаЗаписи"					, ТекущаяДата());
				
				ЭКОМ_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);
				
				//Регистр DR_ЦепочкиДокументов
				СтруктураРегистраDR_ЦепочкиДокументов = Новый Структура;
				СтруктураРегистраDR_ЦепочкиДокументов.Вставить("ДатаЗаказа"				, Источник[ДатаДокумента1С]);
				СтруктураРегистраDR_ЦепочкиДокументов.Вставить("ДатаПоставки"           , Источник[ДатаДокумента1С]); //У документа нет реквизита ДатаПоставки.
				СтруктураРегистраDR_ЦепочкиДокументов.Вставить("ИдентификаторЦепочки"   , ИдентификаторЦепочки);
				СтруктураРегистраDR_ЦепочкиДокументов.Вставить("Контрагент"             , Источник[ИмяКонтрагента]);
				СтруктураРегистраDR_ЦепочкиДокументов.Вставить("НомерЗаказа"            , Источник[НомерДокумента1С]);
				СтруктураРегистраDR_ЦепочкиДокументов.Вставить("Организация"            , Источник[ИмяОрганизации]);
				СтруктураРегистраDR_ЦепочкиДокументов.Вставить("ТочкаДоставки"          , Источник[ИмяТочкиДоставки]);
				
				ЭКОМ_ОбщегоНазначения.Записать_DR_ЦепочкиДокументов(СтруктураРегистраDR_ЦепочкиДокументов);
			
			КонецЕсли;
		
		КонецЕсли;
			
	КонецЕсли;
	
КонецЕсли; // тип источника - реализация

// Корректировка реализации.
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаКорректировкиРеализации) Тогда
	
	ВыборкаУчастниковВЭДО = ЭКОМ_ОбщегоНазначения.КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента]);
	
	Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0 Тогда
		
		//ИЩЕМ запись в регистре DR_События 
		ЗапросДокументов = Новый Запрос;
		ЗапросДокументов.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	DR_События.Документ КАК Документ
		|ИЗ
		|	РегистрСведений.DR_События КАК DR_События
		|ГДЕ
		|	DR_События.Документ = &Документ
		|	И DR_События.ВидДокумента = &ВидДокумента";
		
		ЗапросДокументов.УстановитьПараметр("Документ", Источник.Ссылка);
		ЗапросДокументов.УстановитьПараметр("ВидДокумента", "КорректировочнаяНакладная_Исходящая");
		
		РезультатИдентификаторЦепочки = ЗапросДокументов.Выполнить();
		
		Если РезультатИдентификаторЦепочки.Пустой() Тогда
			
			//ИЩЕМ Документ основания
			ЗапросДокументОснование = Новый Запрос;
			ЗапросДокументОснование.Текст = "ВЫБРАТЬ
			                                |	ВЫБОР
			                                |		КОГДА КорректировкаРеализации.ИсправляемыйДокументРеализации ССЫЛКА Документ.РеализацияТоваровУслуг
			                                |			ТОГДА ВЫРАЗИТЬ(КорректировкаРеализации.ИсправляемыйДокументРеализации КАК Документ.РеализацияТоваровУслуг)
			                                |		КОГДА КорректировкаРеализации.ИсправляемыйДокументРеализации ССЫЛКА Документ.КорректировкаРеализации
			                                |			ТОГДА ВЫРАЗИТЬ(КорректировкаРеализации.ИсправляемыйДокументРеализации КАК Документ.КорректировкаРеализации)
			                                |		КОГДА КорректировкаРеализации.ИсправляемыйДокументРеализации ССЫЛКА Документ.ВозвратТоваровОтПокупателя
			                                |			ТОГДА ВЫРАЗИТЬ(КорректировкаРеализации.ИсправляемыйДокументРеализации КАК Документ.ВозвратТоваровОтПокупателя)
			                                |	КОНЕЦ КАК ДокументОснование
			                                |ПОМЕСТИТЬ ВТ_ДокументОснованиеКорр
			                                |ИЗ
			                                |	Документ.КорректировкаРеализации КАК КорректировкаРеализации
			                                |ГДЕ
			                                |	КорректировкаРеализации.Ссылка = &Документ
			                                |;
			                                |
			                                |////////////////////////////////////////////////////////////////////////////////
			                                |ВЫБРАТЬ ПЕРВЫЕ 1
			                                |	ВТ_ДокументОснованиеКорр.ДокументОснование КАК ДокументОснование,
			                                |	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки
			                                |ИЗ
			                                |	ВТ_ДокументОснованиеКорр КАК ВТ_ДокументОснованиеКорр
			                                |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_События
			                                |		ПО ВТ_ДокументОснованиеКорр.ДокументОснование = DR_События.Документ";
			                                
			ЗапросДокументОснование.УстановитьПараметр("Документ",	Источник.Ссылка);
			
			РезультатДокументОснование = ЗапросДокументОснование.Выполнить();
			
			Если НЕ РезультатДокументОснование.Пустой() Тогда //НАЙДЕН Документ основания
				
				ВыборкаДокументОснование = РезультатДокументОснование.Выбрать();
				
				ВыборкаДокументОснование.Следующий();
				
				СтруктураРегистраDR_События = Новый Структура;
				СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, ВыборкаДокументОснование.ИдентификаторЦепочки);
				СтруктураРегистраDR_События.Вставить("Документ"					, Источник.Ссылка);
				СтруктураРегистраDR_События.Вставить("ВидДокумента"				, "КорректировочнаяНакладная_Исходящая");
				СтруктураРегистраDR_События.Вставить("Идентификатор"			, Строка(Источник.Ссылка.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, Строка(ВыборкаДокументОснование.ДокументОснование.УникальныйИдентификатор()));				
				СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
				
				ЭКОМ_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);					
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецЕсли;

// СчетФактураВыданный
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаСчетФактуры) Тогда
	
	ВыборкаУчастниковВЭДО = ЭКОМ_ОбщегоНазначения.КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента]);
	
	Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0 Тогда
		
		//ИЩЕМ запись в регистре DR_События 
		ЗапросДокументов = Новый Запрос;
		ЗапросДокументов.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	DR_События.Документ КАК Документ
		|ИЗ
		|	РегистрСведений.DR_События КАК DR_События
		|ГДЕ
		|	DR_События.Документ = &Документ
		|	И DR_События.ВидДокумента = &ВидДокумента";
		
		ЗапросДокументов.УстановитьПараметр("Документ", Источник.Ссылка);
		ЗапросДокументов.УстановитьПараметр("ВидДокумента", "СчетФактура_Исходящий");
		
		РезультатИдентификаторЦепочки = ЗапросДокументов.Выполнить();
		
		Если РезультатИдентификаторЦепочки.Пустой() Тогда
			
			//ИЩЕМ Документ основания
			ЗапросДокументОснованиеСчФ = Новый Запрос;
			ЗапросДокументОснованиеСчФ.Текст = "ВЫБРАТЬ
			                                   |	ВЫБОР
			                                   |		КОГДА СчетФактураВыданный.ДокументОснование ССЫЛКА Документ.РеализацияТоваровУслуг
			                                   |			ТОГДА ВЫРАЗИТЬ(СчетФактураВыданный.ДокументОснование КАК Документ.РеализацияТоваровУслуг)
			                                   |		КОГДА СчетФактураВыданный.ДокументОснование ССЫЛКА Документ.КорректировкаРеализации
			                                   |			ТОГДА ВЫРАЗИТЬ(СчетФактураВыданный.ДокументОснование КАК Документ.КорректировкаРеализации)
			                                   |		КОГДА СчетФактураВыданный.ДокументОснование ССЫЛКА Документ.ВозвратТоваровОтПокупателя
			                                   |			ТОГДА ВЫРАЗИТЬ(СчетФактураВыданный.ДокументОснование КАК Документ.ВозвратТоваровОтПокупателя)
			                                   |	КОНЕЦ КАК ДокументОснование
			                                   |ПОМЕСТИТЬ ВТ_ДокументОснованиеСЧФ
			                                   |ИЗ
			                                   |	Документ.СчетФактураВыданный КАК СчетФактураВыданный
			                                   |ГДЕ
			                                   |	СчетФактураВыданный.Ссылка = &Документ
			                                   |;
			                                   |
			                                   |////////////////////////////////////////////////////////////////////////////////
			                                   |ВЫБРАТЬ ПЕРВЫЕ 1
			                                   |	ВТ_ДокументОснованиеСЧФ.ДокументОснование КАК ДокументОснование,
			                                   |	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки
			                                   |ИЗ
			                                   |	ВТ_ДокументОснованиеСЧФ КАК ВТ_ДокументОснованиеСЧФ
			                                   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_События
			                                   |		ПО ВТ_ДокументОснованиеСЧФ.ДокументОснование = DR_События.Документ";		
			
			ЗапросДокументОснованиеСчФ.УстановитьПараметр("Документ",	Источник.Ссылка);
			
			РезультатДокументОснование = ЗапросДокументОснованиеСчФ.Выполнить();
			
			Если НЕ РезультатДокументОснование.Пустой() Тогда //НАЙДЕН Документ основания
				
				ВыборкаДокументОснование = РезультатДокументОснование.Выбрать();
				
				ВыборкаДокументОснование.Следующий();
				
				СтруктураРегистраDR_События = Новый Структура;
				СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, ВыборкаДокументОснование.ИдентификаторЦепочки);
				СтруктураРегистраDR_События.Вставить("Документ"					, Источник.Ссылка);
				СтруктураРегистраDR_События.Вставить("ВидДокумента"				, "СчетФактура_Исходящий");
				СтруктураРегистраDR_События.Вставить("Идентификатор"			, Строка(Источник.Ссылка.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, Строка(ВыборкаДокументОснование.ДокументОснование.УникальныйИдентификатор()));				
				СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
				
				//Для актуализации идентификатора по счф без EDI, ищем событие по order
				НаборЗаписейORDER = РегистрыСведений.DR_События.СоздатьНаборЗаписей();
				НаборЗаписейORDER.Отбор.ИдентификаторЦепочки.Установить(ВыборкаДокументОснование.ИдентификаторЦепочки);
				НаборЗаписейORDER.Отбор.ВидДокумента.Установить("ORDER_Входящий"); 
				НаборЗаписейORDER.Прочитать();
				
				//проверка на наличие загруженного order и временный идентификатор
				Если НаборЗаписейORDER.Количество() = 0 И (Найти(ВыборкаДокументОснование.ИдентификаторЦепочки, "TMP_") > 0) Тогда	
					 СтруктураРегистраDR_События.Вставить("АктуализироватьИдентификатор"	, Истина);
				КонецЕсли;
				
				ЭКОМ_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецЕсли;

// ВозвратТоваровОтПокупателя
Если ТипЗнч(Источник.Ссылка) = Тип(ДокументВозвратТоваровОтКлиента) Тогда
	
	ВыборкаУчастниковВЭДО = ЭКОМ_ОбщегоНазначения.КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента]);
	
	Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0 Тогда
		
		//ИЩЕМ запись в регистре DR_События 
		ЗапросДокументов = Новый Запрос;
		ЗапросДокументов.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	DR_События.Документ КАК Документ
		|ИЗ
		|	РегистрСведений.DR_События КАК DR_События
		|ГДЕ
		|	DR_События.Документ = &Документ
		|	И DR_События.ВидДокумента = &ВидДокумента";
		
		ЗапросДокументов.УстановитьПараметр("Документ", Источник.Ссылка);
		ЗапросДокументов.УстановитьПараметр("ВидДокумента", "ВозвратнаяНакладная_Входящая");
		
		РезультатИдентификаторЦепочки = ЗапросДокументов.Выполнить();
		
		Если РезультатИдентификаторЦепочки.Пустой() Тогда
			
			//ИЩЕМ Документ основание			
			ЗапросДокументОснование = Новый Запрос;
			ЗапросДокументОснование.Текст = "ВЫБРАТЬ
			                                |	ВЫБОР
			                                |		КОГДА ВозвратТоваровОтПокупателя.Сделка ССЫЛКА Документ.РеализацияТоваровУслуг
			                                |			ТОГДА ВЫРАЗИТЬ(ВозвратТоваровОтПокупателя.Сделка КАК Документ.РеализацияТоваровУслуг)
			                                |		ИНАЧЕ ЗНАЧЕНИЕ(Документ.РеализацияТоваровУслуг.ПустаяСсылка)
			                                |	КОНЕЦ КАК ДокументОснование
			                                |ПОМЕСТИТЬ ВТ_ДокументОснование
			                                |ИЗ
			                                |	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
			                                |ГДЕ
			                                |	ВозвратТоваровОтПокупателя.Ссылка = &Документ
			                                |;
			                                |
			                                |////////////////////////////////////////////////////////////////////////////////
			                                |ВЫБРАТЬ ПЕРВЫЕ 1
			                                |	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
			                                |	ВТ_ДокументОснование.ДокументОснование КАК ДокументОснование
			                                |ИЗ
			                                |	ВТ_ДокументОснование КАК ВТ_ДокументОснование
			                                |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_События
			                                |		ПО ВТ_ДокументОснование.ДокументОснование = DR_События.Документ";
											
			ЗапросДокументОснование.УстановитьПараметр("Документ",	Источник.Ссылка);
			
			РезультатДокументОснование = ЗапросДокументОснование.Выполнить();
			
			Если НЕ РезультатДокументОснование.Пустой() Тогда //НАЙДЕН Документ основания
				
				ВыборкаДокументОснование = РезультатДокументОснование.Выбрать();
				
				ВыборкаДокументОснование.Следующий();
				
				СтруктураРегистраDR_События = Новый Структура;
				СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, ВыборкаДокументОснование.ИдентификаторЦепочки);
				СтруктураРегистраDR_События.Вставить("Документ"					, Источник.Ссылка);
				СтруктураРегистраDR_События.Вставить("ВидДокумента"				, "ВозвратнаяНакладная_Входящая");
				СтруктураРегистраDR_События.Вставить("Идентификатор"			, Строка(Источник.Ссылка.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, Строка(ВыборкаДокументОснование.ДокументРеализации.УникальныйИдентификатор()));				
				СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
				
				//проверка на временный идентификатор
				Если Найти(ВыборкаДокументОснование.ИдентификаторЦепочки, "TMP_") > 0 Тогда	
					 СтруктураРегистраDR_События.Вставить("АктуализироватьИдентификатор"	, Истина);
				КонецЕсли;
				
				ЭКОМ_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;

КонецЕсли;	