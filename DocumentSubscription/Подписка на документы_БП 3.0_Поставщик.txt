ТипДокументаЭКОМ_Документы			= "ДокументСсылка.ЭКОМ_Документы";
ТипДокументаЗаказа					= "ДокументСсылка.СчетНаОплатуПокупателю";
ТипДокументаРеализации				= "ДокументСсылка.РеализацияТоваровУслуг"; 
ТипДокументаКорректировкиРеализации	= "ДокументСсылка.КорректировкаРеализации";
ТипДокументаСчетФактуры 			= "ДокументСсылка.СчетФактураВыданный";
ДокументВозвратТоваровОтКлиента     = "ДокументСсылка.ВозвратТоваровОтПокупателя";
ТипОбмена = Перечисления.DR_ТипыОбмена.Поставщик;

ИмяОрганизации           = "Организация";
ИмяКонтрагента           = "Контрагент";
ИмяТочкиДоставки         = "Контрагент";
	
// Заказ клиента.
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаЗаказа) Тогда
	//РазделятьЗаказы = ЭКОМ_ОбщегоНазначения.Настройка_Параметр_Прочитать("ЭКОМ_РазделятьЗаказы", Ложь);   
	
	ВыборкаУчастниковВЭДО = ЭКОМ_ОбщегоНазначения.КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента]);
	Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0 Тогда
		
		//ИЩЕМ запись в регистре DR_События 
		ЗапросДокументов = Новый Запрос;
		ЗапросДокументов.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	DR_События.Документ КАК Документ
		|ИЗ
		|	РегистрСведений.DR_События КАК DR_События
		|ГДЕ
		|	DR_События.Документ = &Документ
		|	И DR_События.ВидДокумента = &ВидДокумента";
		ЗапросДокументов.УстановитьПараметр("Документ", Источник.Ссылка);
		ЗапросДокументов.УстановитьПараметр("ВидДокумента", Перечисления.ЭКОМ_ВидыДокументов.Заказ_Входящий);
		РезультатИдентификаторЦепочки = ЗапросДокументов.Выполнить();
		
		Если РезультатИдентификаторЦепочки.Пустой() Тогда
			//ИЩЕМ Документ основания
			ЗапросДокументОснование = Новый Запрос;
			ЗапросДокументОснование.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
			                                |	СвязанныеДокументы.Ссылка КАК ДокументОснование,
			                                |	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки
			                                |ИЗ
			                                |	Документ.ЭКОМ_Документы.ДокументыСвязанные КАК СвязанныеДокументы
			                                |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_События
			                                |		ПО (СвязанныеДокументы.Ссылка = DR_События.Документ)
			                                |ГДЕ
			                                |	СвязанныеДокументы.ДокументСвязанный = &Источник";
			ЗапросДокументОснование.УстановитьПараметр("Источник", Источник.Ссылка);
			РезультатДокументОснование = ЗапросДокументОснование.Выполнить();
			
			Если НЕ РезультатДокументОснование.Пустой() Тогда //НАЙДЕН Документ основания 
				ВыборкаДокументОснование = РезультатДокументОснование.Выбрать();
				ВыборкаДокументОснование.Следующий();
				
				СтруктураРегистраDR_События = Новый Структура;
				СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, ВыборкаДокументОснование.ИдентификаторЦепочки);
				СтруктураРегистраDR_События.Вставить("Документ"					, Источник.Ссылка);
				СтруктураРегистраDR_События.Вставить("ВидДокумента"				, Перечисления.ЭКОМ_ВидыДокументов.Заказ_Входящий);
				СтруктураРегистраDR_События.Вставить("Идентификатор"			, Строка(Источник.Ссылка.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, Строка(ВыборкаДокументОснование.ДокументОснование.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
				
				ЭКОМ_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли; 		
КонецЕсли;

// Реализация.
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаРеализации) Тогда
	
	ВыборкаУчастниковВЭДО = ЭКОМ_ОбщегоНазначения.КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента]);    //
	
	Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0 Тогда
		
		//ИЩЕМ запись в регистре DR_События 
		ЗапросДокументов = Новый Запрос;
		ЗапросДокументов.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	DR_События.Документ КАК Документ
		|ИЗ
		|	РегистрСведений.DR_События КАК DR_События
		|ГДЕ
		|	DR_События.Документ = &Документ
		|	И DR_События.ВидДокумента = &ВидДокумента";
		ЗапросДокументов.УстановитьПараметр("Документ", Источник.Ссылка);
		ЗапросДокументов.УстановитьПараметр("ВидДокумента", Перечисления.ЭКОМ_ВидыДокументов.Накладная_Исходящая);
		РезультатИдентификаторЦепочки = ЗапросДокументов.Выполнить();
		
		Если РезультатИдентификаторЦепочки.Пустой() Тогда
			//ИЩЕМ Документ основания
			ЗапросДокументОснование = Новый Запрос;
			ЗапросДокументОснование.Текст = "ВЫБРАТЬ
			                                |	РеализацияТоваровУслуг.СчетНаОплатуПокупателю КАК ДокументОснование,
			                                |	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки
			                                |ИЗ
			                                |	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
			                                |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_События
			                                |		ПО (РеализацияТоваровУслуг.СчетНаОплатуПокупателю = DR_События.Документ)
			                                |ГДЕ
			                                |	РеализацияТоваровУслуг.Ссылка = &Источник
			                                |
			                                |ОБЪЕДИНИТЬ ВСЕ
			                                |
			                                |ВЫБРАТЬ
			                                |	ЭКОМ_ДокументыСвязанные.Ссылка,
			                                |	DR_События.ИдентификаторЦепочки
			                                |ИЗ
			                                |	Документ.ЭКОМ_Документы.ДокументыСвязанные КАК ЭКОМ_ДокументыСвязанные
			                                |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_События
			                                |		ПО ЭКОМ_ДокументыСвязанные.Ссылка = DR_События.Документ
			                                |ГДЕ
			                                |	ЭКОМ_ДокументыСвязанные.ДокументСвязанный = &Источник";
			ЗапросДокументОснование.УстановитьПараметр("Источник",				Источник.Ссылка);
			РезультатДокументОснование = ЗапросДокументОснование.Выполнить();
			
			Если НЕ РезультатДокументОснование.Пустой() Тогда //НАЙДЕН Документ основания 
				ВыборкаДокументОснование = РезультатДокументОснование.Выбрать();
				ВыборкаДокументОснование.Следующий();
				
				СтруктураРегистраDR_События = Новый Структура;
				СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, ВыборкаДокументОснование.ИдентификаторЦепочки);
				СтруктураРегистраDR_События.Вставить("Документ"					, Источник.Ссылка);
				СтруктураРегистраDR_События.Вставить("ВидДокумента"				, Перечисления.ЭКОМ_ВидыДокументов.Накладная_Исходящая);
				СтруктураРегистраDR_События.Вставить("Идентификатор"			, Строка(Источник.Ссылка.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, Строка(ВыборкаДокументОснование.ДокументОснование.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
				
				ЭКОМ_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);
			КонецЕсли;
		КонецЕсли;
			
	КонецЕсли;
	
КонецЕсли; // тип источника - реализация

// Корректировка реализации.
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаКорректировкиРеализации) Тогда
	
	ВыборкаУчастниковВЭДО = ЭКОМ_ОбщегоНазначения.КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента]);
	Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0 Тогда
		//ИЩЕМ запись в регистре DR_События 
		ЗапросДокументов = Новый Запрос;
		ЗапросДокументов.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	DR_События.Документ КАК Документ
		|ИЗ
		|	РегистрСведений.DR_События КАК DR_События
		|ГДЕ
		|	DR_События.Документ = &Документ
		|	И DR_События.ВидДокумента = &ВидДокумента";
		ЗапросДокументов.УстановитьПараметр("Документ", Источник.Ссылка);
		ЗапросДокументов.УстановитьПараметр("ВидДокумента", Перечисления.ЭКОМ_ВидыДокументов.КорректировочнаяНакладная_Исходящая);
		РезультатИдентификаторЦепочки = ЗапросДокументов.Выполнить();
		
		Если РезультатИдентификаторЦепочки.Пустой() Тогда
			
			//ИЩЕМ Документ основания
			ЗапросДокументОснование = Новый Запрос;
			ЗапросДокументОснование.Текст = "ВЫБРАТЬ
			                                |	КорректировкаРеализации.ИсправляемыйДокументРеализации КАК ДокументОснование,
			                                |	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки
			                                |ИЗ
			                                |	Документ.КорректировкаРеализации КАК КорректировкаРеализации
			                                |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_События
			                                |		ПО (КорректировкаРеализации.ИсправляемыйДокументРеализации = DR_События.Документ)
			                                |ГДЕ
			                                |	КорректировкаРеализации.Ссылка = &Документ";
			ЗапросДокументОснование.УстановитьПараметр("Документ",	Источник.Ссылка);
			РезультатДокументОснование = ЗапросДокументОснование.Выполнить();
			
			Если НЕ РезультатДокументОснование.Пустой() Тогда //НАЙДЕН Документ основания
				ВыборкаДокументОснование = РезультатДокументОснование.Выбрать();
				ВыборкаДокументОснование.Следующий();
				
				СтруктураРегистраDR_События = Новый Структура;
				СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, ВыборкаДокументОснование.ИдентификаторЦепочки);
				СтруктураРегистраDR_События.Вставить("Документ"					, Источник.Ссылка);
				СтруктураРегистраDR_События.Вставить("ВидДокумента"				, Перечисления.ЭКОМ_ВидыДокументов.КорректировочнаяНакладная_Исходящая);
				СтруктураРегистраDR_События.Вставить("Идентификатор"			, Строка(Источник.Ссылка.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, Строка(ВыборкаДокументОснование.ДокументОснование.УникальныйИдентификатор()));
				
				СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
				
				ЭКОМ_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);					
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецЕсли;

////////////////////////////////////////////////////////////////////////////////
// СчетФактураВыданный
//
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаСчетФактуры) Тогда
	ВыборкаУчастниковВЭДО = ЭКОМ_ОбщегоНазначения.КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента]);
	Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0 Тогда
		
		//ИЩЕМ запись в регистре DR_События 
		ЗапросДокументов = Новый Запрос;
		ЗапросДокументов.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	DR_События.Документ КАК Документ
		|ИЗ
		|	РегистрСведений.DR_События КАК DR_События
		|ГДЕ
		|	DR_События.Документ = &Документ
		|	И DR_События.ВидДокумента = &ВидДокумента";
		ЗапросДокументов.УстановитьПараметр("Документ", Источник.Ссылка);
		ЗапросДокументов.УстановитьПараметр("ВидДокумента", Перечисления.ЭКОМ_ВидыДокументов.СчетФактура_Исходящий);
		РезультатИдентификаторЦепочки = ЗапросДокументов.Выполнить();
		
		Если РезультатИдентификаторЦепочки.Пустой() Тогда
			//ИЩЕМ Документ основания
			ЗапросДокументОснование = Новый Запрос;
			ЗапросДокументОснование.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
											|	СчетФактураВыданный.ДокументОснование КАК ДокументОснование,
											|	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки
											|ИЗ
											|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
											|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_События
											|		ПО СчетФактураВыданный.ДокументОснование = DR_События.Документ
											|ГДЕ
											|	СчетФактураВыданный.Ссылка = &Документ";
			ЗапросДокументОснование.УстановитьПараметр("Документ",	Источник.Ссылка);
			РезультатДокументОснование = ЗапросДокументОснование.Выполнить();
			
			Если НЕ РезультатДокументОснование.Пустой() Тогда //НАЙДЕН Документ основания
				ВыборкаДокументОснование = РезультатДокументОснование.Выбрать();
				ВыборкаДокументОснование.Следующий();
				
				СтруктураРегистраDR_События = Новый Структура;
				СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, ВыборкаДокументОснование.ИдентификаторЦепочки);
				СтруктураРегистраDR_События.Вставить("Документ"					, Источник.Ссылка);
				СтруктураРегистраDR_События.Вставить("ВидДокумента"				, Перечисления.ЭКОМ_ВидыДокументов.СчетФактура_Исходящий);
				СтруктураРегистраDR_События.Вставить("Идентификатор"			, Строка(Источник.Ссылка.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, Строка(ВыборкаДокументОснование.ДокументОснование.УникальныйИдентификатор()));
				
				СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
				
				ЭКОМ_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);
				
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли; 		
КонецЕсли;

// ВозвратТоваровОтКлиента
Если ТипЗнч(Источник.Ссылка) = Тип(ДокументВозвратТоваровОтКлиента) Тогда
	ВыборкаУчастниковВЭДО = ЭКОМ_ОбщегоНазначения.КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента]);
	Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0 Тогда
		
		//ИЩЕМ запись в регистре DR_События 
		ЗапросДокументов = Новый Запрос;
		ЗапросДокументов.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	DR_События.Документ КАК Документ
		|ИЗ
		|	РегистрСведений.DR_События КАК DR_События
		|ГДЕ
		|	DR_События.Документ = &Документ
		|	И DR_События.ВидДокумента = &ВидДокумента";
		ЗапросДокументов.УстановитьПараметр("Документ", Источник.Ссылка);
		ЗапросДокументов.УстановитьПараметр("ВидДокумента", Перечисления.ЭКОМ_ВидыДокументов.ВозвратнаяНакладная_Входящая);
		РезультатИдентификаторЦепочки = ЗапросДокументов.Выполнить();
		
		Если РезультатИдентификаторЦепочки.Пустой() Тогда
			//ИЩЕМ Документ основание
			ЗапросДокументОснование = Новый Запрос;
			ЗапросДокументОснование.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
											|	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
											|	ВозвратТоваровОтКлиента.ДокументРеализации КАК ДокументРеализации
											|ИЗ
											|	Документ.ВозвратТоваровОтКлиента КАК ВозвратТоваровОтКлиента
											|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_События
											|		ПО ВозвратТоваровОтКлиента.ДокументРеализации = DR_События.Документ
											|ГДЕ
											|	ВозвратТоваровОтКлиента.Ссылка = &Документ";
			ЗапросДокументОснование.УстановитьПараметр("Документ",	Источник.Ссылка);
			РезультатДокументОснование = ЗапросДокументОснование.Выполнить();
			
			Если НЕ РезультатДокументОснование.Пустой() Тогда //НАЙДЕН Документ основания
				ВыборкаДокументОснование = РезультатДокументОснование.Выбрать();
				ВыборкаДокументОснование.Следующий();
				
				СтруктураРегистраDR_События = Новый Структура;
				СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, ВыборкаДокументОснование.ИдентификаторЦепочки);
				СтруктураРегистраDR_События.Вставить("Документ"					, Источник.Ссылка);
				СтруктураРегистраDR_События.Вставить("ВидДокумента"				, Перечисления.ЭКОМ_ВидыДокументов.ВозвратнаяНакладная_Входящая);
				СтруктураРегистраDR_События.Вставить("Идентификатор"			, Строка(Источник.Ссылка.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, Строка(ВыборкаДокументОснование.ДокументОснование.УникальныйИдентификатор()));
				
				СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
				
				ЭКОМ_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);
				
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли; 	
КонецЕсли;	