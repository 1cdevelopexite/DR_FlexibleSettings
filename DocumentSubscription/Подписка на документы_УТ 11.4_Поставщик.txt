ТипДокументаЭКОМ_Документы			= "ДокументСсылка.ЭКОМ_Документы";
ТипДокументаЗаказа					= "ДокументСсылка.ЗаказКлиента";
ТипДокументаРеализации				= "ДокументСсылка.РеализацияТоваровУслуг"; 
ТипДокументаКорректировкиРеализации	= "ДокументСсылка.КорректировкаРеализации";
ТипДокументаСчетФактуры 			= "ДокументСсылка.СчетФактураВыданный";
ДокументВозвратТоваровОтКлиента     = "ДокументСсылка.ВозвратТоваровОтКлиента";

ИмяОрганизации           = "Организация";
ИмяКонтрагента           = "Контрагент";
ИмяТочкиДоставки         = "Партнер";
ИмяДатаОтгрузки          = "ЖелаемаяДатаОтгрузки";
ДатаЗаказа1С             = "ДатаПоДаннымКлиента";
НомерЗаказа1С            = "НомерПоДаннымКлиента";
НомерВходящегоДокумента  = "НомерВходящегоДокумента";
ДатаВходящегоДокумента   = "ДатаВходящегоДокумента";
ИмяЗаказа1С              = "ЗаказКлиента";
ДокументОснованиеСЧФ     = "ДокументОснование";
ОснованиеВозвратаКлиента = "ДокументРеализации";

// Блок подписки для ЭКОМ Документов, по умолчанию работает только для RETORD исходяших
// т.к. для всех остальных видов документов сведения о идентификаторе цепочки заполняются
// в шаблонах входящих \ исходящих. При необходимости кастомизации следует расширить условие
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаЭКОМ_Документы)
И Источник.ВидДокумента = Перечисления.ЭКОМ_ВидыДокументов.RETORD_Исходящий 
И НЕ ПустаяСтрока(Источник.ИдентификаторЦепочки) Тогда
	
	ВыборкаУчастниковВЭДО = КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента]);
	Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0 Тогда
		
		//Регистр DR_События
		ЗапросИдентификаторЦепочки = Новый Запрос;
		ЗапросИдентификаторЦепочки.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
					   |	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки
					   |ИЗ
					   |	РегистрСведений.DR_События КАК DR_События
					   |ГДЕ
					   |	DR_События.Документ = &Документ";
		ЗапросИдентификаторЦепочки.УстановитьПараметр("Документ", Источник.Ссылка);
		РезультатИдентификаторЦепочки = ЗапросИдентификаторЦепочки.Выполнить();
		
		ИдентификаторЦепочки   = "";
		Если РезультатИдентификаторЦепочки.Пустой() Тогда
			
			СтруктураРегистраDR_События = Новый Структура;
			СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, Источник.ИдентификаторЦепочки);
			СтруктураРегистраDR_События.Вставить("Документ"					, Источник.Ссылка);
			СтруктураРегистраDR_События.Вставить("ВидДокумента"				, Источник.ВидДокумента);
			СтруктураРегистраDR_События.Вставить("Идентификатор"			, СтрЗаменить(Источник.ИмяФайла, ".xml", ""));
			СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
			
			ЭКОМ_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);
		КонецЕсли;	
		
		
		//Регистр DR_ЦепочкиДокументов
		ЗапросЦепочкиДокументов = Новый Запрос;
		ЗапросЦепочкиДокументов.Текст = "ВЫБРАТЬ
										|	DR_ЦепочкиДокументов.ИдентификаторЦепочки	КАК ИдентификаторЦепочки,
										|	DR_ЦепочкиДокументов.Организация			КАК Организация,
										|	DR_ЦепочкиДокументов.Контрагент				КАК Контрагент,
										|	DR_ЦепочкиДокументов.ТочкаДоставки			КАК ТочкаДоставки
										|ИЗ
										|	РегистрСведений.DR_ЦепочкиДокументов КАК DR_ЦепочкиДокументов
										|ГДЕ
										|	DR_ЦепочкиДокументов.ИдентификаторЦепочки = &ИдентификаторЦепочки";
		ЗапросЦепочкиДокументов.УстановитьПараметр("ИдентификаторЦепочки", Источник.ИдентификаторЦепочки);
		РезультатЦепочкиДокументов = ЗапросЦепочкиДокументов.Выполнить();
		ВыборкаЦепочкиДокументов = РезультатЦепочкиДокументов.Выбрать();
		ВыборкаЦепочкиДокументов.Следующий();
		
		Если РезультатИдентификаторЦепочки.Пустой() 
			ИЛИ НЕ ВыборкаЦепочкиДокументов.Организация = Источник.Организация 
			ИЛИ НЕ ВыборкаЦепочкиДокументов.Контрагент = Источник.Контрагент 
			ИЛИ НЕ ВыборкаЦепочкиДокументов.ТочкаДоставки = Источник.ТочкаДоставки Тогда	
			
			СтруктураРегистраDR_ЦепочкиДокументов = Новый Структура;
			СтруктураРегистраDR_ЦепочкиДокументов.Вставить("ДатаЗаказа"				, Источник.Дата);
			СтруктураРегистраDR_ЦепочкиДокументов.Вставить("ИдентификаторЦепочки"	, Источник.ИдентификаторЦепочки);
			СтруктураРегистраDR_ЦепочкиДокументов.Вставить("ДатаПоставки"			, Источник.ДатаПоставки);
			СтруктураРегистраDR_ЦепочкиДокументов.Вставить("НомерЗаказа"			, Источник.Номер);
			СтруктураРегистраDR_ЦепочкиДокументов.Вставить("Организация"			, Источник.Организация);
			СтруктураРегистраDR_ЦепочкиДокументов.Вставить("Контрагент"				, Источник.Контрагент);
			СтруктураРегистраDR_ЦепочкиДокументов.Вставить("ТочкаДоставки"			, Источник.ТочкаДоставки);
			
			ЭКОМ_ОбщегоНазначения.Записать_DR_ЦепочкиДокументов(СтруктураРегистраDR_ЦепочкиДокументов);
		КонецЕсли;
		
	КонецЕсли;	
КонецЕсли;
	
// Заказ клиента.
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаЗаказа) Тогда
	//РазделятьЗаказы = ЭКОМ_ОбщегоНазначения.Настройка_Параметр_Прочитать("ЭКОМ_РазделятьЗаказы", Ложь);   
	
	ВыборкаУчастниковВЭДО = КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента]);
	Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0 Тогда
		
		//ИЩЕМ запись в регистре DR_События 
		ЗапросДокументов = Новый Запрос;
		ЗапросДокументов.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	DR_События.Документ КАК Документ
		|ИЗ
		|	РегистрСведений.DR_События КАК DR_События
		|ГДЕ
		|	DR_События.Документ = &Документ
		|	И DR_События.ВидДокумента = &ВидДокумента";
		ЗапросДокументов.УстановитьПараметр("Документ", Источник.Ссылка);
		ЗапросДокументов.УстановитьПараметр("ВидДокумента", Перечисления.ЭКОМ_ВидыДокументов.Заказ_Входящий);
		РезультатИдентификаторЦепочки = ЗапросДокументов.Выполнить();
		
		Если РезультатИдентификаторЦепочки.Пустой() Тогда
			//ИЩЕМ Документ основания
			ЗапросДокументОснование = Новый Запрос;
			ЗапросДокументОснование.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
											|	ЭКОМ_Документы.Ссылка КАК ДокументОснование,
											|	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки
											|ИЗ
											|	Документ.ЭКОМ_Документы КАК ЭКОМ_Документы
											|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_События
											|		ПО ЭКОМ_Документы.Ссылка = DR_События.Документ
											|ГДЕ
											|	ЭКОМ_Документы.ЗаказДата = &ЗаказДата
											|	И ЭКОМ_Документы.ЗаказНомер = &ЗаказНомер
											|	И ЭКОМ_Документы.Организация = &Организация
											|	И ЭКОМ_Документы.Контрагент = &Контрагент
											|	И ЭКОМ_Документы.ТочкаДоставки = &ТочкаДоставки
											|	И ЭКОМ_Документы.ВидДокумента = &ВидДокумента";
			ЗапросДокументОснование.УстановитьПараметр("ЗаказДата",		Источник.ДатаПоДаннымКлиента);
			ЗапросДокументОснование.УстановитьПараметр("ЗаказНомер",	Источник.НомерПоДаннымКлиента);
			ЗапросДокументОснование.УстановитьПараметр("Организация",	Источник.Организация);
			ЗапросДокументОснование.УстановитьПараметр("Контрагент",	Источник.Контрагент);
			ЗапросДокументОснование.УстановитьПараметр("ТочкаДоставки",	Источник.Партнер);
			ЗапросДокументОснование.УстановитьПараметр("ВидДокумента",	Перечисления.ЭКОМ_ВидыДокументов.ORDER_Входящий);
			
			РезультатДокументОснование = ЗапросДокументОснование.Выполнить();
			
			Если НЕ РезультатДокументОснование.Пустой() Тогда //НАЙДЕН Документ основания 
				ВыборкаДокументОснование = РезультатДокументОснование.Выбрать();
				ВыборкаДокументОснование.Следующий();
				
				СтруктураРегистраDR_События = Новый Структура;
				СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, ВыборкаДокументОснование.ИдентификаторЦепочки);
				СтруктураРегистраDR_События.Вставить("Документ"					, Источник.Ссылка);
				СтруктураРегистраDR_События.Вставить("ВидДокумента"				, Перечисления.ЭКОМ_ВидыДокументов.Заказ_Входящий);
				СтруктураРегистраDR_События.Вставить("Идентификатор"			, Строка(Источник.Ссылка.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, Строка(ВыборкаДокументОснование.ДокументОснование.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
				
				ЭКОМ_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли; 		
КонецЕсли;

// Реализация.
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаРеализации) Тогда
	//РазделятьРеализации = ЭКОМ_ОбщегоНазначения.Настройка_Параметр_Прочитать("ЭКОМ_РазделятьРеализации", Ложь);
	
	ВыборкаУчастниковВЭДО = КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента]);    //
	
	Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0 Тогда
		
		//ИЩЕМ запись в регистре DR_События 
		ЗапросДокументов = Новый Запрос;
		ЗапросДокументов.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	DR_События.Документ КАК Документ
		|ИЗ
		|	РегистрСведений.DR_События КАК DR_События
		|ГДЕ
		|	DR_События.Документ = &Документ
		|	И DR_События.ВидДокумента = &ВидДокумента";
		ЗапросДокументов.УстановитьПараметр("Документ", Источник.Ссылка);
		ЗапросДокументов.УстановитьПараметр("ВидДокумента", Перечисления.ЭКОМ_ВидыДокументов.Накладная_Исходящая);
		РезультатИдентификаторЦепочки = ЗапросДокументов.Выполнить();
		
		Если РезультатИдентификаторЦепочки.Пустой() Тогда
			//ИЩЕМ Документ основания
			ЗапросДокументОснование = Новый Запрос;
			ЗапросДокументОснование.Текст = "ВЫБРАТЬ
											|	РеализацияТоваровУслуг.ЗаказКлиента КАК ДокументОснование,
											|	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки
											|ИЗ
											|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
											|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_События
											|		ПО РеализацияТоваровУслуг.ЗаказКлиента = DR_События.Документ
											|ГДЕ
											|	РеализацияТоваровУслуг.Ссылка = &Документ
											|
											|ОБЪЕДИНИТЬ ВСЕ
											|
											|ВЫБРАТЬ
											|	ЭКОМ_ДокументыСвязанные.Ссылка,
											|	DR_События.ИдентификаторЦепочки
											|ИЗ
											|	Документ.ЭКОМ_Документы.ДокументыСвязанные КАК ЭКОМ_ДокументыСвязанные
											|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_События
											|		ПО ЭКОМ_ДокументыСвязанные.Ссылка = DR_События.Документ
											|ГДЕ
											|	ЭКОМ_ДокументыСвязанные.ДокументСвязанный = &Документ";
			ЗапросДокументОснование.УстановитьПараметр("Документ",				Источник.Ссылка);
			РезультатДокументОснование = ЗапросДокументОснование.Выполнить();
			
			Если НЕ РезультатДокументОснование.Пустой() Тогда //НАЙДЕН Документ основания 
				ВыборкаДокументОснование = РезультатДокументОснование.Выбрать();
				ВыборкаДокументОснование.Следующий();
				
				СтруктураРегистраDR_События = Новый Структура;
				СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, ВыборкаДокументОснование.ИдентификаторЦепочки);
				СтруктураРегистраDR_События.Вставить("Документ"					, Источник.Ссылка);
				СтруктураРегистраDR_События.Вставить("ВидДокумента"				, Перечисления.ЭКОМ_ВидыДокументов.Накладная_Исходящая);
				СтруктураРегистраDR_События.Вставить("Идентификатор"			, Строка(Источник.Ссылка.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, Строка(ВыборкаДокументОснование.ДокументОснование.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
				
				ЭКОМ_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);
			Иначе // ЮЗД без EDI
				
				ИдентификаторЦепочки = Строка(Новый УникальныйИдентификатор);
				ИдентификаторЦепочки = СтрЗаменить(ИдентификаторЦепочки, "-", "");
				ИдентификаторЦепочки = "TMP_" + ИдентификаторЦепочки;
				
				//Регистр DR_События
				СтруктураРегистраDR_События = Новый Структура;
				СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, ИдентификаторЦепочки);
				СтруктураРегистраDR_События.Вставить("Документ"					, Источник.Ссылка);
				СтруктураРегистраDR_События.Вставить("ВидДокумента"				, Перечисления.ЭКОМ_ВидыДокументов.Накладная_Исходящая);
				СтруктураРегистраDR_События.Вставить("Идентификатор"			, Строка(Источник.Ссылка.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
				
				ЭКОМ_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);
				
				//Регистр DR_ЦепочкиДокументов
				СтруктураРегистраDR_ЦепочкиДокументов = Новый Структура;
				СтруктураРегистраDR_ЦепочкиДокументов.Вставить("ИдентификаторЦепочки"	, ИдентификаторЦепочки);
				СтруктураРегистраDR_ЦепочкиДокументов.Вставить("ДатаПоставки"			, Источник.Дата);
				СтруктураРегистраDR_ЦепочкиДокументов.Вставить("Организация"			, Источник.Организация);
				СтруктураРегистраDR_ЦепочкиДокументов.Вставить("Контрагент"				, Источник.Контрагент);
				СтруктураРегистраDR_ЦепочкиДокументов.Вставить("ТочкаДоставки"			, Источник.Партнер);
				СтруктураРегистраDR_ЦепочкиДокументов.Вставить("ДатаЗаказа"				, Источник.Дата);
				
				ЭКОМ_ОбщегоНазначения.Записать_DR_ЦепочкиДокументов(СтруктураРегистраDR_ЦепочкиДокументов);
			КонецЕсли;
		КонецЕсли;
			
	КонецЕсли;
	
КонецЕсли; // тип источника - реализация

// Корректировка реализации.
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаКорректировкиРеализации) Тогда
	
	ВыборкаУчастниковВЭДО = КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента]);
	Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0 Тогда
		//ИЩЕМ запись в регистре DR_События 
		ЗапросДокументов = Новый Запрос;
		ЗапросДокументов.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	DR_События.Документ КАК Документ
		|ИЗ
		|	РегистрСведений.DR_События КАК DR_События
		|ГДЕ
		|	DR_События.Документ = &Документ
		|	И DR_События.ВидДокумента = &ВидДокумента";
		ЗапросДокументов.УстановитьПараметр("Документ", Источник.Ссылка);
		ЗапросДокументов.УстановитьПараметр("ВидДокумента", Перечисления.ЭКОМ_ВидыДокументов.КорректировочнаяНакладная_Исходящая);
		РезультатИдентификаторЦепочки = ЗапросДокументов.Выполнить();
		
		Если РезультатИдентификаторЦепочки.Пустой() Тогда
			
			//ИЩЕМ Документ основания
			ЗапросДокументОснование = Новый Запрос;
			ЗапросДокументОснование.Текст = "ВЫБРАТЬ
											|	КорректировкаРеализации.ДокументОснование КАК ДокументОснование,
											|	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки
											|ИЗ
											|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
											|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_События
											|		ПО КорректировкаРеализации.ДокументОснование = DR_События.Документ
											|ГДЕ
											|	КорректировкаРеализации.Ссылка = &Документ";
			ЗапросДокументОснование.УстановитьПараметр("Документ",	Источник.Ссылка);
			РезультатДокументОснование = ЗапросДокументОснование.Выполнить();
			
			Если НЕ РезультатДокументОснование.Пустой() Тогда //НАЙДЕН Документ основания
				ВыборкаДокументОснование = РезультатДокументОснование.Выбрать();
				ВыборкаДокументОснование.Следующий();
				
				СтруктураРегистраDR_События = Новый Структура;
				СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, ВыборкаДокументОснование.ИдентификаторЦепочки);
				СтруктураРегистраDR_События.Вставить("Документ"					, Источник.Ссылка);
				СтруктураРегистраDR_События.Вставить("ВидДокумента"				, Перечисления.ЭКОМ_ВидыДокументов.КорректировочнаяНакладная_Исходящая);
				СтруктураРегистраDR_События.Вставить("Идентификатор"			, Строка(Источник.Ссылка.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, Строка(ВыборкаДокументОснование.ДокументОснование.УникальныйИдентификатор()));
				
				СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
				
				ЭКОМ_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);					
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецЕсли;

////////////////////////////////////////////////////////////////////////////////
// СчетФактураВыданный
//
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаСчетФактуры) Тогда
	ВыборкаУчастниковВЭДО = КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента]);
	Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0 Тогда
		
		//ИЩЕМ запись в регистре DR_События 
		ЗапросДокументов = Новый Запрос;
		ЗапросДокументов.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	DR_События.Документ КАК Документ
		|ИЗ
		|	РегистрСведений.DR_События КАК DR_События
		|ГДЕ
		|	DR_События.Документ = &Документ
		|	И DR_События.ВидДокумента = &ВидДокумента";
		ЗапросДокументов.УстановитьПараметр("Документ", Источник.Ссылка);
		ЗапросДокументов.УстановитьПараметр("ВидДокумента", Перечисления.ЭКОМ_ВидыДокументов.СчетФактура_Исходящий);
		РезультатИдентификаторЦепочки = ЗапросДокументов.Выполнить();
		
		Если РезультатИдентификаторЦепочки.Пустой() Тогда
			//ИЩЕМ Документ основания
			ЗапросДокументОснование = Новый Запрос;
			ЗапросДокументОснование.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
											|	СчетФактураВыданный.ДокументОснование КАК ДокументОснование,
											|	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки
											|ИЗ
											|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
											|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_События
											|		ПО СчетФактураВыданный.ДокументОснование = DR_События.Документ
											|ГДЕ
											|	СчетФактураВыданный.Ссылка = &Документ";
			ЗапросДокументОснование.УстановитьПараметр("Документ",	Источник.Ссылка);
			РезультатДокументОснование = ЗапросДокументОснование.Выполнить();
			
			Если НЕ РезультатДокументОснование.Пустой() Тогда //НАЙДЕН Документ основания
				ВыборкаДокументОснование = РезультатДокументОснование.Выбрать();
				ВыборкаДокументОснование.Следующий();
				
				СтруктураРегистраDR_События = Новый Структура;
				СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, ВыборкаДокументОснование.ИдентификаторЦепочки);
				СтруктураРегистраDR_События.Вставить("Документ"					, Источник.Ссылка);
				СтруктураРегистраDR_События.Вставить("ВидДокумента"				, Перечисления.ЭКОМ_ВидыДокументов.СчетФактура_Исходящий);
				СтруктураРегистраDR_События.Вставить("Идентификатор"			, Строка(Источник.Ссылка.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, Строка(ВыборкаДокументОснование.ДокументОснование.УникальныйИдентификатор()));
				
				СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
				
				ЭКОМ_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);
				
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли; 		
КонецЕсли;

// ВозвратТоваровОтКлиента
Если ТипЗнч(Источник.Ссылка) = Тип(ДокументВозвратТоваровОтКлиента) Тогда
	ВыборкаУчастниковВЭДО = КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента]);
	Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0 Тогда
		
		//ИЩЕМ запись в регистре DR_События 
		ЗапросДокументов = Новый Запрос;
		ЗапросДокументов.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	DR_События.Документ КАК Документ
		|ИЗ
		|	РегистрСведений.DR_События КАК DR_События
		|ГДЕ
		|	DR_События.Документ = &Документ
		|	И DR_События.ВидДокумента = &ВидДокумента";
		ЗапросДокументов.УстановитьПараметр("Документ", Источник.Ссылка);
		ЗапросДокументов.УстановитьПараметр("ВидДокумента", Перечисления.ЭКОМ_ВидыДокументов.ВозвратнаяНакладная_Входящая);
		РезультатИдентификаторЦепочки = ЗапросДокументов.Выполнить();
		
		Если РезультатИдентификаторЦепочки.Пустой() Тогда
			//ИЩЕМ Документ основание
			ЗапросДокументОснование = Новый Запрос;
			ЗапросДокументОснование.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
											|	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
											|	ВозвратТоваровОтКлиента.ДокументРеализации КАК ДокументРеализации
											|ИЗ
											|	Документ.ВозвратТоваровОтКлиента КАК ВозвратТоваровОтКлиента
											|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_События
											|		ПО ВозвратТоваровОтКлиента.ДокументРеализации = DR_События.Документ
											|ГДЕ
											|	ВозвратТоваровОтКлиента.Ссылка = &Документ";
			ЗапросДокументОснование.УстановитьПараметр("Документ",	Источник.Ссылка);
			РезультатДокументОснование = ЗапросДокументОснование.Выполнить();
			
			Если НЕ РезультатДокументОснование.Пустой() Тогда //НАЙДЕН Документ основания
				ВыборкаДокументОснование = РезультатДокументОснование.Выбрать();
				ВыборкаДокументОснование.Следующий();
				
				СтруктураРегистраDR_События = Новый Структура;
				СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, ВыборкаДокументОснование.ИдентификаторЦепочки);
				СтруктураРегистраDR_События.Вставить("Документ"					, Источник.Ссылка);
				СтруктураРегистраDR_События.Вставить("ВидДокумента"				, Перечисления.ЭКОМ_ВидыДокументов.ВозвратнаяНакладная_Входящая);
				СтруктураРегистраDR_События.Вставить("Идентификатор"			, Строка(Источник.Ссылка.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, Строка(ВыборкаДокументОснование.ДокументОснование.УникальныйИдентификатор()));
				
				СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
				
				ЭКОМ_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);
				
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли; 	
КонецЕсли;	