ТипДокументаDR_Документ				= "ДокументСсылка.DR_Документ";
ТипДокументаЭКОМ_Документы			= "ДокументСсылка.ЭКОМ_Документы";
ТипДокументаЗаказа					= "ДокументСсылка.ЗаказКлиента";
ТипДокументаРеализации				= "ДокументСсылка.РеализацияТоваровУслуг"; 
ТипДокументаКорректировкиРеализации	= "ДокументСсылка.КорректировкаРеализации";
ТипДокументаСчетФактуры 			= "ДокументСсылка.СчетФактураВыданный";
ДокументВозвратТоваровОтКлиента     = "ДокументСсылка.ВозвратТоваровОтКлиента";

ИмяОрганизации           = "Организация";
ИмяКонтрагента           = "Контрагент";
ИмяТочкиДоставки         = "Партнер";
ИмяДатаОтгрузки          = "ДатаОтгрузки";
ORDERDATE	             = "ДатаПоДаннымКлиента";
ORDERNUMBER		         = "НомерПоДаннымКлиента";
НомерВходящегоДокумента  = "НомерВходящегоДокумента";
ДатаВходящегоДокумента   = "ДатаВходящегоДокумента";
НомерДокумента1С         = "Номер";
ДатаДокумента1С          = "Дата";
ИмяЗаказа1С              = "ЗаказКлиента";
ДокументОснованиеСЧФ     = "ДокументОснование";
ОснованиеВозвратаКлиента = "ДокументРеализации";

// Блок подписки для ЭКОМ Документов, по умолчанию работает только для RETORD исходяших
// т.к. для всех остальных видов документов сведения о идентификаторе цепочки заполняются
// в шаблонах входящих \ исходящих. При необходимости кастомизации следует расширить условие
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаDR_Документ)
И Источник.ВидДокумента = "RETORD_Исходящий" 
И НЕ ПустаяСтрока(Источник.ИдентификаторЦепочки) Тогда
	
	ВыборкаУчастниковВЭДО = ЭКОМ_ОбщегоНазначения.КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента]);
	
	Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0 Тогда
		
		//Регистр DR_События
		ЗапросИдентификаторЦепочки = Новый Запрос;
		ЗапросИдентификаторЦепочки.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
					   |	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки
					   |ИЗ
					   |	РегистрСведений.DR_События КАК DR_События
					   |ГДЕ
					   |	DR_События.Документ = &Документ";
		ЗапросИдентификаторЦепочки.УстановитьПараметр("Документ", Источник.Ссылка);
		РезультатИдентификаторЦепочки = ЗапросИдентификаторЦепочки.Выполнить();
		
		ИдентификаторЦепочки   = "";
		
		Если РезультатИдентификаторЦепочки.Пустой() Тогда
			
			СтруктураРегистраDR_События = Новый Структура;
			СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, Источник.ИдентификаторЦепочки);
			СтруктураРегистраDR_События.Вставить("Документ"					, Источник.Ссылка);
			СтруктураРегистраDR_События.Вставить("ВидДокумента"				, Источник.ВидДокумента);
			СтруктураРегистраDR_События.Вставить("Идентификатор"			, СтрЗаменить(Источник.ИмяФайла, ".xml", ""));
			СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
			
			ЭКОМ_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);
		КонецЕсли;	
		
		
		//Регистр DR_ЦепочкиДокументов
		ЗапросЦепочкиДокументов = Новый Запрос;
		ЗапросЦепочкиДокументов.Текст = "ВЫБРАТЬ
										|	DR_ЦепочкиДокументов.ИдентификаторЦепочки	КАК ИдентификаторЦепочки,
										|	DR_ЦепочкиДокументов.Организация			КАК Организация,
										|	DR_ЦепочкиДокументов.Контрагент				КАК Контрагент,
										|	DR_ЦепочкиДокументов.ТочкаДоставки			КАК ТочкаДоставки
										|ИЗ
										|	РегистрСведений.DR_ЦепочкиДокументов КАК DR_ЦепочкиДокументов
										|ГДЕ
										|	DR_ЦепочкиДокументов.ИдентификаторЦепочки = &ИдентификаторЦепочки";
		
		ЗапросЦепочкиДокументов.УстановитьПараметр("ИдентификаторЦепочки", Источник.ИдентификаторЦепочки);
		
		РезультатЦепочкиДокументов = ЗапросЦепочкиДокументов.Выполнить();		
		ВыборкаЦепочкиДокументов = РезультатЦепочкиДокументов.Выбрать();
		
		ВыборкаЦепочкиДокументов.Следующий();
		
		Если РезультатИдентификаторЦепочки.Пустой() 
			ИЛИ НЕ ВыборкаЦепочкиДокументов.Организация = Источник.Организация 
			ИЛИ НЕ ВыборкаЦепочкиДокументов.Контрагент = Источник.Контрагент 
			ИЛИ НЕ ВыборкаЦепочкиДокументов.ТочкаДоставки = Источник.ТочкаДоставки Тогда	
			
			СтруктураРегистраDR_ЦепочкиДокументов = Новый Структура;
			СтруктураРегистраDR_ЦепочкиДокументов.Вставить("ДатаЗаказа"				, Источник.Дата);
			СтруктураРегистраDR_ЦепочкиДокументов.Вставить("ИдентификаторЦепочки"	, Источник.ИдентификаторЦепочки);
			СтруктураРегистраDR_ЦепочкиДокументов.Вставить("ДатаПоставки"			, Источник.ДатаПоставки);
			СтруктураРегистраDR_ЦепочкиДокументов.Вставить("НомерЗаказа"			, Источник.Номер);
			СтруктураРегистраDR_ЦепочкиДокументов.Вставить("Организация"			, Источник.Организация);
			СтруктураРегистраDR_ЦепочкиДокументов.Вставить("Контрагент"				, Источник.Контрагент);
			СтруктураРегистраDR_ЦепочкиДокументов.Вставить("ТочкаДоставки"			, Источник.ТочкаДоставки);
			
			ЭКОМ_ОбщегоНазначения.Записать_DR_ЦепочкиДокументов(СтруктураРегистраDR_ЦепочкиДокументов);
		КонецЕсли;
		
	КонецЕсли;	
КонецЕсли;
	
// Заказ клиента.
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаЗаказа) Тогда
	//РазделятьЗаказы = ЭКОМ_ОбщегоНазначения.Настройка_Параметр_Прочитать("ЭКОМ_РазделятьЗаказы", Ложь);   
	
	ВыборкаУчастниковВЭДО = ЭКОМ_ОбщегоНазначения.КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента]);
	
	Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0 Тогда
		
		//ИЩЕМ запись в регистре DR_События 
		ЗапросДокументов = Новый Запрос;
		ЗапросДокументов.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	DR_События.Документ КАК Документ
		|ИЗ
		|	РегистрСведений.DR_События КАК DR_События
		|ГДЕ
		|	DR_События.Документ = &Документ
		|	И DR_События.ВидДокумента = &ВидДокумента";
		ЗапросДокументов.УстановитьПараметр("Документ", Источник.Ссылка);
		ЗапросДокументов.УстановитьПараметр("ВидДокумента", "Заказ_Входящий");
		РезультатИдентификаторЦепочки = ЗапросДокументов.Выполнить();
		
		Если РезультатИдентификаторЦепочки.Пустой() Тогда
			//ИЩЕМ Документ основания
			ЗапросДокументОснование = Новый Запрос;
			ЗапросДокументОснование.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
			                                |	DR_События.Документ КАК ДокументОснование,
			                                |	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки
			                                |ИЗ
			                                |	РегистрСведений.DR_ЦепочкиДокументов КАК DR_ЦепочкиДокументов
			                                |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_События
			                                |		ПО (DR_События.ИдентификаторЦепочки = DR_ЦепочкиДокументов.ИдентификаторЦепочки)
			                                |			И (DR_События.ВидДокумента = &ВидДокумента)
			                                |ГДЕ
			                                |	DR_ЦепочкиДокументов.НомерЗаказа = &ЗаказНомер
			                                |	И DR_ЦепочкиДокументов.ДатаЗаказа = &ЗаказДата
			                                |	И DR_ЦепочкиДокументов.Организация = &Организация
			                                |	И DR_ЦепочкиДокументов.Контрагент = &Контрагент
			                                |	И DR_ЦепочкиДокументов.ТочкаДоставки = &ТочкаДоставки";
			ЗапросДокументОснование.УстановитьПараметр("ЗаказДата",		Источник.ДатаПоДаннымКлиента);
			ЗапросДокументОснование.УстановитьПараметр("ЗаказНомер",	Источник.НомерПоДаннымКлиента);
			ЗапросДокументОснование.УстановитьПараметр("Организация",	Источник.Организация);
			ЗапросДокументОснование.УстановитьПараметр("Контрагент",	Источник.Контрагент);
			ЗапросДокументОснование.УстановитьПараметр("ТочкаДоставки",	Источник.Партнер);
			ЗапросДокументОснование.УстановитьПараметр("ВидДокумента",	"ORDER_Входящий");
			
			РезультатДокументОснование = ЗапросДокументОснование.Выполнить();
			
			Если НЕ РезультатДокументОснование.Пустой() Тогда //НАЙДЕН Документ основания
			 
				ВыборкаДокументОснование = РезультатДокументОснование.Выбрать();
				ВыборкаДокументОснование.Следующий();
				
				СтруктураРегистраDR_События = Новый Структура;
				СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, ВыборкаДокументОснование.ИдентификаторЦепочки);
				СтруктураРегистраDR_События.Вставить("Документ"					, Источник.Ссылка);
				СтруктураРегистраDR_События.Вставить("ВидДокумента"				, "Заказ_Входящий");
				СтруктураРегистраDR_События.Вставить("Идентификатор"			, Строка(Источник.Ссылка.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, Строка(ВыборкаДокументОснование.ДокументОснование.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
				
				ЭКОМ_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);
			
			Иначе  //УПД без EDI
				
				//Регистр DR_События
				СтруктураРегистраDR_События = Новый Структура;
				СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"			, Строка("TMP_" + Источник.Ссылка.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("Документ"						, Источник.Ссылка);
				СтруктураРегистраDR_События.Вставить("ВидДокумента"					, "Заказ_Входящий");
				СтруктураРегистраDR_События.Вставить("Идентификатор"				, Строка(Источник.Ссылка.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("АктуализироватьИдентификатор"	, Истина);
				СтруктураРегистраDR_События.Вставить("ДатаЗаписи"					, ТекущаяДата());
				
				ЭКОМ_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);
				
				//Регистр DR_ЦепочкиДокументов
				СтруктураРегистраDR_ЦепочкиДокументов = Новый Структура;
				СтруктураРегистраDR_ЦепочкиДокументов.Вставить("ДатаЗаказа"				, Источник[ДатаДокумента1С]);
				СтруктураРегистраDR_ЦепочкиДокументов.Вставить("ДатаПоставки"           , Источник[ИмяДатаОтгрузки]);
				СтруктураРегистраDR_ЦепочкиДокументов.Вставить("ИдентификаторЦепочки"   , Строка("TMP_" + Источник.Ссылка.УникальныйИдентификатор()));
				СтруктураРегистраDR_ЦепочкиДокументов.Вставить("Контрагент"             , Источник[ИмяКонтрагента]);
				СтруктураРегистраDR_ЦепочкиДокументов.Вставить("НомерЗаказа"            , Источник[НомерДокумента1С]);
				СтруктураРегистраDR_ЦепочкиДокументов.Вставить("Организация"            , Источник[ИмяОрганизации]);
				СтруктураРегистраDR_ЦепочкиДокументов.Вставить("ТочкаДоставки"          , Источник[ИмяТочкиДоставки]);
				
				ЭКОМ_ОбщегоНазначения.Записать_DR_ЦепочкиДокументов(СтруктураРегистраDR_ЦепочкиДокументов);
			
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли; 		
КонецЕсли;

// Реализация.
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаРеализации) Тогда
	//РазделятьРеализации = ЭКОМ_ОбщегоНазначения.Настройка_Параметр_Прочитать("ЭКОМ_РазделятьРеализации", Ложь);
	
	ВыборкаУчастниковВЭДО = ЭКОМ_ОбщегоНазначения.КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента]);    //
	
	Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0 Тогда
		
		//ИЩЕМ запись в регистре DR_События 
		ЗапросДокументов = Новый Запрос;
		ЗапросДокументов.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	DR_События.Документ КАК Документ
		|ИЗ
		|	РегистрСведений.DR_События КАК DR_События
		|ГДЕ
		|	DR_События.Документ = &Документ
		|	И DR_События.ВидДокумента = &ВидДокумента";
		
		ЗапросДокументов.УстановитьПараметр("Документ", Источник.Ссылка);
		ЗапросДокументов.УстановитьПараметр("ВидДокумента", "Накладная_Исходящая");
		
		РезультатИдентификаторЦепочки = ЗапросДокументов.Выполнить();
		
		Если РезультатИдентификаторЦепочки.Пустой() Тогда
			//ИЩЕМ Документ основания
			ЗапросДокументОснование = Новый Запрос;
			ЗапросДокументОснование.Текст = "ВЫБРАТЬ
											|	РеализацияТоваровУслуг.ЗаказКлиента КАК ДокументОснование,
											|	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки
											|ИЗ
											|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
											|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_События
											|		ПО РеализацияТоваровУслуг.ЗаказКлиента = DR_События.Документ
											|			И РеализацияТоваровУслуг.РеализацияПоЗаказам
											|ГДЕ
											|	РеализацияТоваровУслуг.Ссылка = &Документ";
											
			ЗапросДокументОснование.УстановитьПараметр("Документ",				Источник.Ссылка);
			
			РезультатДокументОснование = ЗапросДокументОснование.Выполнить();
			
			Если НЕ РезультатДокументОснование.Пустой() Тогда //НАЙДЕН Документ основания 
				ВыборкаДокументОснование = РезультатДокументОснование.Выбрать();
				ВыборкаДокументОснование.Следующий();
				
				СтруктураРегистраDR_События = Новый Структура;
				СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, ВыборкаДокументОснование.ИдентификаторЦепочки);
				СтруктураРегистраDR_События.Вставить("Документ"					, Источник.Ссылка);
				СтруктураРегистраDR_События.Вставить("ВидДокумента"				, "Накладная_Исходящая");
				СтруктураРегистраDR_События.Вставить("Идентификатор"			, Строка(Источник.Ссылка.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, Строка(ВыборкаДокументОснование.ДокументОснование.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
				
				ЭКОМ_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);
			Иначе // ЮЗД без EDI
				
				//Регистр DR_События
				СтруктураРегистраDR_События = Новый Структура;
				СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"			, Строка("TMP_" + Источник.Ссылка.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("Документ"						, Источник.Ссылка);
				СтруктураРегистраDR_События.Вставить("ВидДокумента"					, "Накладная_Исходящая");
				СтруктураРегистраDR_События.Вставить("Идентификатор"				, Строка(Источник.Ссылка.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("АктуализироватьИдентификатор"	, Истина);
				СтруктураРегистраDR_События.Вставить("ДатаЗаписи"					, ТекущаяДата());
				
				
				ЭКОМ_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);
				
				//Регистр DR_ЦепочкиДокументов
				СтруктураРегистраDR_ЦепочкиДокументов = Новый Структура;
				СтруктураРегистраDR_ЦепочкиДокументов.Вставить("ДатаЗаказа"				, Источник[ДатаДокумента1С]); //Дата РТУ, если РТУ создано без документа основания
				СтруктураРегистраDR_ЦепочкиДокументов.Вставить("ДатаПоставки"           , Источник[ДатаДокумента1С]);
				СтруктураРегистраDR_ЦепочкиДокументов.Вставить("ИдентификаторЦепочки"   , Строка("TMP_" + Источник.Ссылка.УникальныйИдентификатор()));
				СтруктураРегистраDR_ЦепочкиДокументов.Вставить("Контрагент"             , Источник[ИмяКонтрагента]);
				СтруктураРегистраDR_ЦепочкиДокументов.Вставить("НомерЗаказа"            , Источник[НомерДокумента1С]); //Номер РТУ, если РТУ создано без документа основания
				СтруктураРегистраDR_ЦепочкиДокументов.Вставить("Организация"            , Источник[ИмяОрганизации]);
				СтруктураРегистраDR_ЦепочкиДокументов.Вставить("ТочкаДоставки"          , Источник[ИмяТочкиДоставки]);
				
				ЭКОМ_ОбщегоНазначения.Записать_DR_ЦепочкиДокументов(СтруктураРегистраDR_ЦепочкиДокументов);
				
			КонецЕсли;
		КонецЕсли;
			
	КонецЕсли;
	
КонецЕсли; // тип источника - реализация

// Корректировка реализации.
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаКорректировкиРеализации) Тогда
	
	ВыборкаУчастниковВЭДО = ЭКОМ_ОбщегоНазначения.КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента]);
	
	Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0 Тогда
		//ИЩЕМ запись в регистре DR_События 
		ЗапросДокументов = Новый Запрос;
		ЗапросДокументов.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	DR_События.Документ КАК Документ
		|ИЗ
		|	РегистрСведений.DR_События КАК DR_События
		|ГДЕ
		|	DR_События.Документ = &Документ
		|	И DR_События.ВидДокумента = &ВидДокумента";
		
		ЗапросДокументов.УстановитьПараметр("Документ", Источник.Ссылка);
		ЗапросДокументов.УстановитьПараметр("ВидДокумента", "КорректировочнаяНакладная_Исходящая");
		
		РезультатИдентификаторЦепочки = ЗапросДокументов.Выполнить();
		
		Если РезультатИдентификаторЦепочки.Пустой() Тогда
			
			//ИЩЕМ Документ основания
			ЗапросДокументОснование = Новый Запрос;
			ЗапросДокументОснование.Текст = "ВЫБРАТЬ
											|	КорректировкаРеализации.ДокументОснование КАК ДокументОснование,
											|	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки
											|ИЗ
											|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
											|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_События
											|		ПО КорректировкаРеализации.ДокументОснование = DR_События.Документ
											|ГДЕ
											|	КорректировкаРеализации.Ссылка = &Документ";
											
			ЗапросДокументОснование.УстановитьПараметр("Документ",	Источник.Ссылка);
			
			РезультатДокументОснование = ЗапросДокументОснование.Выполнить();
			
			Если НЕ РезультатДокументОснование.Пустой() Тогда //НАЙДЕН Документ основания
			
				ВыборкаДокументОснование = РезультатДокументОснование.Выбрать();
				ВыборкаДокументОснование.Следующий();
				
				СтруктураРегистраDR_События = Новый Структура;
				СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, ВыборкаДокументОснование.ИдентификаторЦепочки);
				СтруктураРегистраDR_События.Вставить("Документ"					, Источник.Ссылка);
				СтруктураРегистраDR_События.Вставить("ВидДокумента"				, "КорректировочнаяНакладная_Исходящая");
				СтруктураРегистраDR_События.Вставить("Идентификатор"			, Строка(Источник.Ссылка.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, Строка(ВыборкаДокументОснование.ДокументОснование.УникальныйИдентификатор()));
				
				СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
				
				ЭКОМ_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);					
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецЕсли;

////////////////////////////////////////////////////////////////////////////////
// СчетФактураВыданный
//
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаСчетФактуры) Тогда
	
	ВыборкаУчастниковВЭДО = ЭКОМ_ОбщегоНазначения.КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента]);
	
	Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0 Тогда
		
		//ИЩЕМ запись в регистре DR_События 
		ЗапросДокументов = Новый Запрос;
		ЗапросДокументов.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	DR_События.Документ КАК Документ
		|ИЗ
		|	РегистрСведений.DR_События КАК DR_События
		|ГДЕ
		|	DR_События.Документ = &Документ
		|	И DR_События.ВидДокумента = &ВидДокумента";
		
		ЗапросДокументов.УстановитьПараметр("Документ", Источник.Ссылка);
		ЗапросДокументов.УстановитьПараметр("ВидДокумента", "СчетФактура_Исходящий");
		
		РезультатИдентификаторЦепочки = ЗапросДокументов.Выполнить();
		
		Если РезультатИдентификаторЦепочки.Пустой() Тогда
		
			//ИЩЕМ Документ основания
			ЗапросДокументОснование = Новый Запрос;
			ЗапросДокументОснование.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
											|	СчетФактураВыданный.ДокументОснование КАК ДокументОснование,
											|	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки
											|ИЗ
											|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
											|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_События
											|		ПО СчетФактураВыданный.ДокументОснование = DR_События.Документ
											|ГДЕ
											|	СчетФактураВыданный.Ссылка = &Документ";
											
			ЗапросДокументОснование.УстановитьПараметр("Документ",	Источник.Ссылка);
			
			РезультатДокументОснование = ЗапросДокументОснование.Выполнить();
			
			Если НЕ РезультатДокументОснование.Пустой() Тогда //НАЙДЕН Документ основания
				ВыборкаДокументОснование = РезультатДокументОснование.Выбрать();
				ВыборкаДокументОснование.Следующий();
				
				СтруктураРегистраDR_События = Новый Структура;
				СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, ВыборкаДокументОснование.ИдентификаторЦепочки);
				СтруктураРегистраDR_События.Вставить("Документ"					, Источник.Ссылка);
				СтруктураРегистраDR_События.Вставить("ВидДокумента"				, "СчетФактура_Исходящий");
				СтруктураРегистраDR_События.Вставить("Идентификатор"			, Строка(Источник.Ссылка.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, Строка(ВыборкаДокументОснование.ДокументОснование.УникальныйИдентификатор()));
				
				СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
				
				//Для актуализации идентификатора по счф без EDI, ищем событие по order
				НаборЗаписейORDER = РегистрыСведений.DR_События.СоздатьНаборЗаписей();
				НаборЗаписейORDER.Отбор.ИдентификаторЦепочки.Установить(ВыборкаДокументОснование.ИдентификаторЦепочки);
				НаборЗаписейORDER.Отбор.ВидДокумента.Установить("ORDER_Входящий"); 
				НаборЗаписейORDER.Прочитать();
				
				//проверка на наличие загруженного order и временный идентификатор
				Если НаборЗаписейORDER.Количество() = 0 И (Найти(ВыборкаДокументОснование.ИдентификаторЦепочки, "TMP_") > 0) Тогда	
					 СтруктураРегистраDR_События.Вставить("АктуализироватьИдентификатор"	, Истина);
				КонецЕсли;
				
				ЭКОМ_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);
				
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли; 		
КонецЕсли;

// ВозвратТоваровОтКлиента
Если ТипЗнч(Источник.Ссылка) = Тип(ДокументВозвратТоваровОтКлиента) Тогда
	
	ВыборкаУчастниковВЭДО = ЭКОМ_ОбщегоНазначения.КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента]);
	
	Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0 Тогда
		
		//ИЩЕМ запись в регистре DR_События 
		ЗапросДокументов = Новый Запрос;
		ЗапросДокументов.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	DR_События.Документ КАК Документ
		|ИЗ
		|	РегистрСведений.DR_События КАК DR_События
		|ГДЕ
		|	DR_События.Документ = &Документ
		|	И DR_События.ВидДокумента = &ВидДокумента";
		
		ЗапросДокументов.УстановитьПараметр("Документ", Источник.Ссылка);
		ЗапросДокументов.УстановитьПараметр("ВидДокумента", "ВозвратнаяНакладная_Входящая");
		
		РезультатИдентификаторЦепочки = ЗапросДокументов.Выполнить();
		
		Если РезультатИдентификаторЦепочки.Пустой() Тогда
		
			//ИЩЕМ Документ основание
			ЗапросДокументОснование = Новый Запрос;
			ЗапросДокументОснование.Текст = "ВЫБРАТЬ
											|	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
											|	ВозвратТоваровОтКлиента.ДокументРеализации КАК ДокументРеализации
											|ИЗ
											|	Документ.ВозвратТоваровОтКлиента КАК ВозвратТоваровОтКлиента
											|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_События
											|		ПО ВозвратТоваровОтКлиента.ДокументРеализации = DR_События.Документ
											|			И DR_События.ВидДокумента = ""Накладная_Исходящая""
											|ГДЕ
											|	ВозвратТоваровОтКлиента.Ссылка = &Документ";
			ЗапросДокументОснование.УстановитьПараметр("Документ",	Источник.Ссылка);
			РезультатДокументОснование = ЗапросДокументОснование.Выполнить();
			
			Если НЕ РезультатДокументОснование.Пустой() Тогда //НАЙДЕН Документ основания
				ВыборкаДокументОснование = РезультатДокументОснование.Выбрать();
				ВыборкаДокументОснование.Следующий();
				
				СтруктураРегистраDR_События = Новый Структура;
				СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, ВыборкаДокументОснование.ИдентификаторЦепочки);
				СтруктураРегистраDR_События.Вставить("Документ"					, Источник.Ссылка);
				СтруктураРегистраDR_События.Вставить("ВидДокумента"				, "ВозвратнаяНакладная_Входящая");
				СтруктураРегистраDR_События.Вставить("Идентификатор"			, Строка(Источник.Ссылка.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, Строка(ВыборкаДокументОснование.ДокументРеализации.УникальныйИдентификатор()));
				
				СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
				
				ЭКОМ_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);
				
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли; 	
КонецЕсли;	
