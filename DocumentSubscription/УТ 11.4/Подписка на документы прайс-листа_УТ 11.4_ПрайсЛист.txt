ТипДокументаУстановкаЦенНоменклатуры = "ДокументСсылка.УстановкаЦенНоменклатуры";

Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаУстановкаЦенНоменклатуры) Тогда
            
        Запрос = Новый Запрос;
        Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
                       |	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки
                       |ИЗ
                       |	РегистрСведений.DR_События КАК DR_События
                       |ГДЕ
                       |	DR_События.Документ = &Документ";
        Запрос.УстановитьПараметр("Документ", Источник.Ссылка);
        РезультатЗапроса = Запрос.Выполнить(); 
                                       
        Если РезультатЗапроса.Пустой() Тогда
	        
	        ИдентификаторДокумента = Источник.Ссылка.УникальныйИдентификатор();
	        ИдентификаторЦепочки = "TMP_" + ИдентификаторДокумента;	
	        
	        ЗапросЦепочки = Новый Запрос;
        	ЗапросЦепочки.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
        	                      |	DR_Документ.ИдентификаторЦепочки КАК ИдентификаторЦепочки
        	                      |ИЗ
        	                      |	Документ.DR_Документ.ДополнительныеРеквизиты КАК DR_ДокументДополнительныеРеквизиты
        	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ КАК DR_Документ
        	                      |		ПО (DR_ДокументДополнительныеРеквизиты.Ссылка = DR_Документ.Ссылка)
        	                      |			И (DR_ДокументДополнительныеРеквизиты.Реквизит = ""Документ1С"")
        	                      |ГДЕ
        	                      |	DR_ДокументДополнительныеРеквизиты.Значение = &Документ";
        	ЗапросЦепочки.УстановитьПараметр("Документ", Источник.Ссылка);
        	РезультатЗапросаЦепочки = ЗапросЦепочки.Выполнить(); 
	        
	        Если  РезультатЗапросаЦепочки.Пустой() Тогда
	        	        
	        	СтруктураСобытия = Новый Структура("Документ, ВидДокумента, ИдентификаторЦепочки, Идентификатор, Статус, ДатаЗаписи, АктуализироватьИдентификатор" 
					, Источник.Ссылка, "УстановкаЦенНоменклатуры_Исходящий", ИдентификаторЦепочки, ИдентификаторДокумента, "ГотовКотправке", ТекущаяДата(), Истина); 
	   	        СтруктураЦепочки = Новый Структура("ДатаЗаказа, НомерЗаказа, ИдентификаторЦепочки"
					, Источник.Дата, Источник.Номер, ИдентификаторЦепочки); 

                DR_EDI_ОбщегоНазначения.Записать_DR_События(СтруктураСобытия);
	       		DR_EDI_ОбщегоНазначения.Записать_DR_ЦепочкиДокументов(СтруктураЦепочки); 
	       		
	        Иначе
	            
	            ИдентификаторЦепочки = РезультатЗапросаЦепочки.Выгрузить()[0].ИдентификаторЦепочки;
	            СтруктураСобытия = Новый Структура("Документ, ВидДокумента, ИдентификаторЦепочки, Идентификатор, Статус, ДатаЗаписи" 
					, Источник.Ссылка, "УстановкаЦенНоменклатуры_Исходящий", ИдентификаторЦепочки, ИдентификаторДокумента, "ГотовКотправке", ТекущаяДата()); 
	   	        
                DR_EDI_ОбщегоНазначения.Записать_DR_События(СтруктураСобытия);  

	        КонецЕсли; 
	       	        
        КонецЕсли;                                                                                          
        
КонецЕсли;ТипДокументаУстановкаЦенНоменклатуры = "ДокументСсылка.УстановкаЦенНоменклатуры";

Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаУстановкаЦенНоменклатуры) Тогда
            
        Запрос = Новый Запрос;
        Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
                       |	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки
                       |ИЗ
                       |	РегистрСведений.DR_События КАК DR_События
                       |ГДЕ
                       |	DR_События.Документ = &Документ";
        Запрос.УстановитьПараметр("Документ", Источник.Ссылка);
        РезультатЗапроса = Запрос.Выполнить(); 
                                       
        Если РезультатЗапроса.Пустой() Тогда
	        
	        ИдентификаторДокумента = Источник.Ссылка.УникальныйИдентификатор();
	        ИдентификаторЦепочки = "TMP_" + ИдентификаторДокумента;	
	        
	        ЗапросЦепочки = Новый Запрос;
        	ЗапросЦепочки.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
        	                      |	DR_Документ.ИдентификаторЦепочки КАК ИдентификаторЦепочки
        	                      |ИЗ
        	                      |	Документ.DR_Документ.ДополнительныеРеквизиты КАК DR_ДокументДополнительныеРеквизиты
        	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ КАК DR_Документ
        	                      |		ПО (DR_ДокументДополнительныеРеквизиты.Ссылка = DR_Документ.Ссылка)
        	                      |			И (DR_ДокументДополнительныеРеквизиты.Реквизит = ""Документ1С"")
        	                      |ГДЕ
        	                      |	DR_ДокументДополнительныеРеквизиты.Значение = &Документ";
        	ЗапросЦепочки.УстановитьПараметр("Документ", Источник.Ссылка);
        	РезультатЗапросаЦепочки = ЗапросЦепочки.Выполнить(); 
	        
	        Если  РезультатЗапросаЦепочки.Пустой() Тогда
	        	        
	        	СтруктураСобытия = Новый Структура("Документ, ВидДокумента, ИдентификаторЦепочки, Идентификатор, Статус, ДатаЗаписи, АктуализироватьИдентификатор" 
					, Источник.Ссылка, "УстановкаЦенНоменклатуры_Исходящий", ИдентификаторЦепочки, ИдентификаторДокумента, "ГотовКотправке", ТекущаяДата(), Истина); 
	   	        СтруктураЦепочки = Новый Структура("ДатаЗаказа, НомерЗаказа, ИдентификаторЦепочки"
					, Источник.Дата, Источник.Номер, ИдентификаторЦепочки); 

                DR_EDI_ОбщегоНазначения.Записать_DR_События(СтруктураСобытия);
	       		DR_EDI_ОбщегоНазначения.Записать_DR_ЦепочкиДокументов(СтруктураЦепочки); 
	       		
	        Иначе
	            
	            ИдентификаторЦепочки = РезультатЗапросаЦепочки.Выгрузить()[0].ИдентификаторЦепочки;
	            СтруктураСобытия = Новый Структура("Документ, ВидДокумента, ИдентификаторЦепочки, Идентификатор, Статус, ДатаЗаписи" 
					, Источник.Ссылка, "УстановкаЦенНоменклатуры_Исходящий", ИдентификаторЦепочки, ИдентификаторДокумента, "ГотовКотправке", ТекущаяДата()); 
	   	        
                DR_EDI_ОбщегоНазначения.Записать_DR_События(СтруктураСобытия);  

	        КонецЕсли; 
	       	        
        КонецЕсли;                                                                                          
        
КонецЕсли;