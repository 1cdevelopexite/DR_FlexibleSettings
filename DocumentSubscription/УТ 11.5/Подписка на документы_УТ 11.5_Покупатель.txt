ТипДокументаЗаказа = "ДокументСсылка.ЗаказПоставщику";
ТипДокументаПоступления = "ДокументСсылка.ПриобретениеТоваровУслуг";
ТипДокументаСчетФактуры = "ДокументСсылка.СчетФактураПолученный";
ТипДокументаВозвратПоставщику = "ДокументСсылка.ВозвратТоваровПоставщику";
ТипДокументаКорректировкаПоступления = "ДокументСсылка.КорректировкаПриобретения";

ИмяОрганизации = "Организация";
ИмяКонтрагента = "Контрагент";
//ИмяТочкиДоставки = "Склад";
ИмяТочкиДоставки = "Партнер";
ИмяДатаПоставки = "ЖелаемаяДатаПоступления";
ДатаЗаказа1С = "ДатаПоДаннымКлиента";
НомерЗаказа1С = "НомерПоДаннымКлиента";
НомерВходящегоДокумента = "НомерВходящегоДокумента";
ДатаВходящегоДокумента = "ДатаВходящегоДокумента";
ИмяЗаказа1С = "ЗаказПоставщику";
ОснованиеВозвратаПоставщику = "ДокументПоступления";

// Заказ поставщику
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаЗаказа) Тогда
    
    ВыборкаУчастниковВЭДО = DR_EDI_ОбщегоНазначения.КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента], Источник[ИмяТочкиДоставки]);
    Если ВыборкаУчастниковВЭДО.Количество() > 0 Тогда          
          
        Запрос = Новый Запрос;
        Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
                       |	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки
                       |ИЗ
                       |	РегистрСведений.DR_События КАК DR_События
                       |ГДЕ
                       |	DR_События.Документ = &Документ";
        Запрос.УстановитьПараметр("Документ", Источник.Ссылка);
        РезультатЗапроса = Запрос.Выполнить(); 
                                       
        Если РезультатЗапроса.Пустой() Тогда
	        ИдентификаторДокумента = Источник.Ссылка.УникальныйИдентификатор();
	         
	        СтруктураСобытия = Новый Структура("Документ, ВидДокумента, ИдентификаторЦепочки, Идентификатор, Статус, ДатаЗаписи" , Источник.Ссылка, "Заказ_Исходящий", ИдентификаторДокумента, 
	        	ИдентификаторДокумента, "ГотовКотправке", ТекущаяДата()); 
	        
	        СтруктураЦепочки = Новый Структура("ДатаЗаказа, ИдентификаторЦепочки, ДатаПоставки, НомерЗаказа, Организация, Контрагент, ТочкаДоставки", Источник.Дата, ИдентификаторДокумента,  
	        Источник.ДатаПоступления, Источник.Номер, Источник[ИмяОрганизации], Источник[ИмяКонтрагента], Источник[ИмяТочкиДоставки]); 
	        
	        DR_EDI_ОбщегоНазначения.Записать_DR_События(СтруктураСобытия);
	        DR_EDI_ОбщегоНазначения.Записать_DR_ЦепочкиДокументов(СтруктураЦепочки); 
        КонецЕсли;           
                                                                                
    КонецЕсли;
    
КонецЕсли;

// Поступление
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаПоступления) Тогда
    
    ВыборкаУчастниковВЭДО = DR_EDI_ОбщегоНазначения.КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента], Источник[ИмяТочкиДоставки]);
    Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0 Тогда
        
        Запрос = Новый Запрос;
        Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
                       |	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки
                       |ИЗ
                       |	РегистрСведений.DR_События КАК DR_События
                       |ГДЕ
                       |	DR_События.Документ = &Документ";
        Запрос.УстановитьПараметр("Документ", Источник.Ссылка);
        РезультатЗапроса = Запрос.Выполнить(); 
                                       
        Если РезультатЗапроса.Пустой() Тогда
        
	        ДокументЗаказа = Неопределено;
	        Если ЗначениеЗаполнено(Источник[ИмяЗаказа1С]) Тогда
	            ДокументЗаказа = Источник[ИмяЗаказа1С];
	        КонецЕсли;
	        
	        ЗаписьНайдена = Ложь;
	        НесколькоЦепочек = Ложь;
	        
	        // 1. Ищем по заказу
	        Если ЗначениеЗаполнено(ДокументЗаказа) Тогда
	        	
	        	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	        	               |	Заказ_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
	        	               |	DESADV_События.Идентификатор КАК Идентификатор,
	        	               |	DR_НакладнаяНомер.Ссылка КАК ДокументDESADV
	        	               |ИЗ
	        	               |	РегистрСведений.DR_События КАК Заказ_События
	        	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DESADV_События
	        	               |		ПО (Заказ_События.ИдентификаторЦепочки = DESADV_События.ИдентификаторЦепочки)
	        	               |			И (ВЫРАЗИТЬ(DESADV_События.Документ КАК Документ.DR_Документ).ВидДокумента = ""DESADV_Входящий"")
	        	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК DR_НакладнаяДата
	        	               |		ПО (DR_НакладнаяДата.Ссылка = DESADV_События.Документ)
	        	               |			И (DR_НакладнаяДата.Реквизит = ""ДатаНакладной"")
	        	               |			И (DR_НакладнаяДата.Значение = &НакладнаяДата)
	        	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК DR_НакладнаяНомер
	        	               |		ПО (DR_НакладнаяНомер.Ссылка = DR_НакладнаяДата.Ссылка)
	        	               |			И (DR_НакладнаяНомер.Реквизит = ""DELIVERYNOTENUMBER"")
	        	               |			И (DR_НакладнаяНомер.Значение = &НакладнаяНомер)
	        	               |ГДЕ
	        	               |	Заказ_События.Документ = &Документ";
                
                Запрос.УстановитьПараметр("Документ", ДокументЗаказа);
                Запрос.УстановитьПараметр("НакладнаяДата", Источник[ДатаВходящегоДокумента]);
            	Запрос.УстановитьПараметр("НакладнаяНомер", Источник[НомерВходящегоДокумента]);
        		
        		РезультатЗапроса = Запрос.Выполнить();
        		Если НЕ РезультатЗапроса.Пустой() Тогда
        			
        			ЗаписьНайдена = Истина;
	                Выборка = РезультатЗапроса.Выбрать();
	                Выборка.Следующий();
	                
	                Если ЗначениеЗаполнено(Выборка.ДокументDESADV) И Выборка.ДокументDESADV.ДокументыСвязанные.Количество() = 0 Тогда 
	                    ДокументDESADV = Выборка.ДокументDESADV.ПолучитьОбъект();
	                    НовыйСвязанный = ДокументDESADV.ДокументыСвязанные.Добавить();
	                    НовыйСвязанный.ДокументСвязанный = Источник.Ссылка;
	                    ДокументDESADV.НеВыполнятьКодПриЗаписи = Истина;
	                    ДокументDESADV.Записать();
	                КонецЕсли;
	                
	               	ИдентификаторОснования = ?(ЗначениеЗаполнено(Выборка.Идентификатор),Выборка.Идентификатор,"");
	               	
	               	СтруктураРегистраDR_События = Новый Структура;
					СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, Выборка.ИдентификаторЦепочки);
					СтруктураРегистраDR_События.Вставить("Документ"					, Источник.Ссылка);
					СтруктураРегистраDR_События.Вставить("ВидДокумента"				, "Накладная_Входящая");
					СтруктураРегистраDR_События.Вставить("Идентификатор"			, Строка(Источник.Ссылка.УникальныйИдентификатор()));
					СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, ИдентификаторОснования);
					СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
					
					DR_EDI_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);
	                
            	КонецЕсли;
	            
	        КонецЕсли;
	        
	        // 2. Поиск по дате и номеру десадва
	        Если ЗаписьНайдена = Ложь Тогда
	            
				Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
				               |	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
				               |	DR_События.Идентификатор КАК Идентификатор,
				               |	DR_События.Документ КАК ДокументDESADV
				               |ИЗ
				               |	Документ.DR_Документ КАК DR_Документ
				               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК DR_НакладнаяДата
				               |		ПО (DR_НакладнаяДата.Ссылка = DR_Документ.Ссылка)
				               |			И (DR_НакладнаяДата.Реквизит = ""ДатаНакладной"")
				               |			И (DR_НакладнаяДата.Значение = &НакладнаяДата)
				               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК DR_НакладнаяНомер
				               |		ПО (DR_НакладнаяНомер.Ссылка = DR_НакладнаяДата.Ссылка)
				               |			И (DR_НакладнаяНомер.Реквизит = ""DELIVERYNOTENUMBER"")
				               |			И (DR_НакладнаяНомер.Значение = &НакладнаяНомер)
				               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_События
				               |		ПО (DR_Документ.Ссылка = DR_События.Документ)
				               |ГДЕ
				               |	DR_Документ.ВидДокумента = ""DESADV_Входящий""";
                
                Запрос.УстановитьПараметр("НакладнаяДата", Источник[ДатаВходящегоДокумента]);
            	Запрос.УстановитьПараметр("НакладнаяНомер", Источник[НомерВходящегоДокумента]);
        		
        		РезультатЗапроса = Запрос.Выполнить();
        		Если НЕ РезультатЗапроса.Пустой() Тогда
        			
	                Выборка = РезультатЗапроса.Выбрать();
	                Выборка.Следующий();
	                
	                Если ЗначениеЗаполнено(Выборка.ДокументDESADV) И Выборка.ДокументDESADV.ДокументыСвязанные.Количество() = 0 Тогда 
	                    ДокументDESADV = Выборка.ДокументDESADV.ПолучитьОбъект();
	                    НовыйСвязанный = ДокументDESADV.ДокументыСвязанные.Добавить();
	                    НовыйСвязанный.ДокументСвязанный = Источник.Ссылка;
	                    ДокументDESADV.НеВыполнятьКодПриЗаписи = Истина;
	                    ДокументDESADV.Записать();
	                КонецЕсли;
	                
	               	ИдентификаторОснования = ?(ЗначениеЗаполнено(Выборка.Идентификатор),Выборка.Идентификатор,"");
	               	
	               	СтруктураРегистраDR_События = Новый Структура;
					СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, Выборка.ИдентификаторЦепочки);
					СтруктураРегистраDR_События.Вставить("Документ"					, Источник.Ссылка);
					СтруктураРегистраDR_События.Вставить("ВидДокумента"				, "Накладная_Входящая");
					СтруктураРегистраDR_События.Вставить("Идентификатор"			, Строка(Источник.Ссылка.УникальныйИдентификатор()));
					СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, ИдентификаторОснования);
					СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
					
					DR_EDI_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);
	                
            	Иначе // ЮЗД без EDI
					
					ИдентификаторЦепочки = Строка(Новый УникальныйИдентификатор);
					ИдентификаторЦепочки = СтрЗаменить(ИдентификаторЦепочки, "-", "");
					ИдентификаторЦепочки = "TMP_" + ИдентификаторЦепочки;
					
					//Регистр DR_События
					СтруктураРегистраDR_События = Новый Структура;
					СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, ИдентификаторЦепочки);
					СтруктураРегистраDR_События.Вставить("Документ"					, Источник.Ссылка);
					СтруктураРегистраDR_События.Вставить("ВидДокумента"				, "Накладная_Входящая");
					СтруктураРегистраDR_События.Вставить("Идентификатор"			, Строка(Источник.Ссылка.УникальныйИдентификатор()));
					СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
					
					DR_EDI_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);
					
					//Регистр DR_ЦепочкиДокументов
					СтруктураРегистраDR_ЦепочкиДокументов = Новый Структура;
					СтруктураРегистраDR_ЦепочкиДокументов.Вставить("ИдентификаторЦепочки"	, ИдентификаторЦепочки);
					СтруктураРегистраDR_ЦепочкиДокументов.Вставить("ДатаПоставки"			, Источник.Дата);
					СтруктураРегистраDR_ЦепочкиДокументов.Вставить("Организация"			, Источник.Организация);
					СтруктураРегистраDR_ЦепочкиДокументов.Вставить("Контрагент"				, Источник.Контрагент);
					СтруктураРегистраDR_ЦепочкиДокументов.Вставить("ТочкаДоставки"			, Источник.Партнер);
					СтруктураРегистраDR_ЦепочкиДокументов.Вставить("ДатаЗаказа"				, Источник.Дата);
					
					DR_EDI_ОбщегоНазначения.Записать_DR_ЦепочкиДокументов(СтруктураРегистраDR_ЦепочкиДокументов);
					
				КонецЕсли;
	        
	        КонецЕсли; 
	        
        КонецЕсли;
         
    КонецЕсли;
    
КонецЕсли;

// СчетФактураПолученный
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаСчетФактуры) Тогда

	Запрос = Новый Запрос;
    Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
                   |	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки
                   |ИЗ
                   |	РегистрСведений.DR_События КАК DR_События
                   |ГДЕ
                   |	DR_События.Документ = &Документ";
                   
    Запрос.УстановитьПараметр("Документ", Источник.Ссылка);
    РезультатЗапроса = Запрос.Выполнить(); 
                                   
    Если РезультатЗапроса.Пустой() Тогда
		
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
		               |	DR_События.Идентификатор КАК Идентификатор
		               |ИЗ
		               |	(ВЫБРАТЬ
		               |		СчетФактураПолученныйДокументыОснования.ДокументОснование КАК ДокументОснование
		               |	ИЗ
		               |		Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
		               |	ГДЕ
		               |		СчетФактураПолученныйДокументыОснования.Ссылка = &Документ
		               |		И СчетФактураПолученныйДокументыОснования.ДокументОснование ССЫЛКА Документ.ПриобретениеТоваровУслуг) КАК ВложенныйЗапрос
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_События
		               |		ПО (ВложенныйЗапрос.ДокументОснование = DR_События.Документ)";
        
        РезультатЗапроса = Запрос.Выполнить();
        Если НЕ РезультатЗапроса.Пустой() Тогда
	        Выборка = РезультатЗапроса.Выбрать();
		    Выборка.Следующий();
		    
		    ИдентификаторОснования = ?(ЗначениеЗаполнено(Выборка.Идентификатор),Выборка.Идентификатор,"");
	               	
           	СтруктураРегистраDR_События = Новый Структура;
			СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, Выборка.ИдентификаторЦепочки);
			СтруктураРегистраDR_События.Вставить("Документ"					, Источник.Ссылка);
			СтруктураРегистраDR_События.Вставить("ВидДокумента"				, "СчетФактура_Входящий");
			СтруктураРегистраDR_События.Вставить("Идентификатор"			, Строка(Источник.Ссылка.УникальныйИдентификатор()));
			СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, ИдентификаторОснования);
			СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
			
			DR_EDI_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);
		    
		КонецЕсли;    
        
    КонецЕсли;
             
КонецЕсли;

// ВозвратТоваровПоставщику
Если ТипЗнч(Источник.Ссылка) = Тип(ТипДокументаВозвратПоставщику) Тогда
	
	//проверка документа основания и наличия соответствующего реквизита у ВозвратТоваровПоставщику
	Если Метаданные.Документы.ВозвратТоваровПоставщику.Реквизиты.Найти(ОснованиеВозвратаПоставщику) <> Неопределено 
		И ЗначениеЗаполнено(Источник[ОснованиеВозвратаПоставщику]) Тогда
	
		Запрос = Новый Запрос;
	    Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	                   |	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
		               |	DR_События.Идентификатор КАК Идентификатор
	                   |ИЗ
	                   |	РегистрСведений.DR_События КАК DR_События
	                   |ГДЕ
	                   |	DR_События.Документ = &Документ";
	                   
	    Запрос.УстановитьПараметр("Документ", Источник.Ссылка);
	    РезультатЗапроса = Запрос.Выполнить(); 
	                                   
	    Если РезультатЗапроса.Пустой() Тогда
	        //Ищем по основанию
	        Запрос.УстановитьПараметр("Документ", Источник[ОснованиеВозвратаПоставщику]);
			               
	        РезультатЗапроса = Запрос.Выполнить();
	        Если НЕ РезультатЗапроса.Пустой() Тогда
		        Выборка = РезультатЗапроса.Выбрать();
			    Выборка.Следующий();
			    
			    ИдентификаторОснования = ?(ЗначениеЗаполнено(Выборка.Идентификатор),Выборка.Идентификатор,"");
		               	
	           	СтруктураРегистраDR_События = Новый Структура;
				СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, Выборка.ИдентификаторЦепочки);
				СтруктураРегистраDR_События.Вставить("Документ"					, Источник.Ссылка);
				СтруктураРегистраDR_События.Вставить("ВидДокумента"				, "КорректировочнаяНакладная_Входящая");
				СтруктураРегистраDR_События.Вставить("Идентификатор"			, Строка(Источник.Ссылка.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, ИдентификаторОснования);
				СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
				
				DR_EDI_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);
			    
			КонецЕсли;
		
	    КонецЕсли;
		  		
	КонецЕсли;//проверка наличия реквизита и его заполненности
	
КонецЕсли;//проверка типа

//КорректировкаПриобретения
Если ТипЗнч(Источник) = Тип(ТипДокументаКорректировкаПоступления) Тогда
    
    ВыборкаУчастниковВЭДО = DR_EDI_ОбщегоНазначения.КонтрагентУчаствуетВЭДО(Источник[ИмяОрганизации], Источник[ИмяКонтрагента], Источник[ИмяТочкиДоставки]);
    Если НЕ ВыборкаУчастниковВЭДО.Количество() = 0 Тогда
       
        Запрос = Новый Запрос;
        Запрос.Текст = "ВЫБРАТЬ
                       |	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
                       |	DR_События.Идентификатор КАК Идентификатор
                       |ИЗ
                       |	РегистрСведений.DR_События КАК DR_События
                       |ГДЕ
                       |	DR_События.Документ = &Документ
                       |	И DR_События.ВидДокумента = ""КорректировочнаяНакладная_входящая""";
        
        Запрос.УстановитьПараметр("Документ",		Источник);
        РезультатЗапроса = Запрос.Выполнить();                   
                                       
        Если РезультатЗапроса.Пустой() Тогда
             
            //Ищем по основанию, документ основание должен быть в цепочке
	        Запрос.УстановитьПараметр("Документ",		Источник.ДокументОснование);
	        Запрос.УстановитьПараметр("ВидыДокументов", "Накладная_входящая");
	        РезультатЗапроса = Запрос.Выполнить();
            
            Если НЕ РезультатЗапроса.Пустой() Тогда
		        
		        Выборка = РезультатЗапроса.Выбрать(); 
			    Выборка.Следующий();
                                              
                //добавим новую запись
                ИдентификаторОснования = ?(ЗначениеЗаполнено(Выборка.Идентификатор), Выборка.Идентификатор,"");
		               	
	           	СтруктураРегистраDR_События = Новый Структура;
				СтруктураРегистраDR_События.Вставить("ИдентификаторЦепочки"		, Выборка.ИдентификаторЦепочки);
				СтруктураРегистраDR_События.Вставить("Документ"					, Источник);
				СтруктураРегистраDR_События.Вставить("ВидДокумента"				, "КорректировочнаяНакладная_Входящая");
				СтруктураРегистраDR_События.Вставить("Идентификатор"			, Строка(Источник.УникальныйИдентификатор()));
				СтруктураРегистраDR_События.Вставить("ИдентификаторОснования"	, ИдентификаторОснования);
				СтруктураРегистраDR_События.Вставить("ДатаЗаписи"				, ТекущаяДата());
				
				DR_EDI_ОбщегоНазначения.Записать_DR_События(СтруктураРегистраDR_События);
                
            КонецЕсли;
            
        КонецЕсли;
        
     КонецЕсли;     
          
КонецЕсли;