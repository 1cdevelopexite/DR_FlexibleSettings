<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ТипТранзакции</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Данные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ИмяКнопки</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Регламент</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Исходящий DESSCC</Value>
		<Value xsi:type="xs:string">#Область ШАПКА_Заполнение
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВЫРАЗИТЬ(DR_События.Документ КАК Документ.РеализацияТоваровУслуг) КАК Источник,
	|	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
	|	DR_События.ИдентификаторОснования КАК ИдентификаторОснования
	|ПОМЕСТИТЬ DR_СобытияИсточник
	|ИЗ
	|	РегистрСведений.DR_События КАК DR_События
	|ГДЕ
	|	DR_События.Документ В(&amp;Документ)
	|	И DR_События.ВидДокумента = ""Накладная_Исходящая""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	DR_СобытияИсточник.Источник КАК Источник,
	|	DR_СобытияИсточник.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
	|	DR_СобытияИсточник.ИдентификаторОснования КАК ИдентификаторОснования,
	|	ВЫБОР
	|		КОГДА DR_ДокументDESSCC.Ссылка ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьПалеты,
	|	DR_ДокументDESSCC.Ссылка КАК DESSCC
	|ПОМЕСТИТЬ DR_ДокументDESSCC
	|ИЗ
	|	DR_СобытияИсточник КАК DR_СобытияИсточник
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ КАК DR_ДокументDESSCC
	|		ПО DR_СобытияИсточник.ИдентификаторЦепочки = DR_ДокументDESSCC.ИдентификаторЦепочки
	|ГДЕ
	|	DR_ДокументDESSCC.ВидДокумента = ""DESSCC_Исходящий""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	DR_ДокументDESSCC.Источник КАК Источник,
	|	DR_ДокументDESSCC.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
	|	DR_ДокументDESSCC.ИдентификаторОснования КАК ИдентификаторОснования,
	|	DR_ДокументDESSCC.DESSCC КАК DESSCC,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(DR_События_ORDER.Документ КАК Документ.DR_Документ), ЗНАЧЕНИЕ(Документ.DR_Документ.ПустаяСсылка)) КАК ORDER
	|ПОМЕСТИТЬ DR_ДокументORDER
	|ИЗ
	|	DR_ДокументDESSCC КАК DR_ДокументDESSCC
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_События_Заказ
	|		ПО (DR_ДокументDESSCC.ЕстьПалеты)
	|			И DR_ДокументDESSCC.ИдентификаторЦепочки = DR_События_Заказ.ИдентификаторЦепочки
	|			И (DR_События_Заказ.ВидДокумента = ""Заказ_Входящий"")
	|			И DR_ДокументDESSCC.ИдентификаторОснования = DR_События_Заказ.Идентификатор
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_События_ORDER
	|		ПО DR_ДокументDESSCC.ИдентификаторЦепочки = DR_События_ORDER.ИдентификаторЦепочки
	|			И (DR_События_ORDER.ВидДокумента = ""ORDER_Входящий"")
	|			И (DR_События_Заказ.ИдентификаторОснования = DR_События_ORDER.Идентификатор)
	|			И (DR_События_ORDER.Статус = ""Обработан"")
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	DR_ДокументORDER.Источник КАК Источник,
	|	DR_ДокументORDER.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
	|	DR_ДокументORDER.ИдентификаторОснования КАК ИдентификаторОснования,
	|	DR_ДокументORDER.ORDER КАК ORDER,
	|	DR_ДокументORDER.DESSCC КАК DESSCC,
	|	ВЫРАЗИТЬ(ORDERNUMBER.Значение КАК СТРОКА(25)) КАК ORDERNUMBER,
	|	ВЫРАЗИТЬ(ORDERDATE.Значение КАК СТРОКА(10)) КАК ORDERDATE,
	|	ВЫРАЗИТЬ(CAMPAIGNNUMBER.Значение КАК СТРОКА(250)) КАК CAMPAIGNNUMBER,
	|	ВЫРАЗИТЬ(DELIVERYDATE.Значение КАК СТРОКА(10)) КАК DELIVERYDATE,
	|	ВЫРАЗИТЬ(DELIVERYTIME.Значение КАК СТРОКА(5)) КАК DELIVERYTIME,
	|	ВЫРАЗИТЬ(FRESH.Значение КАК СТРОКА(1)) КАК FRESH,
	|	ВЫРАЗИТЬ(INFO.Значение КАК СТРОКА(250)) КАК INFO,
	|	ВЫРАЗИТЬ(SENDER.Значение КАК СТРОКА(13)) КАК SENDER,
	|	POSITION.ХранилищеЗначения КАК POSITION
	|ПОМЕСТИТЬ ДопРеквизитыORDER
	|ИЗ
	|	DR_ДокументORDER КАК DR_ДокументORDER
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК ORDERNUMBER
	|		ПО DR_ДокументORDER.ORDER = ORDERNUMBER.Ссылка
	|			И (ORDERNUMBER.Реквизит = ""NUMBER"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК ORDERDATE
	|		ПО DR_ДокументORDER.ORDER = ORDERDATE.Ссылка
	|			И (ORDERDATE.Реквизит = ""DATE"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК CAMPAIGNNUMBER
	|		ПО DR_ДокументORDER.ORDER = CAMPAIGNNUMBER.Ссылка
	|			И (CAMPAIGNNUMBER.Реквизит = ""CAMPAIGNNUMBER"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК DELIVERYDATE
	|		ПО DR_ДокументORDER.ORDER = DELIVERYDATE.Ссылка
	|			И (DELIVERYDATE.Реквизит = ""DELIVERYDATE"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК DELIVERYTIME
	|		ПО DR_ДокументORDER.ORDER = DELIVERYTIME.Ссылка
	|			И (DELIVERYTIME.Реквизит = ""DELIVERYTIME"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК FRESH
	|		ПО DR_ДокументORDER.ORDER = FRESH.Ссылка
	|			И (FRESH.Реквизит = ""FRESH"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК INFO
	|		ПО DR_ДокументORDER.ORDER = INFO.Ссылка
	|			И (INFO.Реквизит = ""INFO"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК SENDER
	|		ПО DR_ДокументORDER.ORDER = SENDER.Ссылка
	|			И (SENDER.Реквизит = ""SENDER"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК POSITION
	|		ПО DR_ДокументORDER.ORDER = POSITION.Ссылка
	|			И (POSITION.Реквизит = ""POSITION"")
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДопРеквизитыORDER.Источник КАК Ссылка,
	|	РеализацияТоваровУслуг.Дата КАК Дата,
	|	РеализацияТоваровУслуг.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	РеализацияТоваровУслуг.Организация КАК Организация,
	|	ДопРеквизитыORDER.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
	|	ДопРеквизитыORDER.ИдентификаторОснования КАК ИдентификаторОснования,
	|	ДопРеквизитыORDER.ORDER КАК ORDER,
	|	ДопРеквизитыORDER.DESSCC КАК DESSCC,
	|	ДопРеквизитыORDER.ORDERNUMBER КАК ORDERNUMBER,
	|	ДопРеквизитыORDER.ORDERDATE КАК ORDERDATE,
	|	ДопРеквизитыORDER.CAMPAIGNNUMBER КАК CAMPAIGNNUMBER,
	|	ДопРеквизитыORDER.DELIVERYDATE КАК DELIVERYDATE,
	|	ДопРеквизитыORDER.DELIVERYTIME КАК DELIVERYTIME,
	|	ДопРеквизитыORDER.FRESH КАК FRESH,
	|	ДопРеквизитыORDER.INFO КАК INFO,
	|	ДопРеквизитыORDER.POSITION КАК POSITION,
	|	GLN_Контрагент.Контрагент_ФорматЭСФ КАК ФорматУПД,
	|	GLN_Контрагент.GLN КАК BUYER,
	|	GLN_Организация.GLN КАК SUPPLIER,
	|	GLN_Организация.GLN КАК SENDER,
	|	ДопРеквизитыORDER.SENDER КАК RECIPIENT,
	|	GLN_ТочкиДоставки.GLN КАК DELIVERYPLACE,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(35)) КАК NUMBER,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(10)) КАК DATE,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(35)) КАК DELIVERYNOTENUMBER,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(10)) КАК DELIVERYNOTEDATE,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(35)) КАК TTNNUMBER,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(35)) КАК UPDNUMBER,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(10)) КАК UPDDATE,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(70)) КАК TRANSPORTMARK,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(16)) КАК TRANSPORTERPHONE,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(70)) КАК TRANSPORTID,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(70)) КАК TRANSPORTERNAME,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(70)) КАК TRAILERNUMBER,
	|	""30"" КАК TRANSPORTTYPE,
	|	""31"" КАК TRANSPORTERTYPE,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(300)) КАК EDIMESSAGE,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(20)) КАК EDIINTERCHANGEID,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(300)) КАК ФайлИмя,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(300)) КАК Идентификатор,
	|	""Отправлен"" КАК Статус,
	|	""DESSCC"" КАК ВидДокумента
	|ИЗ
	|	ДопРеквизитыORDER КАК ДопРеквизитыORDER
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО ДопРеквизитыORDER.Источник = РеализацияТоваровУслуг.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_GLN КАК GLN_Контрагент
	|		ПО (РеализацияТоваровУслуг.Контрагент = GLN_Контрагент.Объект)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_GLN КАК GLN_Организация
	|		ПО (РеализацияТоваровУслуг.Организация = GLN_Организация.Объект)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_ТочкиДоставки КАК GLN_ТочкиДоставки
	|		ПО (РеализацияТоваровУслуг.ДоговорКонтрагента = GLN_ТочкиДоставки.Объект)";
	
	
	Запрос.УстановитьПараметр("Документ", Источник);
	
	РезультатЗапроса = Запрос.Выполнить(); 
	Результат = РезультатЗапроса.Выгрузить();
	
	EDIINTERCHANGEID = 0;
	
	СтрокиДляУдаления 	= Новый Массив;
	ДокументРеализации  = Неопределено;
	
	ДатуВСтроку = Новый Соответствие;
	ДатуВСтроку.Вставить("DATE"				, "Строка.Дата");
	ДатуВСтроку.Вставить("DELIVERYNOTEDATE"	, "Строка.Дата");
	ДатуВСтроку.Вставить("UPDDATE"			, "Строка.Дата");
	
	КвалификаторСтроки = Новый КвалификаторыСтроки(250,ДопустимаяДлина.Переменная);
	
	ДанныеТЧНоменклатурORDER = Новый ТаблицаЗначений;
	ДанныеТЧНоменклатурORDER.Колонки.Добавить("Накладная"				, Новый ОписаниеТипов("ДокументСсылка.РеализацияТоваровУслуг"));
	ДанныеТЧНоменклатурORDER.Колонки.Добавить("СуммаВключаетНДС"		, Новый ОписаниеТипов("Булево"));
	ДанныеТЧНоменклатурORDER.Колонки.Добавить("Номенклатура"			, Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ДанныеТЧНоменклатурORDER.Колонки.Добавить("DELIVEREDUNIT"			, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
	ДанныеТЧНоменклатурORDER.Колонки.Добавить("КоличествоЗаказанное"	, Новый ОписаниеТипов("Число"));
	ДанныеТЧНоменклатурORDER.Колонки.Добавить("КоличествоВУпаковке"		, Новый ОписаниеТипов("Число"));
	ДанныеТЧНоменклатурORDER.Колонки.Добавить("DESCRIPTION"				, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
	ДанныеТЧНоменклатурORDER.Колонки.Добавить("PRODUCT"					, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
	ДанныеТЧНоменклатурORDER.Колонки.Добавить("PRODUCTIDBUYER"			, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
	ДанныеТЧНоменклатурORDER.Колонки.Добавить("PRODUCTIDSUPPLIER"		, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
	ДанныеТЧНоменклатурORDER.Колонки.Добавить("CALIBRE"					, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
	ДанныеТЧНоменклатурORDER.Колонки.Добавить("ХЗ_PACKING"				, Новый ОписаниеТипов("ХранилищеЗначения"));
	ДанныеТЧНоменклатурORDER.Колонки.Добавить("ФорматУПД"				, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
	
	ПараметрыОтбора = Новый ТаблицаЗначений;
	
	ПараметрыОтбора.Колонки.Добавить("ДокументСсылка", Новый ОписаниеТипов("ДокументСсылка.РеализацияТоваровУслуг"));
	ПараметрыОтбора.Колонки.Добавить("ИдентификаторЦепочки", Новый ОписаниеТипов("Строка", КвалификаторСтроки));
	
	Для Каждого Строка Из Результат Цикл 
		
		POSITION = Строка.POSITION.Получить(); 
		
		Для Каждого СтрокаНоменклатуры Из POSITION Цикл
			
			НоваяСтрокаНоменклатуры = ДанныеТЧНоменклатурORDER.Добавить();
			
			ЗаполнитьЗначенияСвойств(НоваяСтрокаНоменклатуры, СтрокаНоменклатуры); 
			
			ЗаполнитьЗначенияСвойств(НоваяСтрокаНоменклатуры, Строка);
			
			НоваяСтрокаНоменклатуры.Накладная = Строка.Ссылка;
			
			Если СтрокаНоменклатуры.Свойство("PACKING") Тогда 
				НоваяСтрокаНоменклатуры.ХЗ_PACKING = Новый ХранилищеЗначения(СтрокаНоменклатуры.PACKING);
			КонецЕсли;
			
			НоваяСтрокаНоменклатуры.КоличествоЗаказанное = СтрокаНоменклатуры.ORDEREDQUANTITY;
			
			Если СтрокаНоменклатуры.Свойство("QUANTITYOFCUINTU") Тогда 
				НоваяСтрокаНоменклатуры.КоличествоВУпаковке = СтрокаНоменклатуры.QUANTITYOFCUINTU;
			КонецЕсли;
			
			Если СтрокаНоменклатуры.Свойство("ORDERUNIT") Тогда
				НоваяСтрокаНоменклатуры.DELIVEREDUNIT = СтрокаНоменклатуры.ORDERUNIT;
			КонецЕсли;
			
		КонецЦикла;
		
		Если ДокументРеализации = Строка.Ссылка Тогда
			СтрокиДляУдаления.Добавить(Строка);
			Продолжить;
		КонецЕсли;
		
		ДокументРеализации = Строка.Ссылка;
		
		NUMBER = Эком_ПолучитьНомерНаПечать(ДокументРеализации, Истина, Ложь); //второй параметр убирает префикс, третий параметр убирает лидирующие нули.
		
		Строка.NUMBER 				= NUMBER;
		Строка.DELIVERYNOTENUMBER 	= NUMBER;
		Строка.TTNNUMBER	 		= NUMBER;
		
		// Преобразование даты в строку и заполнение значения.
		Для Каждого ЗаписьДатуВСтроку Из ДатуВСтроку Цикл
			Строка[ЗаписьДатуВСтроку.Ключ] = Формат(Вычислить(ЗаписьДатуВСтроку.Значение), "ДФ=yyyy-MM-dd");
		КонецЦикла;
		
		EDIINTERCHANGEID = НовыйНомерТранзакции(EDIINTERCHANGEID);
		Строка.EDIINTERCHANGEID = Формат(EDIINTERCHANGEID, "ЧГ=0");
		
		// EDIMESSAGE.
		ГСЧ               = Новый ГенераторСлучайныхЧисел;
		СлучЧисло         = ГСЧ.СлучайноеЧисло(100, 999);
		Строка.EDIMESSAGE = Формат(ТекущаяДата(), "ДФ=ггггММддЧЧммсс000") + СлучЧисло + "-OUT-" + Строка.EDIINTERCHANGEID;
		
		Строка.ФайлИмя       = Строка.ВидДокумента + "_" + Строка.EDIMESSAGE + ".xml";
		Строка.Идентификатор = Строка.ВидДокумента + "_" + Строка.EDIMESSAGE;
		
		НоваяСтрока = ПараметрыОтбора.Добавить();
		НоваяСтрока.ДокументСсылка = Строка.Ссылка;
		НоваяСтрока.ИдентификаторЦепочки = Строка.ИдентификаторЦепочки;
		
	КонецЦикла;
	
	Для Каждого Строка Из СтрокиДляУдаления Цикл
		Результат.Удалить(Строка);
	КонецЦикла;
	
	#КонецОбласти 
	
	#Область ТАБЛИЦА_Заполнение 
	
	МенеджерВременныхТаблиц = СформироватьВременнуюТаблицуДанныеПалет(ПараметрыОтбора);
	
	ЗапросНоменклатур = Новый Запрос;
	ЗапросНоменклатур.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросНоменклатур.Текст = 
	"ВЫБРАТЬ
	|	ДанныеТЧНоменклатурORDER.Накладная КАК Накладная,
	|	ДанныеТЧНоменклатурORDER.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ДанныеТЧНоменклатурORDER.Номенклатура КАК Номенклатура,
	|	ДанныеТЧНоменклатурORDER.DELIVEREDUNIT КАК DELIVEREDUNIT,
	|	ДанныеТЧНоменклатурORDER.КоличествоЗаказанное КАК КоличествоЗаказанное,
	|	ДанныеТЧНоменклатурORDER.КоличествоВУпаковке КАК КоличествоВУпаковке,
	|	ДанныеТЧНоменклатурORDER.DESCRIPTION КАК DESCRIPTION,
	|	ДанныеТЧНоменклатурORDER.PRODUCT КАК PRODUCT,
	|	ДанныеТЧНоменклатурORDER.PRODUCTIDBUYER КАК PRODUCTIDBUYER,
	|	ДанныеТЧНоменклатурORDER.PRODUCTIDSUPPLIER КАК PRODUCTIDSUPPLIER,
	|	ДанныеТЧНоменклатурORDER.CALIBRE КАК CALIBRE,
	|	ДанныеТЧНоменклатурORDER.ХЗ_PACKING КАК ХЗ_PACKING,
	|	ДанныеТЧНоменклатурORDER.ФорматУПД КАК ФорматУПД
	|ПОМЕСТИТЬ ТаблицаORDER
	|ИЗ
	|	&amp;ДанныеТЧНоменклатурORDER КАК ДанныеТЧНоменклатурORDER
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтДанныеПалет.Документ КАК Документ,
	|	ВтДанныеПалет.Номенклатура КАК Номенклатура,
	|	ВтДанныеПалет.НомерПалета КАК НомерПалета,
	|	ВтДанныеПалет.НомерСтроки КАК НомерСтроки,
	|	ВтДанныеПалет.SSCC КАК SSCC,
	|	ВтДанныеПалет.ВесБрутто КАК ВесБрутто,
	|	ВтДанныеПалет.ВесНетто КАК ВесНетто,
	|	ВтДанныеПалет.ВесНеттоШтуки КАК ВесНеттоШтуки,
	|	ВтДанныеПалет.ВесБруттоШтуки КАК ВесБруттоШтуки,
	|	ВтДанныеПалет.Высота КАК Высота,
	|	ВтДанныеПалет.Европалета КАК Европалета,
	|	ВтДанныеПалет.Единица_Измерения КАК Единица_Измерения,
	|	ВтДанныеПалет.Ключ_Строки КАК Ключ_Строки,
	|	ВтДанныеПалет.Количество КАК Количество,
	|	ВтДанныеПалет.МестоДоставкиУпаковки КАК МестоДоставкиУпаковки,
	|	ВтДанныеПалет.Объем КАК Объем,
	|	ВтДанныеПалет.ТемператураХранения КАК ТемператураХранения,
	|	ВтДанныеПалет.СрокХраненияВДнях КАК СрокХраненияВДнях,
	|	ВтДанныеПалет.ЗаводПроизводитель КАК ЗаводПроизводитель,
	|	ВтДанныеПалет.ДатаПроизводства КАК ДатаПроизводства,
	|	ВтДанныеПалет.ДатаОкончанияСрокаГодности КАК ДатаОкончанияСрокаГодности
	|ПОМЕСТИТЬ ВТ_ДанныеПалет
	|ИЗ
	|	ВтДанныеПалет КАК ВтДанныеПалет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеПалет.НомерПалета КАК НомерПалета,
	|	ВТ_ДанныеПалет.НомерСтроки КАК НомерСтроки,
	|	ВТ_ДанныеПалет.Документ КАК Документ,
	|	ВТ_ДанныеПалет.SSCC КАК SSCC,
	|	ВТ_ДанныеПалет.Номенклатура КАК Номенклатура,
	|	ВТ_ДанныеПалет.ВесБрутто КАК ВесБрутто,
	|	ВТ_ДанныеПалет.ВесНетто КАК ВесНетто,
	|	ВТ_ДанныеПалет.ВесНеттоШтуки КАК ВесНеттоШтуки,
	|	ВТ_ДанныеПалет.ВесБруттоШтуки КАК ВесБруттоШтуки,
	|	ВЫБОР
	|		КОГДА ВТ_ДанныеПалет.Европалета = ИСТИНА
	|			ТОГДА ""1""
	|		ИНАЧЕ ""0""
	|	КОНЕЦ КАК EUROPALLET,
	|	ВТ_ДанныеПалет.Единица_Измерения КАК Единица_Измерения,
	|	ВТ_ДанныеПалет.Ключ_Строки КАК Ключ_Строки,
	|	ВТ_ДанныеПалет.Количество КАК Количество,
	|	ВТ_ДанныеПалет.МестоДоставкиУпаковки КАК МестоДоставкиУпаковки,
	|	ВТ_ДанныеПалет.Объем КАК Объем,
	|	ВТ_ДанныеПалет.ТемператураХранения КАК ТемператураХранения,
	|	ВТ_ДанныеПалет.СрокХраненияВДнях КАК СрокХраненияВДнях,
	|	ВТ_ДанныеПалет.ЗаводПроизводитель КАК ЗаводПроизводитель,
	|	ВТ_ДанныеПалет.ДатаПроизводства КАК ДатаПроизводства,
	|	ВТ_ДанныеПалет.ДатаОкончанияСрокаГодности КАК ДатаОкончанияСрокаГодности,
	|	ВТ_ДанныеПалет.Высота КАК Высота,
	|	ТаблицаORDER.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ТаблицаORDER.КоличествоЗаказанное КАК КоличествоЗаказанное,
	|	ТаблицаORDER.КоличествоВУпаковке КАК КоличествоВУпаковке,
	|	ТаблицаORDER.DELIVEREDUNIT КАК DELIVEREDUNIT,
	|	ТаблицаORDER.DESCRIPTION КАК DESCRIPTION,
	|	ТаблицаORDER.PRODUCT КАК PRODUCT,
	|	ТаблицаORDER.PRODUCTIDBUYER КАК PRODUCTIDBUYER,
	|	ТаблицаORDER.PRODUCTIDSUPPLIER КАК PRODUCTIDSUPPLIER,
	|	ТаблицаORDER.CALIBRE КАК CALIBRE,
	|	ТаблицаORDER.ХЗ_PACKING КАК ХЗ_PACKING,
	|	ТаблицаORDER.ФорматУПД КАК ФорматУПД
	|ПОМЕСТИТЬ ВТ_Основная
	|ИЗ
	|	ВТ_ДанныеПалет КАК ВТ_ДанныеПалет
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаORDER КАК ТаблицаORDER
	|		ПО ВТ_ДанныеПалет.Документ = ТаблицаORDER.Накладная
	|			И ВТ_ДанныеПалет.Номенклатура = ТаблицаORDER.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Основная.Документ КАК Документ,
	|	ВТ_Основная.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ВТ_Основная.СуммаВключаетНДС
	|			ТОГДА ВЫРАЗИТЬ((ТаблицаТовары.Сумма - ТаблицаТовары.СуммаНДС) / ТаблицаТовары.Количество КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ ТаблицаТовары.Цена
	|	КОНЕЦ КАК ЦенаБезНДС,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ВТ_Основная.НомерПалета КАК НомерПалета,
	|	ВТ_Основная.НомерСтроки КАК НомерСтроки,
	|	ВТ_Основная.SSCC КАК SSCC,
	|	ВТ_Основная.ВесБрутто КАК ВесБрутто,
	|	ВТ_Основная.ВесНетто КАК ВесНетто,
	|	ВТ_Основная.ВесНеттоШтуки КАК ВесНеттоШтуки,
	|	ВТ_Основная.ВесБруттоШтуки КАК ВесБруттоШтуки,
	|	ВТ_Основная.EUROPALLET КАК EUROPALLET,
	|	ВТ_Основная.Единица_Измерения КАК Единица_Измерения,
	|	ВТ_Основная.Ключ_Строки КАК Ключ_Строки,
	|	ВТ_Основная.Количество КАК Количество,
	|	ВТ_Основная.МестоДоставкиУпаковки КАК МестоДоставкиУпаковки,
	|	ВТ_Основная.Объем КАК Объем,
	|	ВТ_Основная.ТемператураХранения КАК ТемператураХранения,
	|	ВТ_Основная.СрокХраненияВДнях КАК СрокХраненияВДнях,
	|	ВТ_Основная.ЗаводПроизводитель КАК ЗаводПроизводитель,
	|	ВТ_Основная.ДатаПроизводства КАК ДатаПроизводства,
	|	ВТ_Основная.ДатаОкончанияСрокаГодности КАК ДатаОкончанияСрокаГодности,
	|	ВТ_Основная.Высота КАК Высота,
	|	ВТ_Основная.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ВТ_Основная.КоличествоЗаказанное КАК КоличествоЗаказанное,
	|	ВТ_Основная.КоличествоВУпаковке КАК КоличествоВУпаковке,
	|	ВТ_Основная.DELIVEREDUNIT КАК DELIVEREDUNIT,
	|	ВТ_Основная.DESCRIPTION КАК DESCRIPTION,
	|	ВТ_Основная.PRODUCT КАК PRODUCT,
	|	ВТ_Основная.PRODUCTIDBUYER КАК PRODUCTIDBUYER,
	|	ВТ_Основная.PRODUCTIDSUPPLIER КАК PRODUCTIDSUPPLIER,
	|	ВТ_Основная.CALIBRE КАК CALIBRE,
	|	ВТ_Основная.ХЗ_PACKING КАК ХЗ_PACKING,
	|	ВТ_Основная.ФорматУПД КАК ФорматУПД
	|ПОМЕСТИТЬ ВТ_ИТОГ
	|ИЗ
	|	ВТ_Основная КАК ВТ_Основная
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТовары
	|		ПО ВТ_Основная.Документ = ТаблицаТовары.Ссылка
	|			И ВТ_Основная.Ключ_Строки = ТаблицаТовары.НомерСтроки
	|ГДЕ
	|	НЕ ТаблицаТовары.Номенклатура = &amp;ВидТара
	|	И ТаблицаТовары.Количество &gt; 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ИТОГ.Документ КАК Ссылка,	
	|	ВТ_ИТОГ.НомерПалета КАК HIERARCHICALID,
	|	ВТ_ИТОГ.НомерСтроки КАК POSITIONNUMBER,
	|	ВТ_ИТОГ.SSCC КАК SSCC,
	|	ВТ_ИТОГ.Номенклатура КАК Номенклатура,
	|	ВТ_ИТОГ.Количество КАК Количество,
	|	ВТ_ИТОГ.ЦенаБезНДС КАК ЦенаБезНДС,
	|	ВТ_ИТОГ.ЦенаБезНДС * ВТ_ИТОГ.Количество КАК СтоимостьБезНДС,
	|	ВТ_ИТОГ.СтавкаНДС КАК СтавкаНДС,
	|	ВТ_ИТОГ.ВесБрутто КАК ВесБрутто,
	|	ВТ_ИТОГ.ВесНетто КАК ВесНетто,
	|	ВТ_ИТОГ.ВесНеттоШтуки КАК ВесНеттоШтуки,
	|	ВТ_ИТОГ.ВесБруттоШтуки КАК ВесБруттоШтуки,
	|	ВТ_ИТОГ.EUROPALLET КАК EUROPALLET,
	|	ВТ_ИТОГ.Единица_Измерения КАК ЕдиницаИзмерения,
	|	ВТ_ИТОГ.Ключ_Строки КАК КлючСтроки,
	|	ВТ_ИТОГ.МестоДоставкиУпаковки КАК LOCATION,
	|	ВТ_ИТОГ.Объем КАК Объем,
	|	ВТ_ИТОГ.ТемператураХранения КАК TEMPERATUREOFSTORAGE,
	|	ВТ_ИТОГ.СрокХраненияВДнях КАК СрокХраненияВДнях,
	|	ВТ_ИТОГ.ЗаводПроизводитель КАК MANUFACTUREPRODUCT,
	|	ВТ_ИТОГ.ДатаПроизводства КАК ДатаПроизводства,
	|	ВТ_ИТОГ.ДатаОкончанияСрокаГодности КАК ДатаОкончанияСрокаГодности,
	|	ВТ_ИТОГ.Высота КАК Высота,
	|	ВТ_ИТОГ.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ВТ_ИТОГ.КоличествоЗаказанное КАК КоличествоЗаказанное,
	|	ВТ_ИТОГ.КоличествоВУпаковке КАК КоличествоВУпаковке,
	|	ВТ_ИТОГ.DELIVEREDUNIT КАК DELIVEREDUNIT,
	|	ВТ_ИТОГ.DESCRIPTION КАК DESCRIPTION,
	|	ВТ_ИТОГ.DELIVEREDUNIT КАК ORDERUNIT,
	|	ВТ_ИТОГ.PRODUCT КАК PRODUCT,
	|	ВТ_ИТОГ.PRODUCTIDBUYER КАК PRODUCTIDBUYER,
	|	ВТ_ИТОГ.PRODUCTIDSUPPLIER КАК PRODUCTIDSUPPLIER,
	|	ВТ_ИТОГ.CALIBRE КАК CALIBRE,
	|	ВТ_ИТОГ.ХЗ_PACKING КАК ХЗ_PACKING,
	|	ВТ_ИТОГ.ФорматУПД КАК ФорматУПД,
	|	""RU"" КАК COUNTRYORIGIN
	|ИЗ
	|	ВТ_ИТОГ КАК ВТ_ИТОГ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	HIERARCHICALID
	|ИТОГИ
	|	СУММА(ВесБрутто),
	|	СУММА(ВесНетто)
	|ПО
	|	Ссылка,
	|	HIERARCHICALID";
	
	ЗапросНоменклатур.УстановитьПараметр("ДанныеТЧНоменклатурORDER", ДанныеТЧНоменклатурORDER);
	ЗапросНоменклатур.УстановитьПараметр("ВидТара", Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Тара"));
	
	РезультатЗапросаНоменклатур = ЗапросНоменклатур.Выполнить();
	ВыборкаНоменклатур = РезультатЗапросаНоменклатур.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	МенеджерВременныхТаблиц.Закрыть();
	
	//Весь результат обработки табличной части Упаковок будет помещен в таблицу
	ТаблицаУпаковки = Новый ТаблицаЗначений;
	ТаблицаУпаковки.Колонки.Добавить("Ссылка"			, Новый ОписаниеТипов("ДокументСсылка.РеализацияТоваровУслуг"));
	ТаблицаУпаковки.Колонки.Добавить("PACKINGSEQUENCE"	, Новый ОписаниеТипов("Массив"));
	
	ТаблицаУпаковки.Индексы.Добавить("Ссылка");

	//Имена свойств структуры PACKINGSEQUENCE 
	ИменаСвойствУпаковка = "HIERARCHICALID, SSCC, LOCATION, EUROPALLET, HEIGHT, WEIGHTNETTO, WEIGHTBRUTTO, VOLUME, POSITION";
	
	//Имена свойств структуры POSITION
	ИменаСвойствПозиция	 = "POSITIONNUMBER, PRODUCT, PRODUCTIDBUYER, PRODUCTIDSUPPLIER, ORDEREDQUANTITY, DELIVEREDQUANTITY,
							| QUANTITYOFCUINTU, ORDERUNIT, DELIVEREDUNIT, PRICE, AMOUNT, TAXRATE, DESCRIPTION, SHELFLIFEDATE,
							| EXPIREDATE, POSWEIGHTNETTO, POSWEIGHTBRUTTO, TEMPERATUREOFSTORAGE, VARBESTDATE, MANUFACTUREPRODUCT,
							| COUNTRYORIGIN, VETDOCUMENT, EGAIS, PACKING";

	//Имена свойств структуры VETDOCUMENT
	ИменаСвойствVETDOCUMENT = "UUID, VOLUME, DATEOFPRODUCTION, TIMEOFPRODUCTION, EXPIREDATE";
	
	//Имена свойств структуры EGAIS
	ИменаСвойствEGAIS = "EGAISCODE, EGAISQUANTITY";
	
	ДатуВСтроку.Очистить();
	ДатуВСтроку.Вставить("SHELFLIFEDATE" , "Выборка.ДатаПроизводства");
	ДатуВСтроку.Вставить("EXPIREDATE"	 , "Выборка.ДатаОкончанияСрокаГодности");
	
	ЧислоВСтроку = Новый СписокЗначений;
	ЧислоВСтроку.Добавить("DELIVEREDQUANTITY"	, "Выборка.Количество");
	ЧислоВСтроку.Добавить("PRICE"				, "Выборка.ЦенаБезНДС");
	ЧислоВСтроку.Добавить("AMOUNT"				, "Выборка.СтоимостьБезНДС");
	ЧислоВСтроку.Добавить("ORDEREDQUANTITY"		, "Выборка.КоличествоЗаказанное");
	ЧислоВСтроку.Добавить("QUANTITYOFCUINTU"	, "Выборка.КоличествоВУпаковке");
	ЧислоВСтроку.Добавить("POSWEIGHTNETTO"		, "Выборка.ВесНеттоШтуки");
	ЧислоВСтроку.Добавить("POSWEIGHTBRUTTO"		, "Выборка.ВесБруттоШтуки");
	ЧислоВСтроку.Добавить("VARBESTDATE"			, "Выборка.СрокХраненияВДнях");
	
	Пока ВыборкаНоменклатур.Следующий() Цикл
		
		НоваяСтрока = ТаблицаУпаковки.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаНоменклатур, "Ссылка");
		
		Выборка = ВыборкаНоменклатур.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			//Проверка по типу записи. Если запись является Итоговой, тогда создается новая структура PACKINGSEQUENCE
			Если Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоГруппировке Тогда
				
				//Создаем структуру PACKINGSEQUENCE
				СтруктураУпаковки = Новый Структура(ИменаСвойствУпаковка);
				
				//Добавляем в массив созданную структуру PACKINGSEQUENCE
				НоваяСтрока.PACKINGSEQUENCE.Добавить(СтруктураУпаковки);
				
				//Создаем Массив POSITION, где элемент - Cтруктура POSITION 
				ArrayPOSITION = Новый Массив;
				
				//Заполнение структуры PACKINGSEQUENCE значениями итоговых полей
				СтруктураУпаковки.WEIGHTNETTO    = ?(Выборка.ВесНетто = 0, "", XMLСтрока(Выборка.ВесНетто));
				СтруктураУпаковки.WEIGHTBRUTTO   = ?(Выборка.ВесБрутто = 0, "", XMLСтрока(Выборка.ВесБрутто));
				
				Продолжить;
			КонецЕсли;		
			
			//Создаем структуру POSITION
			СтруктураPOSITION = Новый Структура(ИменаСвойствПозиция);
			
			//Создаем структуру VETDOCUMENT
			СтруктураVETDOCUMENT = Новый Структура(ИменаСвойствVETDOCUMENT);
			
			//Добавляем в массив созданную структуру POSITION 
			ArrayPOSITION.Добавить(СтруктураPOSITION);
			
			СтруктураУпаковки.POSITION = ArrayPOSITION;
			
			//Высота и объем Палеты
			СтруктураУпаковки.HEIGHT = ?(Выборка.Высота = 0, "", XMLСтрока(Выборка.Высота));
			СтруктураУпаковки.VOLUME = ?(Выборка.Объем = 0, "", XMLСтрока(Выборка.Объем));
			
			//Заполнение строковых значений
			ЗаполнитьЗначенияСвойств(СтруктураУпаковки, Выборка, "HIERARCHICALID, SSCC, LOCATION, EUROPALLET"); 
			
			//Заполнение структуры POSITION
			ЗаполнитьЗначенияСвойств(СтруктураPOSITION, Выборка);
			
			//Ставка НДС
			Если Выборка.СтавкаНДС &lt;&gt; Перечисления.СтавкиНДС.БезНДС Тогда
				СтруктураPOSITION.TAXRATE = Сред(Строка(Выборка.СтавкаНДС),1,2);
			КонецЕсли;
			
			ArrayPACKING = Неопределено;
			
			Если ТипЗнч(Выборка.ХЗ_PACKING) = Тип("ХранилищеЗначения") Тогда
				ArrayPACKING = Выборка.ХЗ_PACKING.Получить();			
			КонецЕсли;
						
			СтруктураPOSITION.PACKING = ?(ArrayPACKING &lt;&gt; Неопределено, ArrayPACKING, Новый Массив);
			
			//////////////////Пример заполнения VETDOCUMENT/////////////////
			//СтруктураVETDOCUMENT.UUID = Новый УникальныйИдентификатор();
			///СтруктураVETDOCUMENT.VOLUME = "15";
			
			//СтруктураPOSITION.VETDOCUMENT = СтруктураVETDOCUMENT;
			////////////////////////////////////////////////////////////////
			
			// Преобразование числа в строку и заполнение значения.
			Для Каждого ЗаписьЧислоВСтроку Из ЧислоВСтроку Цикл
				
				ЗначениеЧисла = Вычислить(ЗаписьЧислоВСтроку.Представление);        
				
				Если ЗначениеЧисла = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				СтруктураPOSITION[ЗаписьЧислоВСтроку.Значение] = XMLСтрока(ЗначениеЧисла);
				
			КонецЦикла;
			
			// Преобразование даты в строку и заполнение значения.
			Для Каждого ЗаписьДатуВСтроку Из ДатуВСтроку Цикл
				СтруктураPOSITION[ЗаписьДатуВСтроку.Ключ] = Формат(Вычислить(ЗаписьДатуВСтроку.Значение), "ДФ=yyyy-MM-dd");
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;	

	#КонецОбласти
	
	#Область СОЗДАНИЕ_XML
	
	//Проверка наличия обязательных полей
	ОбязательныеКолонки = Новый СписокЗначений;
	
	//DESADV
	ОбязательныеКолонки.Добавить("NUMBER"		, "NUMBER"			, Истина);
	ОбязательныеКолонки.Добавить("DATE"			, "DATE" 			, Истина);
	ОбязательныеКолонки.Добавить("ORDERNUMBER"	, "ORDERNUMBER" 	, Истина);
	ОбязательныеКолонки.Добавить("ORDERDATE"	, "ORDERDATE" 		, Истина);
	ОбязательныеКолонки.Добавить("DELIVERYDATE"	, "DELIVERYDATE" 	, Истина);
	
	//HEAD
	ОбязательныеКолонки.Добавить("SUPPLIER"			, "SUPPLIER"		, Истина);
	ОбязательныеКолонки.Добавить("BUYER"			, "BUYER"			, Истина);
	ОбязательныеКолонки.Добавить("RECIPIENT"		, "RECIPIENT"		, Истина);
	ОбязательныеКолонки.Добавить("DELIVERYPLACE"	, "DELIVERYPLACE"	, Истина);
	ОбязательныеКолонки.Добавить("SENDER"		 	, "SENDER"			, Истина);
	
	//PACKINGSEQUENCE
	ОбязательныеКолонки.Добавить("HIERARCHICALID"	, "HIERARCHICALID"	, Истина);
	ОбязательныеКолонки.Добавить("SSCC"		 		, "SSCC"			, Истина);
	ОбязательныеКолонки.Добавить("LOCATION"		 	, "LOCATION"		, Истина);
	
	//POSITION
	ОбязательныеКолонки.Добавить("POSITIONNUMBER"	, "POSITIONNUMBER"		, Истина);
	ОбязательныеКолонки.Добавить("PRODUCT"			, "PRODUCT"				, Истина);
	ОбязательныеКолонки.Добавить("PRODUCTIDBUYER"	, "PRODUCTIDBUYER"		, Истина);
	ОбязательныеКолонки.Добавить("DESCRIPTION"		, "DESCRIPTION"			, Истина);
	ОбязательныеКолонки.Добавить("ORDEREDQUANTITY"	, "ORDEREDQUANTITY"		, Истина);
	ОбязательныеКолонки.Добавить("ACCEPTEDQUANTITY"	, "DELIVEREDQUANTITY"	, Истина);
	ОбязательныеКолонки.Добавить("DELIVEREDUNIT"	, "DELIVEREDUNIT"		, Истина);
	
	МассивСтруктурИсходящих = Новый Массив;
	
	//Свойства Шапки документа
	СтруктураШапка = Новый Структура("NUMBER, DATE, ORDERNUMBER, ORDERDATE, DELIVERYDATE, DELIVERYTIME, DELIVERYNOTENUMBER, DELIVERYNOTEDATE,  
									| EGAISNUMBER, UPDNUMBER, UPDDATE, TTNNUMBER, TRANSPORTMARK, TRANSPORTERPHONE, TRANSPORTID, TRANSPORTERNAME, 
									| TRAILERNUMBER, TRANSPORTTYPE, TRANSPORTERTYPE, CAMPAIGNNUMBER, SELFSHIPMENT, FRESH, INFO, HEAD");
	
	//Свойства элемента HEAD
	СтруктураHEAD = Новый Структура("SUPPLIER, BUYER, DELIVERYPLACE, SENDER, RECIPIENT, EDIINTERCHANGEID, EDIMESSAGE, PACKINGSEQUENCE");	
	
	Для каждого СтрокаШапкиДокумента из Результат Цикл
		
		ТекстСообщенияПроверкиЗаполненияОбязательныхПолей = "";  
		
		//Заполнение структуры документа
		СтруктураДок = Новый Структура("DESSCC");
		
		СтруктураДок.DESSCC = СтруктураШапка;
		СтруктураШапка.HEAD = СтруктураHEAD;	    
		
		//Заполнение значений свойств шапки документа
		ЗаполнитьЗначенияСвойств(СтруктураШапка, СтрокаШапкиДокумента);
		
		//Заполнение значений свойств элемента HEAD
		ЗаполнитьЗначенияСвойств(СтруктураHEAD, СтрокаШапкиДокумента);
		
		//Объединение данных Шапки и табличной части по ссылке
		ОтборСтрокНоменклатур = Новый Структура;
		ОтборСтрокНоменклатур.Вставить("Ссылка", СтрокаШапкиДокумента.Ссылка);
		
		СтрокиНоменклатурДокумента = ТаблицаУпаковки.НайтиСтроки(ОтборСтрокНоменклатур);
		
		Для Каждого СтрокаНоменклатурыДокумента Из СтрокиНоменклатурДокумента Цикл
			СтруктураHEAD.PACKINGSEQUENCE = СтрокаНоменклатурыДокумента.PACKINGSEQUENCE;			
		КонецЦикла;		
		
		//Создание XML строки
		XMLДокумент        	= Новый ЗаписьXML;		
		ПараметрыЗаписиXML 	= Новый ПараметрыЗаписиXML("UTF-8", "1.0", Истина, Ложь, Символы.Таб); 
		XMLДокумент.УстановитьСтроку("UTF-8");
		XMLДокумент.ЗаписатьОбъявлениеXML();
		
		Для каждого СтрокаЭлемента Из СтруктураДок Цикл
			ЗаписатьБлоки(XMLДокумент, СтрокаЭлемента, ОбязательныеКолонки, ТекстСообщенияПроверкиЗаполненияОбязательныхПолей);
		КонецЦикла;	
		
		СтрокаXML = XMLДокумент.Закрыть();			
		
		Если ЗначениеЗаполнено(ТекстСообщенияПроверкиЗаполненияОбязательныхПолей) Тогда
			
			ТекстЛогаСобытий = ТекстСообщенияПроверкиЗаполненияОбязательныхПолей + Символы.ПС + "Документ был пропущен.";
			
			ДобавитьЗаписьВМассивЛога(МассивЛогаСобытий, ТекстЛогаСобытий, "Предупреждение", ИмяСобытия);
			
			Продолжить;	
		Иначе	
			
			СтруктураФайлаДанных = Новый Структура;
			СтруктураФайлаДанных.Вставить("ВидДокумента"			, "DESSCC_Исходящий");
			СтруктураФайлаДанных.Вставить("Документ"				, СтрокаШапкиДокумента.Ссылка);
			СтруктураФайлаДанных.Вставить("ИдентификаторЦепочки"	, СтрокаШапкиДокумента.ИдентификаторЦепочки);
			СтруктураФайлаДанных.Вставить("ИмяФайлаXML"				, СтрокаШапкиДокумента.ФайлИмя);
			СтруктураФайлаДанных.Вставить("КодировкаФайла"			, "UTF-8");
			СтруктураФайлаДанных.Вставить("Организация"				, СтрокаШапкиДокумента.Организация);
			СтруктураФайлаДанных.Вставить("Отправлен"				, НЕОПРЕДЕЛЕНО);
			СтруктураФайлаДанных.Вставить("Сообщение"				, "");
			СтруктураФайлаДанных.Вставить("Статус"					, СтрокаШапкиДокумента.Статус);
			СтруктураФайлаДанных.Вставить("СтрокаXML"				, СтрокаXML);
			СтруктураФайлаДанных.Вставить("ТипФайла"				, СтрокаШапкиДокумента.ВидДокумента);
			
			МассивСтруктурИсходящих.Добавить(СтруктураФайлаДанных);
			
		КонецЕсли;
		
	КонецЦикла;
	
	#КонецОбласти
	
	//Возврат Результат;				//раскомментировать для отображения значений таблицы "Результат" на вкладке "Тестирование"  
	//Возврат РезультатЗапросаНоменклатур.Выгрузить();		//раскомментировать для отображения значений таблицы на вкладке "Тестирование"
	
	Возврат МассивСтруктурИсходящих;</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:string">Исходящий DESSCC</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">8</lastId>
			<item>
				<value xsi:type="xs:string">Прайс-лист</value>
				<id xsi:type="xs:decimal">0</id>
			</item>
			<item>
				<value xsi:type="xs:string">Поставщик</value>
				<presentation>СписокНакладныеИсходящиеПоставщик</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">1</id>
			</item>
			<item>
				<value xsi:type="xs:string">Покупатель</value>
				<id xsi:type="xs:decimal">2</id>
			</item>
			<item>
				<value xsi:type="xs:string">Синоним</value>
				<presentation>Исходящий DESSCC</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">3</id>
			</item>
			<item>
				<value xsi:type="xs:string">ИмяКнопки</value>
				<presentation>ИсходящийDESSCC</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">4</id>
			</item>
			<item>
				<value xsi:type="xs:string">ПередаватьТекстПричины</value>
				<id xsi:type="xs:decimal">5</id>
			</item>
			<item>
				<value xsi:type="xs:string">ПриемникВидДокумента</value>
				<presentation>DESSCC_Исходящий</presentation>
				<id xsi:type="xs:decimal">6</id>
			</item>
			<item>
				<value xsi:type="xs:string">ИсточникВидДокумента</value>
				<presentation>Накладная_Исходящая</presentation>
				<id xsi:type="xs:decimal">7</id>
			</item>
			<item>
				<value xsi:type="xs:string">НужнаПодпись</value>
				<presentation>Нет</presentation>
				<id xsi:type="xs:decimal">8</id>
			</item>
		</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:string">ИсходящийDESSCC</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">1</lastId>
			<item>
				<value xsi:type="xs:string">ТекстЗапроса = "ВЫБРАТЬ
               |	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
               |	DR_События.Документ КАК Документ,
               |	DR_События.Идентификатор КАК Идентификатор
               |ПОМЕСТИТЬ ВТ_Накладные
               |ИЗ
               |	РегистрСведений.DR_События КАК DR_События
               |ГДЕ
               |	DR_События.ВидДокумента = ""Накладная_Исходящая""
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
               |	DR_События.ИдентификаторОснования КАК ИдентификаторОснования,
               |	DR_События.Документ КАК Документ,
               |	МАКСИМУМ(DR_События.ДатаЗаписи) КАК ДатаЗаписи
               |ПОМЕСТИТЬ ВТ_DESSCC
               |ИЗ
               |	РегистрСведений.DR_События КАК DR_События
               |ГДЕ
               |	DR_События.ВидДокумента = ""DESSCC_Исходящий""
               |
               |СГРУППИРОВАТЬ ПО
               |	DR_События.ИдентификаторЦепочки,
               |	DR_События.Документ,
               |	DR_События.ИдентификаторОснования
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	ВТ_Накладные.Документ КАК Документ,
               |	""DESSCC_Исходящий"" КАК ВидДокумента,
               |	"""" КАК СтатусОбработкиДокумента
               |ИЗ
               |	ВТ_Накладные КАК ВТ_Накладные
               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_DESSCC КАК ВТ_DESSCC
               |		ПО ВТ_Накладные.ИдентификаторЦепочки = ВТ_DESSCC.ИдентификаторЦепочки
               |			И ВТ_Накладные.Идентификатор = ВТ_DESSCC.ИдентификаторОснования
               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_ЦепочкиДокументов КАК DR_ЦепочкиДокументов
               |		ПО ВТ_Накладные.ИдентификаторЦепочки = DR_ЦепочкиДокументов.ИдентификаторЦепочки
               |ГДЕ
               |	ВТ_Накладные.Документ.Проведен
               |	И ВТ_DESSCC.ИдентификаторЦепочки ЕСТЬ NULL";</value>
				<presentation>ТекстЗапроса</presentation>
				<id xsi:type="xs:decimal">0</id>
			</item>
		</Value>
	</row>
</ValueTree>