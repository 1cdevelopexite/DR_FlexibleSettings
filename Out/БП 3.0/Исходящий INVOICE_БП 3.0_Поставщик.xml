<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ТипТранзакции</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Данные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ИмяКнопки</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Регламент</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Исходящий INVOICE</Value>
		<Value xsi:type="xs:string">	#Область ШАПКА_Заполнение
	
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	                |	ВЫРАЗИТЬ(DR_События.Документ КАК Документ.РеализацияТоваровУслуг) КАК Источник,
	                |	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
	                |	DR_События.ИдентификаторОснования КАК ИдентификаторОснования
	                |ПОМЕСТИТЬ DRСобытияИсточник
	                |ИЗ
	                |	РегистрСведений.DR_События КАК DR_События
	                |ГДЕ
	                |	DR_События.Документ В(&amp;Документ)
	                |	И DR_События.ВидДокумента = ""Накладная_Исходящая""
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	DRСобытияИсточник.Источник КАК Источник,
	                |	DRСобытияИсточник.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
	                |	DRСобытияИсточник.ИдентификаторОснования КАК ИдентификаторОснования,
	                |	ВЫРАЗИТЬ(DR_События_ORDER.Документ КАК Документ.DR_Документ) КАК ORDER
	                |ПОМЕСТИТЬ DRСобытияORDER
	                |ИЗ
	                |	DRСобытияИсточник КАК DRСобытияИсточник
	                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_События_Заказ
	                |		ПО DRСобытияИсточник.ИдентификаторЦепочки = DR_События_Заказ.ИдентификаторЦепочки
	                |			И (DR_События_Заказ.ВидДокумента = ""Заказ_Входящий"")
	                |			И DRСобытияИсточник.ИдентификаторОснования = DR_События_Заказ.Идентификатор
	                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_События_ORDER
	                |		ПО DRСобытияИсточник.ИдентификаторЦепочки = DR_События_ORDER.ИдентификаторЦепочки
	                |			И (DR_События_ORDER.ВидДокумента = ""ORDER_Входящий"")
	                |			И (DR_События_Заказ.ИдентификаторОснования = DR_События_ORDER.Идентификатор)
	                |			И (DR_События_ORDER.Статус = ""Обработан"")
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	DRСобытияORDER.Источник КАК Источник,
	                |	DRСобытияORDER.Источник.СуммаВключаетНДС КАК ЦенаВключаетНДС,
	                |	DRСобытияORDER.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
	                |	DRСобытияORDER.ИдентификаторОснования КАК ИдентификаторОснования,
	                |	DRСобытияORDER.ORDER КАК ORDER,
	                |	СУММА(ВЫБОР
	                |			КОГДА DRСобытияORDER.Источник.СуммаВключаетНДС
	                |				ТОГДА РеализацияТовары.Сумма - РеализацияТовары.СуммаНДС
	                |			ИНАЧЕ РеализацияТовары.Сумма
	                |		КОНЕЦ) КАК СуммаБезНДС,
	                |	СУММА(ВЫБОР
	                |			КОГДА DRСобытияORDER.Источник.СуммаВключаетНДС
	                |				ТОГДА РеализацияТовары.Сумма
	                |			ИНАЧЕ РеализацияТовары.Сумма + РеализацияТовары.СуммаНДС
	                |		КОНЕЦ) КАК СуммаСНДС,
	                |	СУММА(РеализацияТовары.СуммаНДС) КАК СуммаНДС
	                |ПОМЕСТИТЬ ТоварыИтоги
	                |ИЗ
	                |	DRСобытияORDER КАК DRСобытияORDER
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТовары
	                |		ПО DRСобытияORDER.Источник = РеализацияТовары.Ссылка
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	DRСобытияORDER.Источник,
	                |	DRСобытияORDER.Источник.СуммаВключаетНДС,
	                |	DRСобытияORDER.ИдентификаторЦепочки,
	                |	DRСобытияORDER.ИдентификаторОснования,
	                |	DRСобытияORDER.ORDER
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ТоварыИтоги.Источник КАК Источник,
	                |	ТоварыИтоги.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
	                |	ТоварыИтоги.ИдентификаторОснования КАК ИдентификаторОснования,
	                |	ТоварыИтоги.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	                |	ТоварыИтоги.СуммаБезНДС КАК СуммаБезНДС,
	                |	ТоварыИтоги.СуммаСНДС КАК СуммаСНДС,
	                |	ТоварыИтоги.СуммаНДС КАК СуммаНДС,
	                |	ТоварыИтоги.ORDER КАК ORDER,
	                |	ВЫРАЗИТЬ(ORDERNUMBER.Значение КАК СТРОКА(25)) КАК ORDERNUMBER,
	                |	ВЫРАЗИТЬ(ORDERDATE.Значение КАК СТРОКА(10)) КАК ORDERDATE,
	                |	ВЫРАЗИТЬ(CAMPAIGNNUMBER.Значение КАК СТРОКА(250)) КАК CAMPAIGNNUMBER,
	                |	ВЫРАЗИТЬ(DELIVERYDATE.Значение КАК СТРОКА(10)) КАК DELIVERYDATE,
	                |	ВЫРАЗИТЬ(SENDER.Значение КАК СТРОКА(13)) КАК SENDER,
	                |	POSITION.ХранилищеЗначения КАК POSITION,
	                |	ЕСТЬNULL(ВЫРАЗИТЬ(INVOICEPARTNER.Значение КАК СТРОКА(25)), """") КАК INVOICEPARTNER
	                |ПОМЕСТИТЬ ДопРеквизитыORDER
	                |ИЗ
	                |	ТоварыИтоги КАК ТоварыИтоги
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК ORDERNUMBER
	                |		ПО ТоварыИтоги.ORDER = ORDERNUMBER.Ссылка
	                |			И (ORDERNUMBER.Реквизит = ""NUMBER"")
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК ORDERDATE
	                |		ПО ТоварыИтоги.ORDER = ORDERDATE.Ссылка
	                |			И (ORDERDATE.Реквизит = ""DATE"")
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК CAMPAIGNNUMBER
	                |		ПО ТоварыИтоги.ORDER = CAMPAIGNNUMBER.Ссылка
	                |			И (CAMPAIGNNUMBER.Реквизит = ""CAMPAIGNNUMBER"")
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК DELIVERYDATE
	                |		ПО ТоварыИтоги.ORDER = DELIVERYDATE.Ссылка
	                |			И (DELIVERYDATE.Реквизит = ""DELIVERYDATE"")
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК SENDER
	                |		ПО ТоварыИтоги.ORDER = SENDER.Ссылка
	                |			И (SENDER.Реквизит = ""SENDER"")
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК POSITION
	                |		ПО ТоварыИтоги.ORDER = POSITION.Ссылка
	                |			И (POSITION.Реквизит = ""POSITION"")
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК INVOICEPARTNER
	                |		ПО ТоварыИтоги.ORDER = INVOICEPARTNER.Ссылка
	                |			И (INVOICEPARTNER.Реквизит = ""INVOICEPARTNER"")
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ДопРеквизитыORDER.Источник КАК Ссылка,
	                |	РеализацияТоваровУслуг.Номер КАК Номер,
	                |	РеализацияТоваровУслуг.Дата КАК Дата,
	                |	ДопРеквизитыORDER.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	                |	РеализацияТоваровУслуг.Организация КАК Организация,
	                |	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	                |	ДопРеквизитыORDER.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
	                |	ДопРеквизитыORDER.ИдентификаторОснования КАК ИдентификаторОснования,
	                |	ДопРеквизитыORDER.ORDER КАК ORDER,
	                |	""Отправлен"" КАК Статус,
	                |	ДопРеквизитыORDER.СуммаБезНДС КАК СуммаБезНДС,
	                |	ДопРеквизитыORDER.СуммаСНДС КАК СуммаСНДС,
	                |	ДопРеквизитыORDER.СуммаНДС КАК СуммаНДС,
	                |	ДопРеквизитыORDER.POSITION КАК POSITION,
	                |	ВЫРАЗИТЬ("""" КАК СТРОКА(300)) КАК ФайлИмя,
	                |	ВЫРАЗИТЬ("""" КАК СТРОКА(300)) КАК Идентификатор,
	                |	""INVOICE"" КАК ВидДокумента,
	                |	GLN_Контрагент.Контрагент_ФорматЭСФ КАК ФорматУПД,
	                |	""380"" КАК DOCUMENTNAME,
	                |	ВЫРАЗИТЬ("""" КАК СТРОКА(30)) КАК NUMBER,
	                |	ВЫРАЗИТЬ("""" КАК СТРОКА(30)) КАК DATE,
	                |	ДопРеквизитыORDER.DELIVERYDATE КАК DELIVERYDATE,
	                |	""RUB"" КАК CURRENCY,
	                |	ДопРеквизитыORDER.ORDERNUMBER КАК ORDERNUMBER,
	                |	ДопРеквизитыORDER.ORDERDATE КАК ORDERDATE,
	                |	ВЫРАЗИТЬ("""" КАК СТРОКА(30)) КАК DELIVERYNOTENUMBER,
	                |	ВЫРАЗИТЬ("""" КАК СТРОКА(30)) КАК DELIVERYNOTEDATE,
	                |	ВЫРАЗИТЬ("""" КАК СТРОКА(300)) КАК GOODSTOTALAMOUNT,
	                |	ВЫРАЗИТЬ("""" КАК СТРОКА(300)) КАК POSITIONSAMOUNT,
	                |	ВЫРАЗИТЬ("""" КАК СТРОКА(300)) КАК VATSUM,
	                |	ВЫРАЗИТЬ("""" КАК СТРОКА(300)) КАК INVOICETOTALAMOUNT,
	                |	ВЫРАЗИТЬ("""" КАК СТРОКА(300)) КАК TAXABLEAMOUNT,
	                |	ВЫРАЗИТЬ("""" КАК СТРОКА(30)) КАК REFERENCEINVOICENUMBER,
	                |	ВЫРАЗИТЬ("""" КАК СТРОКА(30)) КАК REFERENCEINVOICEDATE,
	                |	GLN_Организация.Объект.ИНН КАК FISCALNUMBER,
	                |	GLN_Организация.Объект.КПП КАК REGISTRATIONNUMBER,
	                |	ДопРеквизитыORDER.CAMPAIGNNUMBER КАК CAMPAIGNNUMBER,
	                |	РеализацияТоваровУслуг.Ответственный.Представление КАК MANAGER,
	                |	СчетФактураВыданный.ГлавныйБухгалтер.Представление КАК ACCOUNTING,
	                |	""20"" КАК VAT,
	                |	GLN_Организация.GLN КАК SUPPLIER,
	                |	GLN_Организация.Объект.Представление КАК SUPPLIERNAME,
	                |	ВЫРАЗИТЬ("""" КАК СТРОКА(300)) КАК SUPPLIERADRESS,
	                |	GLN_Организация.eXiteАдр_Город КАК SUPPLIERCITY,
	                |	GLN_Организация.eXiteАдр_Индекс КАК SUPPLIERZIP,
	                |	DR_ТочкиДоставки.GLN КАК BUYER,
	                |	DR_ТочкиДоставки.Наименование КАК BUYERNAME,
	                |	ВЫРАЗИТЬ("""" КАК СТРОКА(300)) КАК BUYERADRESS,
	                |	DR_ТочкиДоставки.Адр_Город КАК BUYERCITY,
	                |	DR_ТочкиДоставки.Адр_Индекс КАК BUYERZIP,
	                |	DR_ТочкиДоставки.КПП КАК BUYERKPP,
	                |	DR_ТочкиДоставки.ИНН КАК BUYERINN,
	                |	DR_ТочкиДоставки.GLN КАК DELIVERYPLACE,
	                |	GLN_Организация.GLN КАК CONSEGNOR,
	                |	GLN_Организация.Объект.Представление КАК CONSEGNORNAME,
	                |	ВЫРАЗИТЬ("""" КАК СТРОКА(300)) КАК CONSEGNORADRESS,
	                |	GLN_Организация.eXiteАдр_Город КАК CONSEGNORCITY,
	                |	GLN_Организация.eXiteАдр_Индекс КАК CONSEGNORZIP,
	                |	ЕСТЬNULL(GLN_INVOICEPARTNER.GLN, GLN_Контрагент.GLN) КАК INVOICEPARTNER,
	                |	ЕСТЬNULL(GLN_INVOICEPARTNER.Объект.КПП, GLN_Контрагент.Объект.КПП) КАК INVOICEPARTNERKPP,
	                |	ЕСТЬNULL(GLN_INVOICEPARTNER.Объект.ИНН, GLN_Контрагент.Объект.ИНН) КАК INVOICEPARTNERINN,
	                |	DR_ТочкиДоставки.GLN КАК CONSIGNEE,
	                |	DR_ТочкиДоставки.Наименование КАК CONSIGNEENAME,
	                |	ВЫРАЗИТЬ("""" КАК СТРОКА(300)) КАК CONSIGNEEADRESS,
	                |	DR_ТочкиДоставки.Адр_Город КАК CONSIGNEECITY,
	                |	DR_ТочкиДоставки.Адр_Индекс КАК CONSIGNEEZIP,
	                |	DR_ТочкиДоставки.КПП КАК CONSIGNEEKPP,
	                |	DR_ТочкиДоставки.ИНН КАК CONSIGNEEINN,
	                |	GLN_Организация.GLN КАК SENDER,
	                |	ЕСТЬNULL(GLN_INVOICEPARTNER.GLN, GLN_Контрагент.GLN) КАК RECIPIENT,
	                |	ВЫРАЗИТЬ("""" КАК СТРОКА(30)) КАК BANKNAME,
	                |	ВЫРАЗИТЬ("""" КАК СТРОКА(30)) КАК BANKMFONUMBER,
	                |	ВЫРАЗИТЬ("""" КАК СТРОКА(30)) КАК BANKACCOUNT,
	                |	ВЫРАЗИТЬ("""" КАК СТРОКА(30)) КАК EDIINTERCHANGEID,
	                |	ВЫРАЗИТЬ("""" КАК СТРОКА(300)) КАК EDIMESSAGE,
	                |	СчетФактураВыданный.Номер КАК СЧФНомер,
	                |	СчетФактураВыданный.Дата КАК СЧФДата,
	                |	СчетФактураВыданный.Ссылка КАК СчетФактура,
	                |	ВЫБОР
	                |		КОГДА GLN_Организация.eXiteАдр_КодРегиона &lt;&gt; """"
	                |			ТОГДА GLN_Организация.eXiteАдр_КодРегиона + "", ""
	                |		ИНАЧЕ """"
	                |	КОНЕЦ + ВЫБОР
	                |		КОГДА GLN_Организация.eXiteАдр_Индекс &lt;&gt; """"
	                |			ТОГДА GLN_Организация.eXiteАдр_Индекс + "", ""
	                |		ИНАЧЕ """"
	                |	КОНЕЦ + ВЫБОР
	                |		КОГДА GLN_Организация.eXiteАдр_Город &lt;&gt; """"
	                |			ТОГДА ""г. "" + GLN_Организация.eXiteАдр_Город + "", ""
	                |		ИНАЧЕ """"
	                |	КОНЕЦ + ВЫБОР
	                |		КОГДА GLN_Организация.eXiteАдр_НаселПункт &lt;&gt; """"
	                |			ТОГДА ""нас. пункт "" + GLN_Организация.eXiteАдр_НаселПункт + "", ""
	                |		ИНАЧЕ """"
	                |	КОНЕЦ + ВЫБОР
	                |		КОГДА GLN_Организация.eXiteАдр_Район &lt;&gt; """"
	                |			ТОГДА ""район "" + GLN_Организация.eXiteАдр_Район + "", ""
	                |		ИНАЧЕ """"
	                |	КОНЕЦ + ВЫБОР
	                |		КОГДА GLN_Организация.eXiteАдр_Улица &lt;&gt; """"
	                |			ТОГДА ""ул. "" + GLN_Организация.eXiteАдр_Улица + "", ""
	                |		ИНАЧЕ """"
	                |	КОНЕЦ + ВЫБОР
	                |		КОГДА GLN_Организация.eXiteАдр_Дом &lt;&gt; """"
	                |			ТОГДА ""дом "" + GLN_Организация.eXiteАдр_Дом + "", ""
	                |		ИНАЧЕ """"
	                |	КОНЕЦ + ВЫБОР
	                |		КОГДА GLN_Организация.eXiteАдр_Корпус &lt;&gt; """"
	                |			ТОГДА ""корп. "" + GLN_Организация.eXiteАдр_Корпус + "", ""
	                |		ИНАЧЕ """"
	                |	КОНЕЦ + ВЫБОР
	                |		КОГДА GLN_Организация.eXiteАдр_Кварт &lt;&gt; """"
	                |			ТОГДА ""кв. "" + GLN_Организация.eXiteАдр_Кварт + """"
	                |		ИНАЧЕ """"
	                |	КОНЕЦ КАК АдресОрганизации,
	                |	ВЫБОР
	                |		КОГДА DR_ТочкиДоставки.Адр_КодРегиона &lt;&gt; """"
	                |			ТОГДА DR_ТочкиДоставки.Адр_КодРегиона + "", ""
	                |		ИНАЧЕ """"
	                |	КОНЕЦ + ВЫБОР
	                |		КОГДА DR_ТочкиДоставки.Адр_Индекс &lt;&gt; """"
	                |			ТОГДА DR_ТочкиДоставки.Адр_Индекс + "", ""
	                |		ИНАЧЕ """"
	                |	КОНЕЦ + ВЫБОР
	                |		КОГДА DR_ТочкиДоставки.Адр_Город &lt;&gt; """"
	                |			ТОГДА ""г. "" + DR_ТочкиДоставки.Адр_Город + "", ""
	                |		ИНАЧЕ """"
	                |	КОНЕЦ + ВЫБОР
	                |		КОГДА DR_ТочкиДоставки.Адр_НаселПункт &lt;&gt; """"
	                |			ТОГДА ""нас. пункт "" + DR_ТочкиДоставки.Адр_НаселПункт + "", ""
	                |		ИНАЧЕ """"
	                |	КОНЕЦ + ВЫБОР
	                |		КОГДА DR_ТочкиДоставки.Адр_Район &lt;&gt; """"
	                |			ТОГДА ""район "" + DR_ТочкиДоставки.Адр_Район + "", ""
	                |		ИНАЧЕ """"
	                |	КОНЕЦ + ВЫБОР
	                |		КОГДА DR_ТочкиДоставки.Адр_Улица &lt;&gt; """"
	                |			ТОГДА ""ул. "" + DR_ТочкиДоставки.Адр_Улица + "", ""
	                |		ИНАЧЕ """"
	                |	КОНЕЦ + ВЫБОР
	                |		КОГДА DR_ТочкиДоставки.Адр_Дом &lt;&gt; """"
	                |			ТОГДА ""дом "" + DR_ТочкиДоставки.Адр_Дом + "", ""
	                |		ИНАЧЕ """"
	                |	КОНЕЦ + ВЫБОР
	                |		КОГДА DR_ТочкиДоставки.Адр_Корпус &lt;&gt; """"
	                |			ТОГДА ""корп. "" + DR_ТочкиДоставки.Адр_Корпус + "", ""
	                |		ИНАЧЕ """"
	                |	КОНЕЦ + ВЫБОР
	                |		КОГДА DR_ТочкиДоставки.Адр_Кварт &lt;&gt; """"
	                |			ТОГДА ""кв. "" + DR_ТочкиДоставки.Адр_Кварт + """"
	                |		ИНАЧЕ """"
	                |	КОНЕЦ КАК АдресГрузополучателя
	                |ИЗ
	                |	ДопРеквизитыORDER КАК ДопРеквизитыORDER
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	                |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
	                |			ПО (РеализацияТоваровУслуг.Ссылка = (ВЫРАЗИТЬ(СчетФактураВыданный.ДокументОснование КАК Документ.РеализацияТоваровУслуг)))
	                |		ПО (ДопРеквизитыORDER.Источник = РеализацияТоваровУслуг.Ссылка)
	                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_GLN КАК GLN_Контрагент
	                |		ПО (РеализацияТоваровУслуг.Контрагент = (ВЫРАЗИТЬ(GLN_Контрагент.Объект КАК Справочник.Контрагенты)))
	                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_GLN КАК GLN_Организация
	                |		ПО (РеализацияТоваровУслуг.Организация = (ВЫРАЗИТЬ(GLN_Организация.Объект КАК Справочник.Организации)))
	                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_ТочкиДоставки КАК DR_ТочкиДоставки
	                |		ПО (РеализацияТоваровУслуг.ДоговорКонтрагента = DR_ТочкиДоставки.Объект)
	                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_GLN КАК GLN_INVOICEPARTNER
	                |		ПО (ДопРеквизитыORDER.INVOICEPARTNER = GLN_INVOICEPARTNER.GLN)
	                |ГДЕ
	                |	РеализацияТоваровУслуг.Проведен
	                |	И GLN_Контрагент.Контрагент_УпдБезОснования = ЛОЖЬ
	                |	И СчетФактураВыданный.Проведен
	                |	И ПОДСТРОКА(GLN_Контрагент.Контрагент_ФорматЭСФ, 0, 9) = ""УПД Метро""";
	
	Запрос.УстановитьПараметр("Документ", Источник);
	
	РезультатЗапроса = Запрос.Выполнить(); 
	Результат = РезультатЗапроса.Выгрузить();
	
	EDIINTERCHANGEID = 0;
	
	СтрокиДляУдаления 	= Новый Массив;
	ДокументРеализации  = Неопределено;   
	
	//Получения значения главбух из доп констант(необходимо завести в доп константах EDI_ГлавБухINVOICE)
	ГлавныйБухгалтер = Настройка_Параметр_Прочитать("EDI_ГлавБухINVOICE", ""); 
		
	// Список для преобразования даты в строку
	ДатуВСтроку = Новый Соответствие;
	ДатуВСтроку.Вставить("DATE", "Строка.СЧФДата");
	ДатуВСтроку.Вставить("REFERENCEINVOICEDATE", "Строка.СЧФДата");
	ДатуВСтроку.Вставить("DELIVERYNOTEDATE", "Строка.Дата");
	
	
	// Список для преобразования числа в строку: Значение – реквизит в результате; Представление - путь, где хранится число;
	ЧислоВСтроку = Новый СписокЗначений;
	ЧислоВСтроку.Добавить("VATSUM"	            , "Строка.СуммаНДС");
	ЧислоВСтроку.Добавить("TAXABLEAMOUNT"	    , "Строка.СуммаБезНДС");
	ЧислоВСтроку.Добавить("POSITIONSAMOUNT"		, "Строка.СуммаБезНДС");
	ЧислоВСтроку.Добавить("GOODSTOTALAMOUNT"	, "Строка.СуммаБезНДС");
	ЧислоВСтроку.Добавить("INVOICETOTALAMOUNT"	, "Строка.СуммаСНДС");
	
	КвалификаторСтроки = Новый КвалификаторыСтроки(250,ДопустимаяДлина.Переменная);
	
	ДанныеТЧНоменклатурORDER = Новый ТаблицаЗначений;
	ДанныеТЧНоменклатурORDER.Колонки.Добавить("Накладная"				, Новый ОписаниеТипов("ДокументСсылка.РеализацияТоваровУслуг"));
	ДанныеТЧНоменклатурORDER.Колонки.Добавить("ЦенаВключаетНДС"			, Новый ОписаниеТипов("Булево"));
	ДанныеТЧНоменклатурORDER.Колонки.Добавить("Номенклатура"			, Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ДанныеТЧНоменклатурORDER.Колонки.Добавить("ORDERUNIT"				, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
	ДанныеТЧНоменклатурORDER.Колонки.Добавить("DESCRIPTION"				, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
	ДанныеТЧНоменклатурORDER.Колонки.Добавить("PRODUCT"					, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
	ДанныеТЧНоменклатурORDER.Колонки.Добавить("PRODUCTIDBUYER"			, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
	ДанныеТЧНоменклатурORDER.Колонки.Добавить("PRODUCTIDSUPPLIER"		, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
	ДанныеТЧНоменклатурORDER.Колонки.Добавить("ФорматУПД"				, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
	
	Для Каждого Строка Из Результат Цикл       
		
		Если ДокументРеализации = Строка.Ссылка Тогда
			СтрокиДляУдаления.Добавить(Строка);
			Продолжить;
		КонецЕсли;
		
		
		POSITION = Строка.POSITION.Получить(); 
		
		Для Каждого СтрокаНоменклатуры Из POSITION Цикл
			
			НоваяСтрокаНоменклатуры = ДанныеТЧНоменклатурORDER.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаНоменклатуры, СтрокаНоменклатуры); 
			
			НоваяСтрокаНоменклатуры.Накладная  = Строка.Ссылка;
			
		КонецЦикла;
		
		
		ДокументРеализации = Строка.Ссылка;  
		СчетФактура = Строка.СчетФактура;
		
		NUMBER = Эком_ПолучитьНомерНаПечать(СчетФактура, Истина, Ложь); //второй параметр убирает префикс, третий параметр убирает лидирующие нули.  
		НомерРеализации = Эком_ПолучитьНомерНаПечать(ДокументРеализации, Истина, Ложь); //второй параметр убирает префикс, третий параметр убирает лидирующие нули.  

		Строка.NUMBER 				    = NUMBER; 
		Строка.REFERENCEINVOICENUMBER 	= NUMBER;
		Строка.DELIVERYNOTENUMBER 	    = НомерРеализации;       
		
				
		Строка.SUPPLIERADRESS	= Строка.АдресОрганизации;  
		Строка.CONSEGNORADRESS 	= Строка.АдресОрганизации; ;  
		Строка.BUYERADRESS 	    = Строка.АдресГрузополучателя;  
		Строка.CONSIGNEEADRESS 	= Строка.АдресГрузополучателя;  
		
		Если ЗначениеЗАполнено(ГлавныйБухгалтер) Тогда                                                                                         
		     Строка.ACCOUNTING 	= ГлавныйБухгалтер;     
		КонецЕсли;      
		
		// Преобразование даты в строку и заполнение значения.
		Для Каждого ЗаписьДатуВСтроку Из ДатуВСтроку Цикл
			Строка[ЗаписьДатуВСтроку.Ключ] = Формат(Вычислить(ЗаписьДатуВСтроку.Значение), "ДФ=yyyy-MM-dd");
		КонецЦикла;
		
		// Преобразование числа в строку и заполнение значения.
		Для Каждого ЗаписьЧислоВСтроку Из ЧислоВСтроку Цикл
			
			ЗначениеЧисла = Вычислить(ЗаписьЧислоВСтроку.Представление);
			
			ЗначениеСтрокой = Формат(ЗначениеЧисла, "ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
			
			Строка[ЗаписьЧислоВСтроку.Значение] = ЗначениеСтрокой;
		КонецЦикла;
		
		EDIINTERCHANGEID = НовыйНомерТранзакции(EDIINTERCHANGEID);
		Строка.EDIINTERCHANGEID = Формат(EDIINTERCHANGEID, "ЧГ=0");
		
		// EDIMESSAGE.
		ГСЧ               = Новый ГенераторСлучайныхЧисел;
		СлучЧисло         = ГСЧ.СлучайноеЧисло(100, 999);
		Строка.EDIMESSAGE = Формат(ТекущаяДата(), "ДФ=ггггММддЧЧммсс000") + СлучЧисло + "-OUT-" + Строка.EDIINTERCHANGEID;
		
		Строка.ФайлИмя       = Строка.ВидДокумента + "_" + Строка.EDIMESSAGE + ".xml";
		Строка.Идентификатор = Строка.ВидДокумента + "_" + Строка.EDIMESSAGE;
		
	КонецЦикла;
	
	Для Каждого Строка Из СтрокиДляУдаления Цикл
		Результат.Удалить(Строка);
	КонецЦикла;
	
	#КонецОбласти
	
	#Область ТАБЛИЦА_Заполнение
	
	ЗапросНоменклатур = Новый Запрос;
	ЗапросНоменклатур.Текст = 
	"ВЫБРАТЬ
	|	ДанныеТЧНоменклатурORDER.Накладная КАК Ссылка,
	|	ДанныеТЧНоменклатурORDER.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ДанныеТЧНоменклатурORDER.Номенклатура КАК Номенклатура,
	|	ДанныеТЧНоменклатурORDER.ORDERUNIT КАК ORDERUNIT,
	|	ДанныеТЧНоменклатурORDER.DESCRIPTION КАК DESCRIPTION,
	|	ДанныеТЧНоменклатурORDER.PRODUCT КАК PRODUCT,
	|	ДанныеТЧНоменклатурORDER.PRODUCTIDBUYER КАК PRODUCTIDBUYER,
	|	ДанныеТЧНоменклатурORDER.PRODUCTIDSUPPLIER КАК PRODUCTIDSUPPLIER,
	|	ДанныеТЧНоменклатурORDER.ФорматУПД КАК ФорматУПД
	|ПОМЕСТИТЬ ТаблицаORDER
	|ИЗ
	|	&amp;ДанныеТЧНоменклатурORDER КАК ДанныеТЧНоменклатурORDER
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаORDER.Ссылка КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.Код КАК КодНоменклатуры,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаORDER.ЦенаВключаетНДС
	|			ТОГДА ВЫРАЗИТЬ((ТаблицаТовары.Сумма - ТаблицаТовары.СуммаНДС) / ТаблицаТовары.Количество КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ ТаблицаТовары.Цена
	|	КОНЕЦ КАК ЦенаБезНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаORDER.ЦенаВключаетНДС
	|			ТОГДА ТаблицаТовары.Цена
	|		ИНАЧЕ ВЫРАЗИТЬ((ТаблицаТовары.Сумма + ТаблицаТовары.СуммаНДС) / ТаблицаТовары.Количество КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК ЦенаСНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаORDER.ЦенаВключаетНДС
	|			ТОГДА ТаблицаТовары.Сумма - ТаблицаТовары.СуммаНДС
	|		ИНАЧЕ ТаблицаТовары.Сумма
	|	КОНЕЦ КАК СтоимостьБезНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаORDER.ЦенаВключаетНДС
	|			ТОГДА ТаблицаТовары.Сумма
	|		ИНАЧЕ ТаблицаТовары.Сумма + ТаблицаТовары.СуммаНДС
	|	КОНЕЦ КАК СтоимостьСНДС,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТовары.Номенклатура.Артикул КАК НоменклатураАртикул
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	ТаблицаORDER КАК ТаблицаORDER
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТовары
	|		ПО ТаблицаORDER.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаORDER.Номенклатура = ТаблицаТовары.Номенклатура
	|ГДЕ
	|	НЕ ТаблицаТовары.Номенклатура = &amp;ВидТара
	|	И ТаблицаТовары.Количество &gt; 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК POSITIONNUMBER,
	|	ТаблицаORDER.PRODUCT КАК PRODUCT,
	|	ВЫБОР
	|		КОГДА ТаблицаORDER.PRODUCTIDSUPPLIER ЕСТЬ NULL
	|				ИЛИ ТаблицаORDER.PRODUCTIDSUPPLIER = """"
	|			ТОГДА ТаблицаТовары.НоменклатураАртикул
	|		ИНАЧЕ ТаблицаORDER.PRODUCTIDSUPPLIER
	|	КОНЕЦ КАК PRODUCTIDSUPPLIER,
	|	ТаблицаORDER.PRODUCTIDBUYER КАК PRODUCTIDBUYER,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(20)) КАК INVOICEDQUANTITY,
	|	ТаблицаORDER.ORDERUNIT КАК INVOICEUNIT,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(20)) КАК UNITPRICE,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(20)) КАК GROSSPRICE,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(20)) КАК AMOUNT,
	|	ТаблицаORDER.DESCRIPTION КАК DESCRIPTION,
	|	""203"" КАК AMOUNTTYPE,
	|	""7"" КАК FUNCTION,
	|	""VAT"" КАК TAXTYPECODE,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(2)) КАК TAXRATE,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(20)) КАК TAXAMOUNT,
	|	""S"" КАК CATEGORY,
	|	ТаблицаORDER.Ссылка КАК Ссылка,
	|	ТаблицаORDER.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаORDER.ФорматУПД КАК ФорматУПД,
	|	ТаблицаТовары.ЦенаБезНДС КАК ЦенаБезНДС,
	|	ТаблицаТовары.ЦенаСНДС КАК ЦенаСНДС,
	|	ТаблицаТовары.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|	ТаблицаТовары.СтоимостьСНДС КАК СтоимостьСНДС,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС
	|ИЗ
	|	ТаблицаORDER КАК ТаблицаORDER
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТовары КАК ТаблицаТовары
	|		ПО (ТаблицаORDER.Ссылка = ТаблицаТовары.Ссылка)
	|			И (ТаблицаORDER.Номенклатура = ТаблицаТовары.Номенклатура)";
	
	ЗапросНоменклатур.УстановитьПараметр("ДанныеТЧНоменклатурORDER", ДанныеТЧНоменклатурORDER);
	ЗапросНоменклатур.УстановитьПараметр("ВидТара", Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Тара"));
	
	РезультатЗапросаНоменклатур = ЗапросНоменклатур.Выполнить();
	РезультатНоменклатур = РезультатЗапросаНоменклатур.Выгрузить();
	
	
	// Список для преобразования числа в строку: Значение – реквизит в результате; Представление - путь, где хранится число;
	// Пометка при Истина округляет число до 3х знаков после запятой, а Ложь - 2х.  
	
	ЧислоВСтроку.Очистить();    
	ЧислоВСтроку.Добавить("INVOICEDQUANTITY"	, "СтрокаНоменклатуры.Количество" , Истина);
	ЧислоВСтроку.Добавить("UNITPRICE"			, "СтрокаНоменклатуры.ЦенаБезНДС");
	ЧислоВСтроку.Добавить("GROSSPRICE"		    , "СтрокаНоменклатуры.ЦенаСНДС");
	ЧислоВСтроку.Добавить("AMOUNT"				, "СтрокаНоменклатуры.СтоимостьБезНДС");
	ЧислоВСтроку.Добавить("TAXAMOUNT"			, "СтрокаНоменклатуры.СуммаНДС");
	
	Для Каждого СтрокаНоменклатуры Из РезультатНоменклатур Цикл
		
		// Преобразование числа в строку и заполнение значения.
		Для Каждого ЗаписьЧислоВСтроку Из ЧислоВСтроку Цикл
			
			ЗначениеЧисла = Вычислить(ЗаписьЧислоВСтроку.Представление);
			
			Если ЗначениеЧисла = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			ЗначениеСтрокой = Формат(ЗначениеЧисла, "ЧДЦ=3; ЧРД=.; ЧГ=0; ЧН=");
			
			Если НЕ ЗаписьЧислоВСтроку.Пометка Тогда
				ЗначениеСтрокой = Формат(ЗначениеЧисла, "ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
			КонецЕсли;
			
			СтрокаНоменклатуры[ЗаписьЧислоВСтроку.Значение] = ЗначениеСтрокой;
			
		КонецЦикла;
		
		Если СтрокаНоменклатуры.СтавкаНДС &lt;&gt; Перечисления.СтавкиНДС.БезНДС Тогда
			СтрокаНоменклатуры.TAXRATE = Сред(Строка(СтрокаНоменклатуры.СтавкаНДС),1,2);
		КонецЕсли;
		
	КонецЦикла;
	
	#КонецОбласти
	
	#Область СОЗДАНИЕ_XML
	
	//Проверка наличия обязательных полей
	ОбязательныеКолонки = Новый СписокЗначений;
	
	//INVOICE
	ОбязательныеКолонки.Добавить("NUMBER"		, "NUMBER"			, Истина);
	ОбязательныеКолонки.Добавить("DATE"			, "DATE" 			, Истина);
	ОбязательныеКолонки.Добавить("ORDERNUMBER"	, "ORDERNUMBER" 	, Истина);
	ОбязательныеКолонки.Добавить("ORDERDATE"	, "ORDERDATE" 		, Истина);
	ОбязательныеКолонки.Добавить("DELIVERYDATE"	, "DELIVERYDATE" 	, Истина);
	
	//HEAD
	ОбязательныеКолонки.Добавить("SUPPLIER"			, "SUPPLIER"		, Истина);
	ОбязательныеКолонки.Добавить("BUYER"			, "BUYER"			, Истина);
	ОбязательныеКолонки.Добавить("RECIPIENT"		, "RECIPIENT"		, Истина);
	ОбязательныеКолонки.Добавить("DELIVERYPLACE"	, "DELIVERYPLACE"	, Истина);
	ОбязательныеКолонки.Добавить("SENDER"		 	, "SENDER"			, Истина);
	
	
	//POSITION
	ОбязательныеКолонки.Добавить("POSITIONNUMBER"	, "POSITIONNUMBER"		, Истина);
	ОбязательныеКолонки.Добавить("PRODUCT"			, "PRODUCT"				, Истина);
	ОбязательныеКолонки.Добавить("PRODUCTIDBUYER"	, "PRODUCTIDBUYER"		, Истина);
	ОбязательныеКолонки.Добавить("DESCRIPTION"		, "DESCRIPTION"			, Истина);
	ОбязательныеКолонки.Добавить("INVOICEDQUANTITY"	, "INVOICEDQUANTITY"	, Истина);
	ОбязательныеКолонки.Добавить("INVOICEUNIT"	    , "INVOICEUNIT"		    , Истина);
	ОбязательныеКолонки.Добавить("UNITPRICE"		, "UNITPRICE"			, Истина); 
	ОбязательныеКолонки.Добавить("AMOUNT"			, "AMOUNT"				, Истина); 
	
	
	МассивСтруктурИсходящих = Новый Массив;
	
	
	//Структура свойств шапки документа
	СтруктураШапка = Новый Структура("DOCUMENTNAME, NUMBER, DATE, DELIVERYDATE, CURRENCY, ORDERNUMBER, ORDERDATE, DELIVERYNOTENUMBER, DELIVERYNOTEDATE,
	| GOODSTOTALAMOUNT, POSITIONSAMOUNT, VATSUM, INVOICETOTALAMOUNT, TAXABLEAMOUNT, REFERENCEINVOICENUMBER, REFERENCEINVOICEDATE,  
	| FISCALNUMBER, REGISTRATIONNUMBER, CAMPAIGNNUMBER, MANAGER, TAXABLEAMOUNT, ACCOUNTING, VAT, HEAD");
	
	//Структура свойств элемента HEAD
	СтруктураHEAD = Новый Структура ("SUPPLIER, SUPPLIERNAME, SUPPLIERADRESS, SUPPLIERCITY, SUPPLIERZIP, BUYER, BUYERNAME, BUYERADRESS, BUYERCITY, BUYERZIP, BUYERKPP, BUYERINN,  
	| DELIVERYPLACE, CONSEGNOR, CONSEGNORNAME, CONSEGNORADRESS, CONSEGNORCITY, CONSEGNORZIP, INVOICEPARTNER, INVOICEPARTNERKPP, INVOICEPARTNERINN,      
	| CONSIGNEE, CONSIGNEENAME, CONSIGNEEADRESS, CONSIGNEECITY, CONSIGNEEZIP, CONSIGNEEKPP, CONSIGNEEINN, SENDER, RECIPIENT, 
	| BANKNAME, BANKMFONUMBER, BANKACCOUNT, EDIINTERCHANGEID, EDIMESSAGE, POSITION");
	
	
	
	//Имена свойств элемента POSITION
	СвойстваPOSITION = "POSITIONNUMBER, PRODUCT, PRODUCTIDSUPPLIER, PRODUCTIDBUYER, INVOICEDQUANTITY ,INVOICEUNIT,
	| UNITPRICE, GROSSPRICE, AMOUNT, DESCRIPTION, AMOUNTTYPE, TAX";   
	
	//Имена свойств структуры TAX
	ИменаСвойствTAX = "FUNCTION, TAXTYPECODE, TAXRATE, TAXAMOUNT, CATEGORY";					
	
	
	Для каждого СтрокаШапкиДокумента из Результат Цикл
		
		ТекстСообщенияПроверкиЗаполненияОбязательныхПолей = "";  
		
		//Заполнение структуры документа
		СтруктураДок = Новый Структура("INVOICE");
		
		СтруктураДок.INVOICE = СтруктураШапка;
		СтруктураШапка.HEAD = СтруктураHEAD;
		
		//Заполнение значений свойств шапки документа
		ЗаполнитьЗначенияСвойств(СтруктураШапка, СтрокаШапкиДокумента);
		
		//Заполнение значений свойств элемента HEAD
		ЗаполнитьЗначенияСвойств(СтруктураHEAD, СтрокаШапкиДокумента);
		
		МассивPOSITION = Новый Массив;
		
		ОтборСтрокНоменклатур = Новый Структура;
		ОтборСтрокНоменклатур.Вставить("Ссылка", СтрокаШапкиДокумента.Ссылка);
		
		СтрокиНоменклатурДокумента = РезультатНоменклатур.НайтиСтроки(ОтборСтрокНоменклатур);
		
		Для Каждого СтрокаНоменклатурыДокумента Из СтрокиНоменклатурДокумента Цикл
			
			//Создание структуры POSITION
			Структура = Новый Структура(СвойстваPOSITION); 
			
			Структура.TAX = Новый Структура(ИменаСвойствTAX); 
			
			//Заполнение значений свойств элемента POSITION
			ЗаполнитьЗначенияСвойств(Структура, СтрокаНоменклатурыДокумента); 
			
			//Заполнение значений свойств элемента POSITION-TAX
			ЗаполнитьЗначенияСвойств(Структура.TAX , СтрокаНоменклатурыДокумента); 
			
			МассивPOSITION.Добавить(Структура);
		КонецЦикла; 
		
		СтруктураHEAD.POSITION = МассивPOSITION;
		
		
		//Заполнение значений свойств элемента HIERARCHICALID
		//СтруктураPACKINGSEQUENCE.HIERARCHICALID = СтрокаШапкиДокумента.HIERARCHICALID;
		//СтруктураPACKINGSEQUENCE.POSITION = МассивPOSITION;
		
		//Создание XML строки
		XMLДокумент        	= Новый ЗаписьXML;		
		ПараметрыЗаписиXML 	= Новый ПараметрыЗаписиXML("UTF-8", "1.0", Истина, Ложь, Символы.Таб); 
		XMLДокумент.УстановитьСтроку("UTF-8");
		XMLДокумент.ЗаписатьОбъявлениеXML();
		
		Для каждого СтрокаЭлемента Из СтруктураДок Цикл
			ЗаписатьБлоки(XMLДокумент, СтрокаЭлемента, ОбязательныеКолонки, ТекстСообщенияПроверкиЗаполненияОбязательныхПолей);
		КонецЦикла;	
		
		СтрокаXML = XMLДокумент.Закрыть(); 
		
		
		Если ЗначениеЗаполнено(ТекстСообщенияПроверкиЗаполненияОбязательныхПолей) Тогда
			
			ТекстЛогаСобытий = ТекстСообщенияПроверкиЗаполненияОбязательныхПолей + Символы.ПС + "Документ был пропущен.";
			
			ДобавитьЗаписьВМассивЛога(МассивЛогаСобытий, ТекстЛогаСобытий, "Предупреждение", ИмяСобытия);
			
			Продолжить;	
		Иначе	
			
			СтруктураФайлаДанных = Новый Структура;
			СтруктураФайлаДанных.Вставить("ВидДокумента"			, "INVOICE_Исходящий");
			СтруктураФайлаДанных.Вставить("Документ"				, СтрокаШапкиДокумента.Ссылка);
			СтруктураФайлаДанных.Вставить("ИдентификаторЦепочки"	, СтрокаШапкиДокумента.ИдентификаторЦепочки);
			СтруктураФайлаДанных.Вставить("ИмяФайлаXML"				, СтрокаШапкиДокумента.ФайлИмя);
			СтруктураФайлаДанных.Вставить("КодировкаФайла"			, "UTF-8");
			СтруктураФайлаДанных.Вставить("Организация"				, СтрокаШапкиДокумента.Организация);
			СтруктураФайлаДанных.Вставить("Отправлен"				, НЕОПРЕДЕЛЕНО);
			СтруктураФайлаДанных.Вставить("Сообщение"				, "");
			СтруктураФайлаДанных.Вставить("Статус"					, СтрокаШапкиДокумента.Статус);
			СтруктураФайлаДанных.Вставить("СтрокаXML"				, СтрокаXML);
			СтруктураФайлаДанных.Вставить("ТипФайла"				, СтрокаШапкиДокумента.ВидДокумента);
			
			МассивСтруктурИсходящих.Добавить(СтруктураФайлаДанных);
			
		КонецЕсли;
		
	КонецЦикла;
	
	#КонецОбласти
	
	//Возврат Результат;				//раскомментировать для отображения значений таблицы "Результат" на вкладке "Тестирование"  
	//Возврат РезультатНоменклатур;		//раскомментировать для отображения значений таблицы "РезультатНоменклатур" на вкладке "Тестирование"
	
	Возврат МассивСтруктурИсходящих;
</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:string">Исходящий INVOICE</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">9</lastId>
			<item>
				<value xsi:type="xs:string">Прайс-лист</value>
				<id xsi:type="xs:decimal">0</id>
			</item>
			<item>
				<value xsi:type="xs:string">Поставщик</value>
				<presentation>СписокНакладныеИсходящиеПоставщик</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">1</id>
			</item>
			<item>
				<value xsi:type="xs:string">Неструкт. докум.</value>
				<id xsi:type="xs:decimal">2</id>
			</item>
			<item>
				<value xsi:type="xs:string">Покупатель</value>
				<id xsi:type="xs:decimal">3</id>
			</item>
			<item>
				<value xsi:type="xs:string">Синоним</value>
				<presentation>Исходящий INVOICE</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">4</id>
			</item>
			<item>
				<value xsi:type="xs:string">ИмяКнопки</value>
				<presentation>ИсходящийINVOICE</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">5</id>
			</item>
			<item>
				<value xsi:type="xs:string">ПередаватьТекстПричины</value>
				<id xsi:type="xs:decimal">6</id>
			</item>
			<item>
				<value xsi:type="xs:string">ПриемникВидДокумента</value>
				<presentation>INVOICE_Исходящий</presentation>
				<id xsi:type="xs:decimal">7</id>
			</item>
			<item>
				<value xsi:type="xs:string">ИсточникВидДокумента</value>
				<presentation>Накладная_Исходящая</presentation>
				<id xsi:type="xs:decimal">8</id>
			</item>
			<item>
				<value xsi:type="xs:string">НужнаПодпись</value>
				<presentation>Нет</presentation>
				<id xsi:type="xs:decimal">9</id>
			</item>
		</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:string">ИсходящийINVOICE</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">1</lastId>
			<item>
				<value xsi:type="xs:string">ТекстЗапроса =  
"ВЫБРАТЬ
|	DR_НАКЛАДНЫЕ.Документ КАК Документ,
|	""INVOICE_Исходящий"" КАК ВидДокумента,
|	"""" КАК СтатусОбработкиДокумента,
|	ПРЕДСТАВЛЕНИЕ(DR_НАКЛАДНЫЕ.Документ) КАК ПредставлениеДокумента,
|	DR_НАКЛАДНЫЕ.Документ.Проведен КАК Проведен,
|	DR_ЦепочкиДокументов.Контрагент КАК Контрагент,
|	DR_ЦепочкиДокументов.ТочкаДоставки КАК ТочкаДоставки,
|	DR_ЦепочкиДокументов.Организация КАК Организация,
|	DR_ЦепочкиДокументов.ИдентификаторЦепочки КАК ИдентификаторЦепочки
|ИЗ
|	РегистрСведений.DR_События КАК DR_НАКЛАДНЫЕ
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_INVOICE
|		ПО (DR_НАКЛАДНЫЕ.ИдентификаторЦепочки = DR_INVOICE.ИдентификаторЦепочки)
|			И (DR_НАКЛАДНЫЕ.Идентификатор = DR_INVOICE.ИдентификаторОснования)
|			И (DR_INVOICE.ВидДокумента = ""INVOICE_Исходящий"")
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_ЦепочкиДокументов КАК DR_ЦепочкиДокументов
|		ПО (DR_НАКЛАДНЫЕ.ИдентификаторЦепочки = DR_ЦепочкиДокументов.ИдентификаторЦепочки)
|ГДЕ
|	DR_НАКЛАДНЫЕ.ВидДокумента = ""Накладная_Исходящая""
|	И DR_НАКЛАДНЫЕ.Документ.Проведен
|	И DR_INVOICE.ИдентификаторЦепочки ЕСТЬ NULL";
</value>
				<presentation>ТекстЗапроса</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">0</id>
			</item>
			<item>
				<value xmlns:d5p1="http://v8.1c.ru/8.1/data/enterprise" xsi:type="d5p1:JobSchedule" BeginDate="2024-04-12" EndDate="0001-01-01" BeginTime="00:00:00" EndTime="00:00:00" CompletionTime="00:00:00" CompletionInterval="0" RepeatPeriodInDay="1800" RepeatPause="0" WeekDayInMonth="0" DayInMonth="0" WeeksPeriod="1" DaysRepeatPeriod="0">
					<d5p1:WeekDays>1 2 3 4 5 6 7</d5p1:WeekDays>
					<d5p1:Months/>
				</value>
				<presentation>Расписание</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">1</id>
			</item>
		</Value>
	</row>
</ValueTree>