<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ТипТранзакции</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Данные</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Исходящий DESADV</Value>
		<Value xsi:type="xs:string">Исходящий DESADV</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:string">#Область ШАПКА_Заполнение

Запрос = Новый Запрос;
Запрос.Текст =  "ВЫБРАТЬ
                |	ВЫРАЗИТЬ(DR_События.Документ КАК Документ.РеализацияТоваровУслуг) КАК Источник,
                |	DR_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
                |	DR_События.ИдентификаторОснования КАК ИдентификаторОснования
                |ПОМЕСТИТЬ DRСобытияИсточник
                |ИЗ
                |	РегистрСведений.DR_События КАК DR_События
                |ГДЕ
                |	DR_События.Документ В(&amp;Документ)
                |	И DR_События.ВидДокумента = ""Накладная_Исходящая""
                |;
                |
                |////////////////////////////////////////////////////////////////////////////////
                |ВЫБРАТЬ
                |	DRСобытияИсточник.Источник КАК Источник,
                |	DRСобытияИсточник.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
                |	DRСобытияИсточник.ИдентификаторОснования КАК ИдентификаторОснования,
                |	ВЫРАЗИТЬ(DR_События_ORDER.Документ КАК Документ.DR_Документ) КАК ORDER
                |ПОМЕСТИТЬ DRСобытияORDER
                |ИЗ
                |	DRСобытияИсточник КАК DRСобытияИсточник
                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_События_Заказ
                |		ПО DRСобытияИсточник.ИдентификаторЦепочки = DR_События_Заказ.ИдентификаторЦепочки
                |			И (DR_События_Заказ.ВидДокумента = ""Заказ_Входящий"")
                |			И DRСобытияИсточник.ИдентификаторОснования = DR_События_Заказ.Идентификатор
                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_События_ORDER
                |		ПО DRСобытияИсточник.ИдентификаторЦепочки = DR_События_ORDER.ИдентификаторЦепочки
                |			И (DR_События_ORDER.ВидДокумента = ""ORDER_Входящий"")
                |			И (DR_События_Заказ.ИдентификаторОснования = DR_События_ORDER.Идентификатор)
                |			И (DR_События_ORDER.Статус = ""Обработан"")
                |;
                |
                |////////////////////////////////////////////////////////////////////////////////
                |ВЫБРАТЬ
                |	DRСобытияORDER.Источник КАК Источник,
                |	DRСобытияORDER.Источник.СуммаВключаетНДС КАК СуммаВключаетНДС,
                |	DRСобытияORDER.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
                |	DRСобытияORDER.ИдентификаторОснования КАК ИдентификаторОснования,
                |	DRСобытияORDER.ORDER КАК ORDER,
                |	СУММА(ВЫБОР
                |			КОГДА DRСобытияORDER.Источник.СуммаВключаетНДС
                |				ТОГДА РеализацияТовары.Сумма - РеализацияТовары.СуммаНДС
                |			ИНАЧЕ РеализацияТовары.Сумма
                |		КОНЕЦ) КАК СуммаБезНДС,
                |	СУММА(ВЫБОР
                |			КОГДА DRСобытияORDER.Источник.СуммаВключаетНДС
                |				ТОГДА РеализацияТовары.Сумма
                |			ИНАЧЕ РеализацияТовары.Сумма + РеализацияТовары.СуммаНДС
                |		КОНЕЦ) КАК СуммаСНДС,
                |	СУММА(РеализацияТовары.СуммаНДС) КАК СуммаНДС
                |ПОМЕСТИТЬ ТоварыИтоги
                |ИЗ
                |	DRСобытияORDER КАК DRСобытияORDER
                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТовары
                |		ПО DRСобытияORDER.Источник = РеализацияТовары.Ссылка
                |
                |СГРУППИРОВАТЬ ПО
                |	DRСобытияORDER.Источник,
                |	DRСобытияORDER.Источник.СуммаВключаетНДС,
                |	DRСобытияORDER.ИдентификаторЦепочки,
                |	DRСобытияORDER.ИдентификаторОснования,
                |	DRСобытияORDER.ORDER
                |;
                |
                |////////////////////////////////////////////////////////////////////////////////
                |ВЫБРАТЬ
                |	ТоварыИтоги.Источник КАК Источник,
                |	ТоварыИтоги.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
                |	ТоварыИтоги.ИдентификаторОснования КАК ИдентификаторОснования,
                |	ТоварыИтоги.СуммаВключаетНДС КАК СуммаВключаетНДС,
                |	ТоварыИтоги.СуммаБезНДС КАК СуммаБезНДС,
                |	ТоварыИтоги.СуммаСНДС КАК СуммаСНДС,
                |	ТоварыИтоги.СуммаНДС КАК СуммаНДС,
                |	ТоварыИтоги.ORDER КАК ORDER,
                |	ВЫРАЗИТЬ(ORDERNUMBER.Значение КАК СТРОКА(25)) КАК ORDERNUMBER,
                |	ВЫРАЗИТЬ(ORDERDATE.Значение КАК СТРОКА(10)) КАК ORDERDATE,
                |	ВЫРАЗИТЬ(CAMPAIGNNUMBER.Значение КАК СТРОКА(250)) КАК CAMPAIGNNUMBER,
                |	ВЫРАЗИТЬ(DELIVERYDATE.Значение КАК СТРОКА(10)) КАК DELIVERYDATE,
                |	ВЫРАЗИТЬ(DELIVERYTIME.Значение КАК СТРОКА(5)) КАК DELIVERYTIME,
                |	ВЫРАЗИТЬ(FRESH.Значение КАК СТРОКА(1)) КАК FRESH,
                |	ВЫРАЗИТЬ(REASONDECREACEQUANTITYALL.Значение КАК СТРОКА(5)) КАК REASONDECREACEQUANTITYALL,
                |	ВЫРАЗИТЬ(INFO.Значение КАК СТРОКА(250)) КАК INFO,
                |	ВЫРАЗИТЬ(SENDER.Значение КАК СТРОКА(13)) КАК SENDER,
                |	POSITION.ХранилищеЗначения КАК POSITION
                |ПОМЕСТИТЬ ДопРеквизитыORDER
                |ИЗ
                |	ТоварыИтоги КАК ТоварыИтоги
                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК ORDERNUMBER
                |		ПО ТоварыИтоги.ORDER = ORDERNUMBER.Ссылка
                |			И (ORDERNUMBER.Реквизит = ""NUMBER"")
                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК ORDERDATE
                |		ПО ТоварыИтоги.ORDER = ORDERDATE.Ссылка
                |			И (ORDERDATE.Реквизит = ""DATE"")
                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК CAMPAIGNNUMBER
                |		ПО ТоварыИтоги.ORDER = CAMPAIGNNUMBER.Ссылка
                |			И (CAMPAIGNNUMBER.Реквизит = ""CAMPAIGNNUMBER"")
                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК DELIVERYDATE
                |		ПО ТоварыИтоги.ORDER = DELIVERYDATE.Ссылка
                |			И (DELIVERYDATE.Реквизит = ""DELIVERYDATE"")
                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК DELIVERYTIME
                |		ПО ТоварыИтоги.ORDER = DELIVERYTIME.Ссылка
                |			И (DELIVERYTIME.Реквизит = ""DELIVERYTIME"")
                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК FRESH
                |		ПО ТоварыИтоги.ORDER = FRESH.Ссылка
                |			И (FRESH.Реквизит = ""FRESH"")
                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК REASONDECREACEQUANTITYALL
                |		ПО ТоварыИтоги.ORDER = REASONDECREACEQUANTITYALL.Ссылка
                |			И (REASONDECREACEQUANTITYALL.Реквизит = ""REASONDECREACEQUANTITYALL"")
                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК INFO
                |		ПО ТоварыИтоги.ORDER = INFO.Ссылка
                |			И (INFO.Реквизит = ""INFO"")
                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК SENDER
                |		ПО ТоварыИтоги.ORDER = SENDER.Ссылка
                |			И (SENDER.Реквизит = ""SENDER"")
                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК POSITION
                |		ПО ТоварыИтоги.ORDER = POSITION.Ссылка
                |			И (POSITION.Реквизит = ""POSITION"")
                |;
                |
                |////////////////////////////////////////////////////////////////////////////////
                |ВЫБРАТЬ
                |	ДопРеквизитыORDER.Источник КАК Ссылка,
                |	РеализацияТоваровУслуг.Дата КАК Дата,
                |	ДопРеквизитыORDER.СуммаВключаетНДС КАК СуммаВключаетНДС,
                |	РеализацияТоваровУслуг.Организация КАК Организация,
                |	ДопРеквизитыORDER.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
                |	ДопРеквизитыORDER.ИдентификаторОснования КАК ИдентификаторОснования,
                |	ДопРеквизитыORDER.ORDER КАК ORDER,
                |	ДопРеквизитыORDER.СуммаБезНДС КАК СуммаБезНДС,
                |	ДопРеквизитыORDER.СуммаСНДС КАК СуммаСНДС,
                |	ДопРеквизитыORDER.СуммаНДС КАК СуммаНДС,
                |	ДопРеквизитыORDER.ORDERNUMBER КАК ORDERNUMBER,
                |	ДопРеквизитыORDER.ORDERDATE КАК ORDERDATE,
                |	ДопРеквизитыORDER.CAMPAIGNNUMBER КАК CAMPAIGNNUMBER,
                |	ДопРеквизитыORDER.DELIVERYDATE КАК DELIVERYDATE,
                |	ДопРеквизитыORDER.DELIVERYTIME КАК DELIVERYTIME,
                |	ДопРеквизитыORDER.FRESH КАК FRESH,
                |	ДопРеквизитыORDER.REASONDECREACEQUANTITYALL КАК REASONDECREACEQUANTITYALL,
                |	ДопРеквизитыORDER.INFO КАК INFO,
                |	ДопРеквизитыORDER.POSITION КАК POSITION,
                |	GLN_Контрагент.Контрагент_ФорматЭСФ КАК ФорматУПД,
                |	GLN_Контрагент.GLN КАК BUYER,
                |	GLN_Организация.GLN КАК SUPPLIER,
                |	GLN_Организация.GLN КАК SENDER,
                |	ДопРеквизитыORDER.SENDER КАК RECIPIENT,
                |	DR_ТочкиДоставки.GLN КАК DELIVERYPLACE,
                |	ВЫРАЗИТЬ("""" КАК СТРОКА(35)) КАК NUMBER,
                |	ВЫРАЗИТЬ("""" КАК СТРОКА(10)) КАК DATE,
                |	ВЫРАЗИТЬ("""" КАК СТРОКА(35)) КАК DELIVERYNOTENUMBER,
                |	ВЫРАЗИТЬ("""" КАК СТРОКА(10)) КАК DELIVERYNOTEDATE,
                |	ВЫРАЗИТЬ("""" КАК СТРОКА(30)) КАК WAYBILLNUMBER,
                |	ВЫРАЗИТЬ("""" КАК СТРОКА(10)) КАК WAYBILLDATE,
                |	ВЫРАЗИТЬ("""" КАК СТРОКА(70)) КАК TRANSPORTMARK,
                |	ВЫРАЗИТЬ("""" КАК СТРОКА(16)) КАК TRANSPORTERPHONE,
                |	ВЫРАЗИТЬ("""" КАК СТРОКА(70)) КАК TRANSPORTID,
                |	ВЫРАЗИТЬ("""" КАК СТРОКА(70)) КАК TRANSPORTERNAME,
                |	ВЫРАЗИТЬ("""" КАК СТРОКА(70)) КАК TRAILERNUMBER,
                |	""30"" КАК TRANSPORTTYPE,
                |	""31"" КАК TRANSPORTERTYPE,                
                |	ВЫРАЗИТЬ("""" КАК СТРОКА(20)) КАК TOTALWITHOUTVAT,
                |	ВЫРАЗИТЬ("""" КАК СТРОКА(20)) КАК TOTALWITHVAT,
                |	ВЫРАЗИТЬ("""" КАК СТРОКА(20)) КАК TOTALVAT,                
                |	ВЫРАЗИТЬ("""" КАК СТРОКА(300)) КАК EDIMESSAGE,
                |	ВЫРАЗИТЬ("""" КАК СТРОКА(20)) КАК EDIINTERCHANGEID,
                |	""1"" КАК HIERARCHICALID,
                |	ВЫРАЗИТЬ("""" КАК СТРОКА(300)) КАК ФайлИмя,
                |	ВЫРАЗИТЬ("""" КАК СТРОКА(300)) КАК Идентификатор,
                |	""Отправлен"" КАК Статус,
                |	""DESADV"" КАК ВидДокумента
                |ИЗ
                |	ДопРеквизитыORDER КАК ДопРеквизитыORDER
                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
                |		ПО ДопРеквизитыORDER.Источник = РеализацияТоваровУслуг.Ссылка
                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_GLN КАК GLN_Контрагент
                |		ПО (РеализацияТоваровУслуг.Контрагент = GLN_Контрагент.Объект)
                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_GLN КАК GLN_Организация
                |		ПО (РеализацияТоваровУслуг.Организация = GLN_Организация.Объект)
                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_ТочкиДоставки КАК DR_ТочкиДоставки
                |		ПО (РеализацияТоваровУслуг.Грузополучатель = DR_ТочкиДоставки.Объект)";
                
Запрос.УстановитьПараметр("Документ", Источник);

РезультатЗапроса = Запрос.Выполнить(); 
Результат = РезультатЗапроса.Выгрузить();

EDIINTERCHANGEID = 0;

СтрокиДляУдаления 	= Новый Массив;
ДокументРеализации  = Неопределено;

ДатуВСтроку = Новый Соответствие;
ДатуВСтроку.Вставить("DATE"				, "Строка.Дата");
ДатуВСтроку.Вставить("DELIVERYNOTEDATE"	, "Строка.Дата");
ДатуВСтроку.Вставить("WAYBILLDATE"		, "Строка.Дата");

// Список для преобразования числа в строку: Значение – реквизит в результате; Представление - путь, где хранится число;
ЧислоВСтроку = Новый СписокЗначений;
ЧислоВСтроку.Добавить("TOTALWITHOUTVAT"	, "Строка.СуммаБезНДС");
ЧислоВСтроку.Добавить("TOTALWITHVAT"	, "Строка.СуммаСНДС");
ЧислоВСтроку.Добавить("TOTALVAT"		, "Строка.СуммаНДС");

КвалификаторСтроки = Новый КвалификаторыСтроки(250,ДопустимаяДлина.Переменная);

ДанныеТЧНоменклатурORDER = Новый ТаблицаЗначений;
ДанныеТЧНоменклатурORDER.Колонки.Добавить("Накладная"				, Новый ОписаниеТипов("ДокументСсылка.РеализацияТоваровУслуг"));
ДанныеТЧНоменклатурORDER.Колонки.Добавить("СуммаВключаетНДС"		, Новый ОписаниеТипов("Булево"));
ДанныеТЧНоменклатурORDER.Колонки.Добавить("Номенклатура"			, Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
ДанныеТЧНоменклатурORDER.Колонки.Добавить("ORDERUNIT"				, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
ДанныеТЧНоменклатурORDER.Колонки.Добавить("КоличествоЗаказанное"	, Новый ОписаниеТипов("Число"));
ДанныеТЧНоменклатурORDER.Колонки.Добавить("КоличествоВУпаковке"		, Новый ОписаниеТипов("Число"));
ДанныеТЧНоменклатурORDER.Колонки.Добавить("DESCRIPTION"				, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
ДанныеТЧНоменклатурORDER.Колонки.Добавить("PRODUCT"					, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
ДанныеТЧНоменклатурORDER.Колонки.Добавить("PRODUCTIDBUYER"			, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
ДанныеТЧНоменклатурORDER.Колонки.Добавить("PRODUCTIDSUPPLIER"		, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
ДанныеТЧНоменклатурORDER.Колонки.Добавить("CALIBRE"					, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
ДанныеТЧНоменклатурORDER.Колонки.Добавить("REASONDECREACEQUANTITY"	, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
ДанныеТЧНоменклатурORDER.Колонки.Добавить("ХЗ_PACKING"				, Новый ОписаниеТипов("ХранилищеЗначения"));
ДанныеТЧНоменклатурORDER.Колонки.Добавить("ФорматУПД"				, Новый ОписаниеТипов("Строка", КвалификаторСтроки));

Для Каждого Строка Из Результат Цикл 
	
	POSITION = Строка.POSITION.Получить(); 
	
	Для Каждого СтрокаНоменклатуры Из POSITION Цикл
		
		НоваяСтрокаНоменклатуры = ДанныеТЧНоменклатурORDER.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаНоменклатуры, СтрокаНоменклатуры); 
				
		НоваяСтрокаНоменклатуры.Накладная  = Строка.Ссылка;
		
		Если СтрокаНоменклатуры.Свойство("PACKING") Тогда 
			НоваяСтрокаНоменклатуры.ХЗ_PACKING = Новый ХранилищеЗначения(СтрокаНоменклатуры.PACKING);
		КонецЕсли;
		
		НоваяСтрокаНоменклатуры.КоличествоЗаказанное = СтрокаНоменклатуры.ORDEREDQUANTITY;
		
		Если СтрокаНоменклатуры.Свойство("QUANTITYOFCUINTU") Тогда 
			НоваяСтрокаНоменклатуры.КоличествоВУпаковке = СтрокаНоменклатуры.QUANTITYOFCUINTU;
		КонецЕсли;
		
	КонецЦикла;

    Если ДокументРеализации = Строка.Ссылка Тогда
        СтрокиДляУдаления.Добавить(Строка);
        Продолжить;
    КонецЕсли;
    
    ДокументРеализации = Строка.Ссылка;
	
	NUMBER = Эком_ПолучитьНомерНаПечать(ДокументРеализации, Истина, Ложь); //второй параметр убирает префикс, третий параметр убирает лидирующие нули.
	
	Строка.NUMBER 				= NUMBER;
	Строка.DELIVERYNOTENUMBER 	= NUMBER;
	Строка.WAYBILLNUMBER 		= NUMBER;
	
     // Преобразование даты в строку и заполнение значения.
    Для Каждого ЗаписьДатуВСтроку Из ДатуВСтроку Цикл
        Строка[ЗаписьДатуВСтроку.Ключ] = Формат(Вычислить(ЗаписьДатуВСтроку.Значение), "ДФ=yyyy-MM-dd");
    КонецЦикла;
    
    // Преобразование числа в строку и заполнение значения.
    Для Каждого ЗаписьЧислоВСтроку Из ЧислоВСтроку Цикл
        
        ЗначениеЧисла = Вычислить(ЗаписьЧислоВСтроку.Представление);
        
        ЗначениеСтрокой = Формат(ЗначениеЧисла, "ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
        
        Строка[ЗаписьЧислоВСтроку.Значение] = ЗначениеСтрокой;
    КонецЦикла;

    EDIINTERCHANGEID = НовыйНомерТранзакции(EDIINTERCHANGEID);
    Строка.EDIINTERCHANGEID = Формат(EDIINTERCHANGEID, "ЧГ=0");

    // EDIMESSAGE.
    ГСЧ               = Новый ГенераторСлучайныхЧисел;
    СлучЧисло         = ГСЧ.СлучайноеЧисло(100, 999);
    Строка.EDIMESSAGE = Формат(ТекущаяДата(), "ДФ=ггггММддЧЧммсс000") + СлучЧисло + "-OUT-" + Строка.EDIINTERCHANGEID;

    Строка.ФайлИмя       = Строка.ВидДокумента + "_" + Строка.EDIMESSAGE + ".xml";
    Строка.Идентификатор = Строка.ВидДокумента + "_" + Строка.EDIMESSAGE;

КонецЦикла;

Для Каждого Строка Из СтрокиДляУдаления Цикл
    Результат.Удалить(Строка);
КонецЦикла;

#КонецОбласти
 
#Область ТАБЛИЦА_Заполнение

ЗапросНоменклатур = Новый Запрос;
ЗапросНоменклатур.Текст = 
"ВЫБРАТЬ
|	ДанныеТЧНоменклатурORDER.Накладная КАК Ссылка,
|	ДанныеТЧНоменклатурORDER.СуммаВключаетНДС КАК СуммаВключаетНДС,
|	ДанныеТЧНоменклатурORDER.Номенклатура КАК Номенклатура,
|	ДанныеТЧНоменклатурORDER.ORDERUNIT КАК ORDERUNIT,
|	ДанныеТЧНоменклатурORDER.КоличествоЗаказанное КАК КоличествоЗаказанное,
|	ДанныеТЧНоменклатурORDER.КоличествоВУпаковке КАК КоличествоВУпаковке,
|	ДанныеТЧНоменклатурORDER.DESCRIPTION КАК DESCRIPTION,
|	ДанныеТЧНоменклатурORDER.PRODUCT КАК PRODUCT,
|	ДанныеТЧНоменклатурORDER.PRODUCTIDBUYER КАК PRODUCTIDBUYER,
|	ДанныеТЧНоменклатурORDER.PRODUCTIDSUPPLIER КАК PRODUCTIDSUPPLIER,
|	ДанныеТЧНоменклатурORDER.CALIBRE КАК CALIBRE,
|	ДанныеТЧНоменклатурORDER.REASONDECREACEQUANTITY КАК REASONDECREACEQUANTITY,
|	ДанныеТЧНоменклатурORDER.ХЗ_PACKING КАК ХЗ_PACKING,
|	ДанныеТЧНоменклатурORDER.ФорматУПД КАК ФорматУПД
|ПОМЕСТИТЬ ТаблицаORDER
|ИЗ
|	&amp;ДанныеТЧНоменклатурORDER КАК ДанныеТЧНоменклатурORDER
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ТаблицаORDER.Ссылка КАК Ссылка,
|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
|	ТаблицаТовары.Номенклатура КАК Номенклатура,
|	ТаблицаТовары.Номенклатура.Код КАК КодНоменклатуры,
|	ТаблицаТовары.Количество КАК Количество,
|	ВЫБОР
|		КОГДА ТаблицаORDER.СуммаВключаетНДС
|			ТОГДА ВЫРАЗИТЬ((ТаблицаТовары.Сумма - ТаблицаТовары.СуммаНДС) / ТаблицаТовары.Количество КАК ЧИСЛО(15, 2))
|		ИНАЧЕ ТаблицаТовары.Цена
|	КОНЕЦ КАК ЦенаБезНДС,
|	ВЫБОР
|		КОГДА ТаблицаORDER.СуммаВключаетНДС
|			ТОГДА ТаблицаТовары.Цена
|		ИНАЧЕ ВЫРАЗИТЬ((ТаблицаТовары.Сумма + ТаблицаТовары.СуммаНДС) / ТаблицаТовары.Количество КАК ЧИСЛО(15, 2))
|	КОНЕЦ КАК ЦенаСНДС,
|	ВЫБОР
|		КОГДА ТаблицаORDER.СуммаВключаетНДС
|			ТОГДА ТаблицаТовары.Сумма - ТаблицаТовары.СуммаНДС
|		ИНАЧЕ ТаблицаТовары.Сумма
|	КОНЕЦ КАК СтоимостьБезНДС,
|	ВЫБОР
|		КОГДА ТаблицаORDER.СуммаВключаетНДС
|			ТОГДА ТаблицаТовары.Сумма
|		ИНАЧЕ ТаблицаТовары.Сумма + ТаблицаТовары.СуммаНДС
|	КОНЕЦ КАК СтоимостьСНДС,
|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС
|ПОМЕСТИТЬ ТаблицаТовары
|ИЗ
|	ТаблицаORDER КАК ТаблицаORDER
|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТовары
|		ПО ТаблицаORDER.Ссылка = ТаблицаТовары.Ссылка
|			И ТаблицаORDER.Номенклатура = ТаблицаТовары.Номенклатура
|ГДЕ
|	НЕ ТаблицаТовары.Номенклатура = &amp;ВидТара
|	И ТаблицаТовары.Количество &gt; 0
|
|ИНДЕКСИРОВАТЬ ПО
|	Ссылка,
|	Номенклатура
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ТаблицаORDER.Ссылка КАК Ссылка,
|	ТаблицаТовары.НомерСтроки КАК POSITIONNUMBER,
|	ТаблицаORDER.Номенклатура КАК Номенклатура,
|	ТаблицаORDER.ORDERUNIT КАК ORDERUNIT,
|	ТаблицаORDER.ORDERUNIT КАК DELIVEREDUNIT,
|	ТаблицаORDER.КоличествоЗаказанное КАК КоличествоЗаказанное,
|	ТаблицаORDER.КоличествоВУпаковке КАК КоличествоВУпаковке,
|	ТаблицаORDER.DESCRIPTION КАК DESCRIPTION,
|	ТаблицаORDER.PRODUCT КАК PRODUCT,
|	ТаблицаORDER.PRODUCTIDBUYER КАК PRODUCTIDBUYER,
|	ЕСТЬNULL(ТаблицаORDER.PRODUCTIDSUPPLIER, ТаблицаТовары.КодНоменклатуры) КАК PRODUCTIDSUPPLIER,
|	ТаблицаORDER.CALIBRE КАК CALIBRE,
|	ТаблицаORDER.REASONDECREACEQUANTITY КАК REASONDECREACEQUANTITY,
|	ТаблицаORDER.ХЗ_PACKING КАК ХЗ_PACKING,
|	ТаблицаORDER.ФорматУПД КАК ФорматУПД,
|	ТаблицаТовары.Количество КАК КоличествоПоставляемое,
|	ТаблицаТовары.ЦенаБезНДС КАК ЦенаБезНДС,
|	ТаблицаТовары.ЦенаСНДС КАК ЦенаСНДС,
|	ТаблицаТовары.СтоимостьБезНДС КАК СтоимостьБезНДС,
|	ТаблицаТовары.СтоимостьСНДС КАК СтоимостьСНДС,
|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
|	ВЫРАЗИТЬ("""" КАК СТРОКА(20)) КАК ORDEREDQUANTITY,
|	ВЫРАЗИТЬ("""" КАК СТРОКА(20)) КАК DELIVEREDQUANTITY,
|	ВЫРАЗИТЬ("""" КАК СТРОКА(20)) КАК QUANTITYOFCUINTU,
|	ВЫРАЗИТЬ("""" КАК СТРОКА(20)) КАК PRICE,
|	ВЫРАЗИТЬ("""" КАК СТРОКА(20)) КАК PRICEWITHVAT,
|	ВЫРАЗИТЬ("""" КАК СТРОКА(20)) КАК AMOUNT,
|	ВЫРАЗИТЬ("""" КАК СТРОКА(20)) КАК AMOUNTWITHVAT,
|	ВЫРАЗИТЬ("""" КАК СТРОКА(20)) КАК TAXAMOUNT,
|	ВЫРАЗИТЬ("""" КАК СТРОКА(2)) КАК TAXRATE
|ИЗ
|	ТаблицаORDER КАК ТаблицаORDER
|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТовары КАК ТаблицаТовары
|		ПО ТаблицаORDER.Ссылка = ТаблицаТовары.Ссылка
|			И ТаблицаORDER.Номенклатура = ТаблицаТовары.Номенклатура";

ЗапросНоменклатур.УстановитьПараметр("ДанныеТЧНоменклатурORDER", ДанныеТЧНоменклатурORDER);
ЗапросНоменклатур.УстановитьПараметр("ВидТара", Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Тара"));

РезультатЗапросаНоменклатур = ЗапросНоменклатур.Выполнить();
РезультатНоменклатур = РезультатЗапросаНоменклатур.Выгрузить();

РезультатНоменклатур.Колонки.Добавить("PACKING", Новый ОписаниеТипов("Массив"));

// Список для преобразования числа в строку: Значение – реквизит в результате; Представление - путь, где хранится число;
// Пометка при Истина округляет число до 3х знаков после запятой, а Ложь - 2х.
ЧислоВСтроку.Очистить();
ЧислоВСтроку.Добавить("ORDEREDQUANTITY"		, "СтрокаНоменклатуры.КоличествоЗаказанное"		, Истина);
ЧислоВСтроку.Добавить("DELIVEREDQUANTITY"	, "СтрокаНоменклатуры.КоличествоПоставляемое"	, Истина);
ЧислоВСтроку.Добавить("QUANTITYOFCUINTU"	, "СтрокаНоменклатуры.КоличествоВУпаковке"		, Истина);
ЧислоВСтроку.Добавить("PRICE"				, "СтрокаНоменклатуры.ЦенаБезНДС");
ЧислоВСтроку.Добавить("PRICEWITHVAT"		, "СтрокаНоменклатуры.ЦенаСНДС");
ЧислоВСтроку.Добавить("AMOUNT"				, "СтрокаНоменклатуры.СтоимостьБезНДС");
ЧислоВСтроку.Добавить("AMOUNTWITHVAT"		, "СтрокаНоменклатуры.СтоимостьСНДС");
ЧислоВСтроку.Добавить("TAXAMOUNT"			, "СтрокаНоменклатуры.СуммаНДС");

Для Каждого СтрокаНоменклатуры Из РезультатНоменклатур Цикл
	
	// Преобразование числа в строку и заполнение значения.
    Для Каждого ЗаписьЧислоВСтроку Из ЧислоВСтроку Цикл
        
        ЗначениеЧисла = Вычислить(ЗаписьЧислоВСтроку.Представление);
		
		Если ЗначениеЧисла = 0 Тогда
			Продолжить;
		КонецЕсли;
		
        ЗначениеСтрокой = Формат(ЗначениеЧисла, "ЧДЦ=3; ЧРД=.; ЧГ=0; ЧН=");
        
        Если НЕ ЗаписьЧислоВСтроку.Пометка Тогда
            ЗначениеСтрокой = Формат(ЗначениеЧисла, "ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
        КонецЕсли;
        
        СтрокаНоменклатуры[ЗаписьЧислоВСтроку.Значение] = ЗначениеСтрокой;
    
    КонецЦикла;
    
    Если СтрокаНоменклатуры.СтавкаНДС &lt;&gt; Перечисления.СтавкиНДС.БезНДС Тогда
    	СтрокаНоменклатуры.TAXRATE = Сред(Строка(СтрокаНоменклатуры.СтавкаНДС),1,2);
    КонецЕсли;
    
    ArrayPACKING = СтрокаНоменклатуры.ХЗ_PACKING.Получить();
	СтрокаНоменклатуры.PACKING = ?(ArrayPACKING &lt;&gt; Неопределено, ArrayPACKING, Новый Массив);	

КонецЦикла;

#КонецОбласти

#Область СОЗДАНИЕ_XML
 
//Проверка наличия обязательных полей
ОбязательныеКолонки = Новый СписокЗначений;

//DESADV
ОбязательныеКолонки.Добавить("NUMBER"		, "NUMBER"			, Истина);
ОбязательныеКолонки.Добавить("DATE"			, "DATE" 			, Истина);
ОбязательныеКолонки.Добавить("ORDERNUMBER"	, "ORDERNUMBER" 	, Истина);
ОбязательныеКолонки.Добавить("ORDERDATE"	, "ORDERDATE" 		, Истина);
ОбязательныеКолонки.Добавить("DELIVERYDATE"	, "DELIVERYDATE" 	, Истина);

//HEAD
ОбязательныеКолонки.Добавить("SUPPLIER"			, "SUPPLIER"		, Истина);
ОбязательныеКолонки.Добавить("BUYER"			, "BUYER"			, Истина);
ОбязательныеКолонки.Добавить("RECIPIENT"		, "RECIPIENT"		, Истина);
ОбязательныеКолонки.Добавить("DELIVERYPLACE"	, "DELIVERYPLACE"	, Истина);
ОбязательныеКолонки.Добавить("SENDER"		 	, "SENDER"			, Истина);

ОбязательныеКолонки.Добавить("HIERARCHICALID"	, "HIERARCHICALID"	, Истина);

//POSITION
ОбязательныеКолонки.Добавить("POSITIONNUMBER"	, "POSITIONNUMBER"		, Истина);
ОбязательныеКолонки.Добавить("PRODUCT"			, "PRODUCT"				, Истина);
ОбязательныеКолонки.Добавить("PRODUCTIDBUYER"	, "PRODUCTIDBUYER"		, Истина);
ОбязательныеКолонки.Добавить("DESCRIPTION"		, "DESCRIPTION"			, Истина);
ОбязательныеКолонки.Добавить("ORDEREDQUANTITY"	, "ORDEREDQUANTITY"		, Истина);
ОбязательныеКолонки.Добавить("ACCEPTEDQUANTITY"	, "DELIVEREDQUANTITY"	, Истина);
ОбязательныеКолонки.Добавить("DELIVEREDUNIT"	, "DELIVEREDUNIT"		, Истина);
ОбязательныеКолонки.Добавить("PRICE"			, "PRICE"				, Истина); 
ОбязательныеКолонки.Добавить("AMOUNT"			, "AMOUNT"				, Истина); 
	

МассивСтруктурИсходящих = Новый Массив;

               
//Структура свойств шапки документа
СтруктураШапка = Новый Структура("NUMBER, DATE, ORDERNUMBER, ORDERDATE, DELIVERYDATE, DELIVERYTIME, DELIVERYNOTENUMBER, DELIVERYNOTEDATE,
								| WAYBILLNUMBER, WAYBILLDATE, TRANSPORTMARK, TRANSPORTERPHONE, TRANSPORTID, TRANSPORTERNAME, 
								| TRAILERNUMBER, TRANSPORTTYPE, TRANSPORTERTYPE, TOTALWITHOUTVAT, TOTALWITHVAT, TOTALVAT, 
								| CAMPAIGNNUMBER, DOCTYPE, FRESH, REASONDECREACEQUANTITYALL, EGAISNUMBER, INFO, HEAD");
									
//Структура свойств элемента HEAD
СтруктураHEAD = Новый Структура("SUPPLIER, BUYER, DELIVERYPLACE, SENDER, RECIPIENT, EDIINTERCHANGEID, EDIMESSAGE, PACKINGSEQUENCE");	

//Структура свойств элемента PACKINGSEQUENCE
СтруктураPACKINGSEQUENCE = Новый Структура("HIERARCHICALID, POSITION");
                                                                                                                            
//Имена свойств элемента POSITION
СвойстваPOSITION = "POSITIONNUMBER, PRODUCT, PRODUCTIDBUYER, PRODUCTIDSUPPLIER, ORDEREDQUANTITY, DELIVEREDQUANTITY, QUANTITYOFCUINTU,
					| ORDERUNIT, DELIVEREDUNIT, PRICE, PRICEWITHVAT, TAXRATE, TAXAMOUNT, AMOUNT, AMOUNTWITHVAT, DESCRIPTION,
					| COUNTRYORIGIN, SHELFLIFEDATE, EXPIREDATE, VETDOCUMENT, REASONDECREACEQUANTITY, CALIBRE, PACKING, INFO";
			
	
	Для каждого СтрокаШапкиДокумента из Результат Цикл

		ТекстСообщенияПроверкиЗаполненияОбязательныхПолей = "";  
	    
	    //Заполнение структуры документа
		СтруктураДок = Новый Структура("DESADV");
	    
	    СтруктураДок.DESADV = СтруктураШапка;
	    СтруктураШапка.HEAD = СтруктураHEAD;
	    СтруктураHEAD.PACKINGSEQUENCE = СтруктураPACKINGSEQUENCE;
	    
		//Заполнение значений свойств шапки документа
		ЗаполнитьЗначенияСвойств(СтруктураШапка, СтрокаШапкиДокумента);
	
		//Заполнение значений свойств элемента HEAD
		ЗаполнитьЗначенияСвойств(СтруктураHEAD, СтрокаШапкиДокумента);
	
		МассивPOSITION = Новый Массив;
	    
	    ОтборСтрокНоменклатур = Новый Структура;
		ОтборСтрокНоменклатур.Вставить("Ссылка", СтрокаШапкиДокумента.Ссылка);
	
		СтрокиНоменклатурДокумента = РезультатНоменклатур.НайтиСтроки(ОтборСтрокНоменклатур);
		
		Для Каждого СтрокаНоменклатурыДокумента Из СтрокиНоменклатурДокумента Цикл
			
			//Создание структуры POSITION
			Структура = Новый Структура(СвойстваPOSITION);
			
			//Заполнение значений свойств элемента POSITION
			ЗаполнитьЗначенияСвойств(Структура, СтрокаНоменклатурыДокумента);
			
			МассивPOSITION.Добавить(Структура);
		КонецЦикла;
		
		//Заполнение значений свойств элемента HIERARCHICALID
		СтруктураPACKINGSEQUENCE.HIERARCHICALID = СтрокаШапкиДокумента.HIERARCHICALID;
		СтруктураPACKINGSEQUENCE.POSITION = МассивPOSITION;
	    
		//Создание XML строки
		XMLДокумент        	= Новый ЗаписьXML;		
		ПараметрыЗаписиXML 	= Новый ПараметрыЗаписиXML("UTF-8", "1.0", Истина, Ложь, Символы.Таб); 
		XMLДокумент.УстановитьСтроку("UTF-8");
		XMLДокумент.ЗаписатьОбъявлениеXML();
		
		Для каждого СтрокаЭлемента Из СтруктураДок Цикл
			ЗаписатьБлоки(XMLДокумент, СтрокаЭлемента, ОбязательныеКолонки, ТекстСообщенияПроверкиЗаполненияОбязательныхПолей);
		КонецЦикла;	

			СтрокаXML = XMLДокумент.Закрыть(); 
			
			
			Если ЗначениеЗаполнено(ТекстСообщенияПроверкиЗаполненияОбязательныхПолей) Тогда
			
				ТекстЛогаСобытий = ТекстСообщенияПроверкиЗаполненияОбязательныхПолей + Символы.ПС + "Документ был пропущен.";
			
				ДобавитьЗаписьВМассивЛога(МассивЛогаСобытий, ТекстЛогаСобытий, "Предупреждение", ИмяСобытия);
			
			Продолжить;	
		Иначе	
			
			СтруктураФайлаДанных = Новый Структура;
			СтруктураФайлаДанных.Вставить("ВидДокумента"			, "DESADV_Исходящий");
			СтруктураФайлаДанных.Вставить("Документ"				, СтрокаШапкиДокумента.Ссылка);
			СтруктураФайлаДанных.Вставить("ИдентификаторЦепочки"	, СтрокаШапкиДокумента.ИдентификаторЦепочки);
			СтруктураФайлаДанных.Вставить("ИмяФайлаXML"				, СтрокаШапкиДокумента.ФайлИмя);
			СтруктураФайлаДанных.Вставить("КодировкаФайла"			, "UTF-8");
			СтруктураФайлаДанных.Вставить("Организация"				, СтрокаШапкиДокумента.Организация);
			СтруктураФайлаДанных.Вставить("Отправлен"				, НЕОПРЕДЕЛЕНО);
			СтруктураФайлаДанных.Вставить("Сообщение"				, "");
			СтруктураФайлаДанных.Вставить("Статус"					, СтрокаШапкиДокумента.Статус);
			СтруктураФайлаДанных.Вставить("СтрокаXML"				, СтрокаXML);
			СтруктураФайлаДанных.Вставить("ТипФайла"				, СтрокаШапкиДокумента.ВидДокумента);
			
			МассивСтруктурИсходящих.Добавить(СтруктураФайлаДанных);
			
		КонецЕсли;
	
КонецЦикла;

#КонецОбласти

//Возврат Результат;				//раскомментировать для отображения значений таблицы "Результат" на вкладке "Тестирование"  
//Возврат РезультатНоменклатур;		//раскомментировать для отображения значений таблицы "РезультатНоменклатур" на вкладке "Тестирование"

Возврат МассивСтруктурИсходящих;</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">7</lastId>
			<item>
				<value xsi:type="xs:string">Прайс-лист</value>
				<id xsi:type="xs:decimal">0</id>
			</item>
			<item>
				<value xsi:type="xs:string">Поставщик</value>
				<presentation>СписокНакладнаяПоставщик</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">1</id>
			</item>
			<item>
				<value xsi:type="xs:string">Покупатель</value>
				<id xsi:type="xs:decimal">2</id>
			</item>
			<item>
				<value xsi:type="xs:string">ИмяКнопки</value>
				<presentation>Исходящий DESADV</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">3</id>
			</item>
			<item>
				<value xsi:type="xs:string">ПередаватьТекстПричины</value>
				<id xsi:type="xs:decimal">4</id>
			</item>
			<item>
				<value xsi:type="xs:string">ПриемникВидДокумента</value>
				<presentation>DESADV_Исходящий</presentation>
				<id xsi:type="xs:decimal">5</id>
			</item>
			<item>
				<value xsi:type="xs:string">ИсточникВидДокумента</value>
				<presentation>Накладная_Исходящая</presentation>
				<id xsi:type="xs:decimal">6</id>
			</item>
			<item>
				<value xsi:type="xs:string">НужнаПодпись</value>
				<presentation>Нет</presentation>
				<id xsi:type="xs:decimal">7</id>
			</item>
		</Value>
		<Value xsi:type="xs:string"/>
	</row>
</ValueTree>