<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ТипТранзакции</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Данные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ИмяКнопки</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Регламент</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Исходящий DP_IZVPOL_23 Покупатель</Value>
		<Value xsi:type="xs:string">МассивСтруктурИсходящих = Новый Массив;

///МЧД
ЗапросМЧД = Новый Запрос;
ЗапросМЧД.Текст = ТекстЗапроса_МЧД_ПоОрганизациям();
ЗапросМЧД.УстановитьПараметр("ЭтоРегламентноеЗадание", ЭтоРегламентноеЗадание); 
ЗапросМЧД.УстановитьПараметр("Пользователь", НайтиТекущегоПользователя()); 
ЗапросМЧД.УстановитьПараметр("ТекущаяДата", ТекущаяДата()); 
ТаблицаМЧД = ЗапросМЧД.Выполнить().Выгрузить();
///

//ТипДокумента
ТипФайла = "DP_IZVPOL";

ПериодСвязиДокументов = DR_EDI_ОбщегоНазначения.Настройка_Параметр_Прочитать("EDI_ПериодСвязиДокументов"); 

Запрос = Новый Запрос;
Запрос.Текст = 
"ВЫБРАТЬ
|	ТаблицаМЧД.Организация КАК Организация,
|	ТаблицаМЧД.Сертификат КАК Сертификат,
|	ТаблицаМЧД.СертификатИНН КАК СертификатИНН,
|	ТаблицаМЧД.СертификатНаСервере КАК СертификатНаСервере,
|	ТаблицаМЧД.ДолжностьПодписанта КАК ДолжностьПодписанта,
|	ТаблицаМЧД.ФамилияПодписанта КАК ФамилияПодписанта,
|	ТаблицаМЧД.ИмяПодписанта КАК ИмяПодписанта,
|	ТаблицаМЧД.ОтчествоПодписанта КАК ОтчествоПодписанта,
|	ТаблицаМЧД.ОбластьПолномочий КАК ОбластьПолномочий,
|	ТаблицаМЧД.ОснованиеПолномочий КАК ОснованиеПолномочий,
|	ТаблицаМЧД.СтатусПодписанта КАК СтатусПодписанта,
|	ТаблицаМЧД.Организация_ПоддерживаетМЧД КАК Организация_ПоддерживаетМЧД,
|	ТаблицаМЧД.ТипСертификата КАК ТипСертификата,
|	ТаблицаМЧД.МЧД_Актуальна КАК МЧД_Актуальна
|ПОМЕСТИТЬ ВТ_DR_МЧД
|ИЗ
|	&amp;ТаблицаМЧД КАК ТаблицаМЧД
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	DR_Документ.Ссылка КАК Ссылка,
|	DR_Документ.ДанныеЭЦП КАК ДанныеЭЦП,
|	DR_Документ.Представление КАК СчетФактураПредставление,
|	Источник_События.ДатаЗаписи КАК ОснованиеДатаТранзакции,
|	DR_ИдФайл.Значение КАК ОснованиеИмяФайла,
|	""DP_IZVPOL_23"" КАК ТипИзвещения,
|	""ЮЗД"" КАК ТипОснованияИзвещения,
|	DR_ЦепочкиДокументов.Организация КАК Организация,
|	ВЫРАЗИТЬ(DR_ЦепочкиДокументов.Контрагент КАК Справочник.Контрагенты).ИНН КАК ПолучательИНН,
|	ВЫРАЗИТЬ(DR_ЦепочкиДокументов.Контрагент КАК Справочник.Контрагенты).КПП КАК ПолучательКПП,
|	DR_ЦепочкиДокументов.Контрагент КАК Контрагент,
|	"""" КАК ПолучательТип,
|	ВЫРАЗИТЬ(DR_ЦепочкиДокументов.Контрагент КАК Справочник.Контрагенты).Наименование КАК ПолучательНаименование,
|	ВЫРАЗИТЬ(DR_ЦепочкиДокументов.Контрагент КАК Справочник.Контрагенты).НаименованиеПолное КАК ПолучательНаимПолное,
|	"""" КАК ОтправительТип,
|	ВЫРАЗИТЬ(DR_ЦепочкиДокументов.Организация КАК Справочник.Организации).Наименование КАК ОтправительНаименование,
|	ВЫРАЗИТЬ(DR_ЦепочкиДокументов.Организация КАК Справочник.Организации).НаименованиеПолное КАК ОтправительНаимПолное,
|	ВЫРАЗИТЬ(DR_ЦепочкиДокументов.Организация КАК Справочник.Организации).ИНН КАК ОтправительИНН,
|	DR_Документ.Номер КАК НомерДокумента,
|	DR_Документ.Дата КАК ДатаДокумента,
|	"""" КАК ОтправительКПП,
|	Источник_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
|	DR_ИдФайл.Значение КАК Идентификатор
|ПОМЕСТИТЬ ДокументыДляОтправки
|ИЗ
|	РегистрСведений.DR_События КАК Источник_События
//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК IZVPOL_События
//|		ПО (Источник_События.ИдентификаторЦепочки = IZVPOL_События.ИдентификаторЦепочки)
//|			И (IZVPOL_События.ВидДокумента = ""DP_IZVPOL_23_Исходящий"")
//|			И (Источник_События.Документ = IZVPOL_События.Документ)
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_ЦепочкиДокументов КАК DR_ЦепочкиДокументов
|		ПО (Источник_События.ИдентификаторЦепочки = DR_ЦепочкиДокументов.ИдентификаторЦепочки)
|			И (РАЗНОСТЬДАТ(DR_ЦепочкиДокументов.ДатаЗаказа, Источник_События.ДатаЗаписи, ДЕНЬ) МЕЖДУ 0 И &amp;ПериодСвязиДокументов)
|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ КАК DR_Документ
|		ПО (Источник_События.Документ = DR_Документ.Ссылка)
|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК DR_ИдФайл
|		ПО (DR_Документ.Ссылка = DR_ИдФайл.Ссылка)
|			И (DR_ИдФайл.Реквизит = ""ИдФайл"")
|ГДЕ
|	Источник_События.Документ В(&amp;Документ)
|	И Источник_События.ВидДокумента = ""DP_PRANNUL_22_Входящий""
|	И Источник_События.Статус = ""Обработан""
//|	И IZVPOL_События.ИдентификаторЦепочки ЕСТЬ NULL
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ДокументыДляОтправки.Ссылка КАК Ссылка,
|	ДокументыДляОтправки.ДанныеЭЦП КАК ДанныеЭЦП,
|	ДокументыДляОтправки.СчетФактураПредставление КАК СчетФактураПредставление,
|	ДокументыДляОтправки.ОснованиеДатаТранзакции КАК ОснованиеДатаТранзакции,
|	ДокументыДляОтправки.ОснованиеИмяФайла КАК ОснованиеИмяФайла,
|	ДокументыДляОтправки.ТипИзвещения КАК ТипИзвещения,
|	ДокументыДляОтправки.ТипОснованияИзвещения КАК ТипОснованияИзвещения,
|	ДокументыДляОтправки.Организация КАК Организация,
|	ВЫБОР
|		КОГДА DR_GLN_Организация.ПоддерживаетМЧД = ИСТИНА
|				И DR_GLN_Контрагент.ПоддерживаетМЧД = ИСТИНА
|			ТОГДА DR_МЧД.Сертификат
|		ИНАЧЕ DR_GLN_Организация.Сертификат
|	КОНЕЦ КАК ОрганизацияСертификат,
|	ВЫБОР
|		КОГДА DR_GLN_Организация.ПоддерживаетМЧД = ИСТИНА
|				И DR_GLN_Контрагент.ПоддерживаетМЧД = ИСТИНА
|			ТОГДА DR_МЧД.СертификатНаСервере
|		ИНАЧЕ DR_СертификатНаСервере.Значение
|	КОНЕЦ КАК СертификатНаСервере,
|	ВЫБОР
|		КОГДА DR_GLN_Организация.ПоддерживаетМЧД = ИСТИНА
|				И DR_GLN_Контрагент.ПоддерживаетМЧД = ИСТИНА
|			ТОГДА DR_МЧД.ДолжностьПодписанта
|		ИНАЧЕ DR_ДолжностьПодписанта.Значение
|	КОНЕЦ КАК ОрганизацияДолжностьПодписанта,
|	ВЫБОР
|		КОГДА DR_GLN_Организация.ПоддерживаетМЧД = ИСТИНА
|				И DR_GLN_Контрагент.ПоддерживаетМЧД = ИСТИНА
|			ТОГДА DR_МЧД.ИмяПодписанта
|		ИНАЧЕ DR_ИмяПодписанта.Значение
|	КОНЕЦ КАК ОрганизацияИмяПодписанта,
|	ВЫБОР
|		КОГДА DR_GLN_Организация.ПоддерживаетМЧД = ИСТИНА
|				И DR_GLN_Контрагент.ПоддерживаетМЧД = ИСТИНА
|			ТОГДА DR_МЧД.ФамилияПодписанта
|		ИНАЧЕ DR_ФамилияПодписанта.Значение
|	КОНЕЦ КАК ОрганизацияФамилияПодписанта,
|	ВЫБОР
|		КОГДА DR_GLN_Организация.ПоддерживаетМЧД = ИСТИНА
|				И DR_GLN_Контрагент.ПоддерживаетМЧД = ИСТИНА
|			ТОГДА DR_МЧД.ОтчествоПодписанта
|		ИНАЧЕ DR_ОтчествоПодписанта.Значение
|	КОНЕЦ КАК ОрганизацияОтчествоПодписанта,
|	ДокументыДляОтправки.ПолучательТип КАК ПолучательТип,
|	DR_GLN_Контрагент.Ид_ОЭД КАК ПолучательИдОЭД,
|	ПартнерИдентификатор.Значение КАК ПолучательОператорИд,
|	ДокументыДляОтправки.ПолучательНаименование КАК ПолучательНаименование,
|	ДокументыДляОтправки.ПолучательНаимПолное КАК ПолучательНаимПолное,
|	ДокументыДляОтправки.ПолучательИНН КАК ПолучательИНН,
|	ДокументыДляОтправки.ПолучательКПП КАК ПолучательКПП,
|	ДокументыДляОтправки.ОтправительТип КАК ОтправительТип,
|	DR_GLN_Организация.Ид_ОЭД КАК ОтправительИдОЭД,
|	ОправительИдентификатор.Значение КАК ОтправительОператорИд,
|	ДокументыДляОтправки.ОтправительНаименование КАК ОтправительНаименование,
|	ДокументыДляОтправки.ОтправительНаимПолное КАК ОтправительНаимПолное,
|	ДокументыДляОтправки.ОтправительИНН КАК ОтправительИНН,
|	ДокументыДляОтправки.ОтправительКПП КАК ОтправительКПП,
|	DR_ФамилияПодписанта.Значение КАК ОтправительФамилияПодписанта,
|	DR_ИмяПодписанта.Значение КАК ОтправительИмяПодписанта,
|	DR_ОтчествоПодписанта.Значение КАК ОтправительОтчествоПодписанта,
|	ДокументыДляОтправки.Контрагент КАК Контрагент,
|	ДокументыДляОтправки.НомерДокумента КАК НомерДокумента,
|	ДокументыДляОтправки.ДатаДокумента КАК ДатаДокумента,
|	ДокументыДляОтправки.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
|	ДокументыДляОтправки.Идентификатор КАК ИдентификаторОснования,
|	DR_GLN_Контрагент.ПоддерживаетМЧД
|		И DR_GLN_Организация.ПоддерживаетМЧД
|		И DR_МЧД.ТипСертификата = 2 КАК ОтправитьМЧД,
|	DR_МЧД.МЧД_Актуальна КАК МЧД_Актуальна
|ИЗ
|	ДокументыДляОтправки КАК ДокументыДляОтправки
|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.DR_GLN КАК DR_GLN_Контрагент
|		ПО ДокументыДляОтправки.Контрагент = DR_GLN_Контрагент.Объект
|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.DR_Настройки.ДополнительныеРеквизиты КАК ПартнерИдентификатор
|		ПО (DR_GLN_Контрагент.Партнер = ПартнерИдентификатор.Ссылка)
|			И (ПартнерИдентификатор.Реквизит = ""Идентификатор"")
|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.DR_GLN КАК DR_GLN_Организация
|		ПО ДокументыДляОтправки.Организация = DR_GLN_Организация.Объект
|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.DR_Настройки.ДополнительныеРеквизиты КАК DR_СертификатНаСервере
|		ПО (DR_GLN_Организация.Сертификат = DR_СертификатНаСервере.Ссылка)
|			И (DR_СертификатНаСервере.Реквизит = ""СертификатНаСервере"")
|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.DR_Настройки.ДополнительныеРеквизиты КАК DR_ДолжностьПодписанта
|		ПО (DR_GLN_Организация.Сертификат = DR_ДолжностьПодписанта.Ссылка)
|			И (DR_ДолжностьПодписанта.Реквизит = ""ДолжностьПодписанта"")
|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.DR_Настройки.ДополнительныеРеквизиты КАК DR_ИмяПодписанта
|		ПО (DR_GLN_Организация.Сертификат = DR_ИмяПодписанта.Ссылка)
|			И (DR_ИмяПодписанта.Реквизит = ""ИмяПодписанта"")
|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.DR_Настройки.ДополнительныеРеквизиты КАК DR_ФамилияПодписанта
|		ПО (DR_GLN_Организация.Сертификат = DR_ФамилияПодписанта.Ссылка)
|			И (DR_ФамилияПодписанта.Реквизит = ""ФамилияПодписанта"")
|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.DR_Настройки.ДополнительныеРеквизиты КАК DR_ОтчествоПодписанта
|		ПО (DR_GLN_Организация.Сертификат = DR_ОтчествоПодписанта.Ссылка)
|			И (DR_ОтчествоПодписанта.Реквизит = ""ОтчествоПодписанта"")
|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.DR_Настройки.ДополнительныеРеквизиты КАК ОправительИдентификатор
|		ПО (DR_GLN_Организация.Партнер = ОправительИдентификатор.Ссылка)
|			И (ОправительИдентификатор.Реквизит = ""Идентификатор"")
|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_DR_МЧД КАК DR_МЧД
|		ПО ДокументыДляОтправки.Организация = DR_МЧД.Организация";

Запрос.УстановитьПараметр("Документ"			, Источник);
Запрос.УстановитьПараметр("ТаблицаМЧД"			, ТаблицаМЧД);
Запрос.УстановитьПараметр("ПериодСвязиДокументов", ПериодСвязиДокументов);

РезультатЗапроса = Запрос.Выполнить();
ВыборкаДокумент = РезультатЗапроса.Выбрать();

СтруктураМетаДанных = ЮрФизЛицоОпределитьМетаданные();

// По умолчанию тип берем из ЭКОМ документа
ИмяТипаОрганизации = "Организации";
Если НЕ ЗначениеЗаполнено(ИмяТипаОрганизации) Тогда
	ИмяТипаОрганизации = "Организации";
КонецЕсли;		
МетаданныеОрганизацииКПП = Метаданные.Справочники[ИмяТипаОрганизации].Реквизиты.Найти("КПП");

Пока ВыборкаДокумент.Следующий() Цикл
	
	ИмяСобытия = "Формирование квитанции " + ВыборкаДокумент.ТипИзвещения; // DP_IZVPOL"; //Docrobot 1.19.0 MOD-1377 [2 этап]
	
	Если ВыборкаДокумент.ОтправитьМЧД = Истина И (НЕ ВыборкаДокумент.МЧД_Актуальна) Тогда
		ТекстЛогаСобытий = "Не определена МЧД для текущего пользователя по организации! - " + Строка(ВыборкаДокумент.Организация);			
		ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Ошибка", ИмяСобытия);
		МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
		Продолжить;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаДокумент.ОрганизацияСертификат) Тогда 
		ТекстЛогаСобытий = "Не найден сертификат\мчд по организации " + Строка(ВыборкаДокумент.Организация) 
				+ ", необходимо проверить настройки в карточке организации.";
		ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Ошибка", ИмяСобытия);
		МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
		
		Продолжить;
	КонецЕсли;
	
	Отправитель_ИД_ЭДО = СокрЛП(ВыборкаДокумент.ОтправительОператорИд) + СокрЛП(ВыборкаДокумент.ОтправительИдОЭД);
	Получатель_ИД_ЭДО  = СокрЛП(ВыборкаДокумент.ПолучательОператорИд) + СокрЛП(ВыборкаДокумент.ПолучательИдОЭД);
	
	GUIDФайла = Новый УникальныйИдентификатор;
	ИдФайл    = ТипФайла + "_" + Получатель_ИД_ЭДО + "_" + Отправитель_ИД_ЭДО + "_" + Формат(ТекущаяДата(), "ДФ=yyyyMMdd") + "_" + GUIDФайла;
	ФайлИмя   = ИдФайл + ".xml";
	
	// Получаю из хранилища двоичные данные подписи из основания извещения
	ОснованиеЭЦП = ВыборкаДокумент.ДанныеЭЦП.Получить();
	
	Если НЕ ЗначениеЗаполнено(ОснованиеЭЦП) Тогда
		ТекстЛогаСобытий = "Для " + ВыборкаДокумент.ТипИзвещения + " ЭЦП не определен! " + ВыборкаДокумент.ТипИзвещения + " на " 
		+ ВыборкаДокумент.ТипОснованияИзвещения + " отправлен не будет! (1852) - " + ВыборкаДокумент.СчетФактураПредставление;			
		ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Ошибка", ИмяСобытия);
		МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
		
		Продолжить;			
	КонецЕсли;	
			
	ОшибкаВФормировании = Ложь;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаДокумент.Организация) Тогда		
		ТекстЛогаСобытий = "Для " + ВыборкаДокумент.ТипИзвещения + " Не заполнена организация! - " + ВыборкаДокумент.СчетФактураПредставление;
		ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Ошибка", ИмяСобытия);
		МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
		
		ОшибкаВФормировании = Истина;			
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаДокумент.Контрагент) Тогда		
		ТекстЛогаСобытий = "Для " + ВыборкаДокумент.ТипИзвещения + " Не заполнен контрагент! - " + ВыборкаДокумент.СчетФактураПредставление;
		ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Ошибка", ИмяСобытия);
		МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
		
		ОшибкаВФормировании = Истина;			
	КонецЕсли;
	
	Если ОшибкаВФормировании Тогда
		Продолжить;
	КонецЕсли;
	
	// &lt;&lt;&lt; Файл - 1 уровень
	УзелНачальный = Новый Структура;
	СписокАтрибутов = Новый СписокЗначений;
	СписокАтрибутов.Добавить("ИдФайл"  , ИдФайл);
	СписокАтрибутов.Добавить("ВерсПрог", "Ecom");
	СписокАтрибутов.Добавить("ВерсФорм", "1.03");
	УзелНачальный.Вставить("Атрибут", СписокАтрибутов);
	
	// &lt;&lt;&lt; Документ - 2 уровень
	ДокументУзел = Новый Структура;
	УзелНачальный.Вставить("Документ", ДокументУзел);	
	СписокАтрибутов = Новый СписокЗначений;
	СписокАтрибутов.Добавить("КНД", "1115110");
	ДокументУзел.Вставить("Атрибут", СписокАтрибутов);
	
	// &lt;&lt;&lt; УчастЭДО - 3 уровень
	УчастЭДОУзел = Новый Структура;
	ДокументУзел.Вставить("УчастЭДО", УчастЭДОУзел);	
	СписокАтрибутов = Новый СписокЗначений;
	СписокАтрибутов.Добавить("ИдУчастЭДО", Отправитель_ИД_ЭДО);
	УчастЭДОУзел.Вставить("Атрибут", СписокАтрибутов);
	
	// ОтправительТип
	ЭтоЮрЛицоОрганизации = ЮрФизЛицоОпределитьТипОбъекта(ВыборкаДокумент.Организация, СтруктураМетаДанных.ИмяРеквизитаорганизации, СтруктураМетаДанных.ПеречислениеЮрЛицо);
	
	Если ЭтоЮрЛицоОрганизации Тогда	
		
		ОтправительКПП = "";
		Если НЕ МетаданныеОрганизацииКПП = Неопределено Тогда
			ОтправительКПП = ВыборкаДокумент.Организация.КПП; 
		Иначе
			ОтправительКПП = Настройка_Параметр_Прочитать("EDI_КПП_Организации", "", "РеквизитДляОрганизации");
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ОтправительКПП) Тогда
			ТекстЛогаСобытий = "Для " + ВыборкаДокумент.ТипИзвещения + " Не заполнен КПП организации (Настройка - справочники Организации - поле КПП)! - "
			+ Строка(ВыборкаДокумент.Организация);
			ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Ошибка", ИмяСобытия);
			МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
			
			Продолжить;
		КонецЕсли;
		
		// &lt;&lt;&lt; ЮЛ - 4 уровень
		УчастЭДО_ЮЛ = Новый Структура;
		УчастЭДОУзел.Вставить("ЮЛ", УчастЭДО_ЮЛ);
		СписокАтрибутов = Новый СписокЗначений;
		СписокАтрибутов.Добавить("НаимОрг", ВыборкаДокумент.ОтправительНаименование);
		СписокАтрибутов.Добавить("ИННЮЛ"  , ВыборкаДокумент.ОтправительИНН);
		СписокАтрибутов.Добавить("КПП"    , ОтправительКПП);
		УчастЭДО_ЮЛ.Вставить("Атрибут", СписокАтрибутов); 			
		
	Иначе
		// &lt;&lt;&lt; ИП - 4 уровень
		УчастЭДО_ИП = Новый Структура;
		УчастЭДОУзел.Вставить("ИП", УчастЭДО_ИП);
		СписокАтрибутов = Новый СписокЗначений;
		СписокАтрибутов.Добавить("ИННФЛ", ВыборкаДокумент.ОтправительИНН);
		УчастЭДО_ИП.Вставить("Атрибут", СписокАтрибутов);
		
		// &lt;&lt;&lt; ФИО - 5 уровень
		УчастЭДО_ИП_ФИО = Новый Структура;
		УчастЭДО_ИП.Вставить("ФИО", УчастЭДО_ИП_ФИО);
		
		ФИО = СтрЗаменить(ВыборкаДокумент.ОтправительНаимПолное, "ИП ", "");
		ФИО = СтрЗаменить(ФИО, "Индивидуальный Предприниматель ", "");
		ФИО = СтрЗаменить(ФИО, "Индивидуальный предприниматель ", "");
		ФИО = СтрЗаменить(ФИО, " ", Символы.ПС);
		ФИО = СтрЗаменить(ФИО, """", "");
		
		СписокАтрибутов = Новый СписокЗначений;
		СписокАтрибутов.Добавить("Фамилия" , СтрПолучитьСтроку(ФИО,1));
		СписокАтрибутов.Добавить("Имя"     , СтрПолучитьСтроку(ФИО,2));
		СписокАтрибутов.Добавить("Отчество", СтрПолучитьСтроку(ФИО,3));
		УчастЭДО_ИП_ФИО.Вставить("Атрибут", СписокАтрибутов);  			
		
	КонецЕсли;
	
	// &lt;&lt;&lt; СвИзвПолуч - 3 уровень
	СвИзвПолуч = Новый Структура;
	ДокументУзел.Вставить("СвИзвПолуч", СвИзвПолуч);	
	СписокАтрибутов = Новый СписокЗначений;
	СписокАтрибутов.Добавить("ДатаПол" , Формат(ВыборкаДокумент.ОснованиеДатаТранзакции, "ДФ=dd.MM.yyyy"));
	СписокАтрибутов.Добавить("ВремяПол", Формат(ВыборкаДокумент.ОснованиеДатаТранзакции, "ДФ=HH.mm.ss"));
	СвИзвПолуч.Вставить("Атрибут", СписокАтрибутов);
	
	ИмяПостФайла = СтрЗаменить(ВыборкаДокумент.ОснованиеИмяФайла, ".xml", "");
	ИмяПостФайла = СтрЗаменить(ИмяПостФайла, ".zip", "");
			
	// &lt;&lt;&lt; СведПолФайл - 4 уровень
	СведПолФайл = Новый Структура;
	СвИзвПолуч.Вставить("СведПолФайл", СведПолФайл);	
	СписокАтрибутов = Новый СписокЗначений;
	СписокАтрибутов.Добавить("ИмяПолФайла", ИмяПостФайла);
	СведПолФайл.Вставить("Атрибут"   , СписокАтрибутов);
	СведПолФайл.Вставить("ЭППолФайл", ОснованиеЭЦП);
	
	// &lt;&lt;&lt; ОтпрДок - 3 уровень
	ОтпрДок = Новый Структура;
	ДокументУзел.Вставить("ОтпрДок", ОтпрДок);	
	СписокАтрибутов = Новый СписокЗначений;
	СписокАтрибутов.Добавить("ИдУчастЭДО", Получатель_ИД_ЭДО);
	ОтпрДок.Вставить("Атрибут", СписокАтрибутов);
	
	ЭтоЮрЛицоПолучатель = Ложь;
	// ПолучательТип
	Если ВыборкаДокумент.ПолучательТип = "" Тогда
		ЭтоЮрЛицоПолучатель = ЮрФизЛицоОпределитьТипОбъекта(ВыборкаДокумент.Контрагент, СтруктураМетаДанных.ИмяРеквизитаКонтрагента, СтруктураМетаДанных.ПеречислениеЮрЛицо);
	Иначе
		ЭтоЮрЛицоПолучатель = Истина; 
	КонецЕсли;
	
	Если ЭтоЮрЛицоПолучатель Тогда	
		// &lt;&lt;&lt; ЮЛ - 4 уровень
		ОтпрДокЮЛ = Новый Структура;
		ОтпрДок.Вставить("ЮЛ", ОтпрДокЮЛ);
		СписокАтрибутов = Новый СписокЗначений;
		СписокАтрибутов.Добавить("НаимОрг", ВыборкаДокумент.ПолучательНаименование);
		СписокАтрибутов.Добавить("ИННЮЛ"  , ВыборкаДокумент.ПолучательИНН);
		СписокАтрибутов.Добавить("КПП"    , ВыборкаДокумент.ПолучательКПП);
		ОтпрДокЮЛ.Вставить("Атрибут", СписокАтрибутов); 			
		
	Иначе
		// &lt;&lt;&lt; ИП - 4 уровень
		ОтпрДокИП = Новый Структура;
		ОтпрДок.Вставить("ИП", ОтпрДокИП);
		СписокАтрибутов = Новый СписокЗначений;
		СписокАтрибутов.Добавить("ИННФЛ", ВыборкаДокумент.ПолучательИНН);
		ОтпрДокИП.Вставить("Атрибут", СписокАтрибутов);
		
		// &lt;&lt;&lt; ФИО - 5 уровень
		ОтпрДокИП_ФИО = Новый Структура;
		ОтпрДокИП.Вставить("ФИО", ОтпрДокИП_ФИО);
		
		ФИО = СтрЗаменить(ВыборкаДокумент.ПолучательНаимПолное, "ИП ", "");
		ФИО = СтрЗаменить(ФИО, "Индивидуальный Предприниматель ", "");
		ФИО = СтрЗаменить(ФИО, "Индивидуальный предприниматель ", "");
		ФИО = СтрЗаменить(ФИО, " ", Символы.ПС);
		ФИО = СтрЗаменить(ФИО, """", "");
		
		СписокАтрибутов = Новый СписокЗначений;		
        СписокАтрибутов.Добавить("Фамилия" , СтрПолучитьСтроку(ФИО,1));
        СписокАтрибутов.Добавить("Имя"     , СтрПолучитьСтроку(ФИО,2));																				   																	   
        СписокАтрибутов.Добавить("Отчество", СтрПолучитьСтроку(ФИО,3));
		ОтпрДокИП_ФИО.Вставить("Атрибут", СписокАтрибутов);
		
	КонецЕсли;
	
	// &lt;&lt;&lt; Подписант - 3 уровень
	Подписант = Новый Структура;
	ДокументУзел.Вставить("Подписант" , Подписант);
	СписокАтрибутов = Новый СписокЗначений;
	СписокАтрибутов.Добавить("Должн", ВыборкаДокумент.ОрганизацияДолжностьПодписанта);
	Подписант.Вставить("Атрибут", СписокАтрибутов);	
	
	// &lt;&lt;&lt; ФИО - 4 уровень
	ПодписантФИО = Новый Структура;
	Подписант.Вставить("ФИО", ПодписантФИО);
	СписокАтрибутов = Новый СписокЗначений;
	СписокАтрибутов.Добавить("Фамилия" , СокрЛП(ВыборкаДокумент.ОрганизацияФамилияПодписанта));
	СписокАтрибутов.Добавить("Имя"     , СокрЛП(ВыборкаДокумент.ОрганизацияИмяПодписанта));
	СписокАтрибутов.Добавить("Отчество", СокрЛП(ВыборкаДокумент.ОрганизацияОтчествоПодписанта));
	ПодписантФИО.Вставить("Атрибут", СписокАтрибутов);
	
	КодировкаФайла = "windows-1251";
	
	СтрокаXML = ЗаписатьФайлXML(УзелНачальный, "Файл", КодировкаФайла);	
	УзелНачальный.Вставить("СтрокаXML", СтрокаXML);
	
	СписокФайлов = Новый Структура;
	СписокФайлов.Вставить("СтрокаXML"            , СтрокаXML);
	СписокФайлов.Вставить("ИмяФайлаXML"          , ФайлИмя);
	СписокФайлов.Вставить("ВидДокумента"         , "DP_IZVPOL_23_Исходящий");  
	СписокФайлов.Вставить("КодировкаФайла"       , КодировкаФайла);
	СписокФайлов.Вставить("ДанныеСертификатаЭКОМ", ВыборкаДокумент.ОрганизацияСертификат);
	СписокФайлов.Вставить("СертификатНаСервере"  , ВыборкаДокумент.СертификатНаСервере);
	СписокФайлов.Вставить("Организация"          , ВыборкаДокумент.Организация);
	СписокФайлов.Вставить("Контрагент"           , ВыборкаДокумент.Контрагент);
	СписокФайлов.Вставить("Статус"               , "Отправлен"); 
	СписокФайлов.Вставить("СтруктураДокумента"   , УзелНачальный);
	СписокФайлов.Вставить("Документ"             , ВыборкаДокумент.Ссылка);
	СписокФайлов.Вставить("ИдентификаторЦепочки" , ВыборкаДокумент.ИдентификаторЦепочки);
	СписокФайлов.Вставить("ИдентификаторОснования", Прав(ВыборкаДокумент.ИдентификаторОснования, 36));
	СписокФайлов.Вставить("Идентификатор"		 , GUIDФайла);
	СписокФайлов.Вставить("ТипФайла", ТипФайла);
	
	МассивСтруктурИсходящих.Добавить(СписокФайлов);
	
КонецЦикла;

Возврат МассивСтруктурИсходящих;</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:string">Подтверждение аннулирования ЮЗД</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">9</lastId>
			<item>
				<value xsi:type="xs:string">Неструкт. докум.</value>
				<id xsi:type="xs:decimal">0</id>
			</item>
			<item>
				<value xsi:type="xs:string">Прайс-лист</value>
				<id xsi:type="xs:decimal">1</id>
			</item>
			<item>
				<value xsi:type="xs:string">Поставщик</value>
				<id xsi:type="xs:decimal">2</id>
			</item>
			<item>
				<value xsi:type="xs:string">Покупатель</value>
				<presentation>СписокPrannulВходящиеПокупатель</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">3</id>
			</item>
			<item>
				<value xsi:type="xs:string">Синоним</value>
				<presentation>Подтверждение аннулирования ЮЗД</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">4</id>
			</item>
			<item>
				<value xsi:type="xs:string">ИмяКнопки</value>
				<presentation>ИсходящийDP_IZVPOL_23Покупатель</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">5</id>
			</item>
			<item>
				<value xsi:type="xs:string">ПередаватьТекстПричины</value>
				<id xsi:type="xs:decimal">6</id>
			</item>
			<item>
				<value xsi:type="xs:string">ПриемникВидДокумента</value>
				<presentation>DP_IZVPOL_23_Исходящий</presentation>
				<id xsi:type="xs:decimal">7</id>
			</item>
			<item>
				<value xsi:type="xs:string">ИсточникВидДокумента</value>
				<presentation>DP_PRANNUL_22_Входящий</presentation>
				<id xsi:type="xs:decimal">8</id>
			</item>
			<item>
				<value xsi:type="xs:string">НужнаПодпись</value>
				<presentation>Да</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">9</id>
			</item>
		</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:string">ИсходящийDP_IZVPOL_23Покупатель</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">-1</lastId>
		</Value>
	</row>
</ValueTree>