<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ТипТранзакции</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ИмяКнопки</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Данные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Регламент</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Исходящий ORDRSP</Value>
		<Value xsi:type="xs:string">Исходящий ORDRSP</Value>
		<Value xsi:type="xs:string">ИсходящийORDRSPНаОснованииORDER</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:string">#Область ШАПКА_Заполнение
               
Запрос = Новый Запрос;
Запрос.Текст ="ВЫБРАТЬ
              |	DR_ORDERвходящий.Ссылка КАК Источник,
              |	DR_ORDERвходящий.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
              |	DR_ORDERвходящий.ИдентификаторДокумента КАК ИдентификаторОснования
              |ПОМЕСТИТЬ DRИсточник
              |ИЗ
              |	Документ.DR_Документ КАК DR_ORDERвходящий
              |ГДЕ
              |	DR_ORDERвходящий.Ссылка В(&amp;Документ)              
              |;              
              |
              |////////////////////////////////////////////////////////////////////////////////
              |ВЫБРАТЬ
              |	DRИсточник.Источник КАК Источник,
              |	DRИсточник.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
              |	DRИсточник.ИдентификаторОснования КАК ИдентификаторОснования,              
              |	ЕСТЬNULL(LIMES.ХранилищеЗначения, НЕОПРЕДЕЛЕНО) КАК LIMES,
              |	ВЫРАЗИТЬ(Организация.Значение КАК Справочник.Организации) КАК Организация,
              |	Контрагент.Значение КАК Контрагент,
              |	ТочкаДоставки.Значение КАК ТочкаДоставки,
              |	ВЫРАЗИТЬ(CURRENCY.Значение КАК СТРОКА(3)) КАК CURRENCY,
              |	ВЫРАЗИТЬ(ORDERNUMBER.Значение КАК СТРОКА(25)) КАК ORDERNUMBER,
              |	ВЫРАЗИТЬ(ORDERDATE.Значение КАК СТРОКА(10)) КАК ORDERDATE,
              |	ВЫРАЗИТЬ(CAMPAIGNNUMBER.Значение КАК СТРОКА(250)) КАК CAMPAIGNNUMBER,
              |	ВЫРАЗИТЬ(DELIVERYDATE.Значение КАК СТРОКА(10)) КАК DELIVERYDATE,
              |	ВЫРАЗИТЬ(DELIVERYTIME.Значение КАК СТРОКА(5)) КАК DELIVERYTIME,
              |	ВЫРАЗИТЬ(PROMO.Значение КАК СТРОКА(1)) КАК PROMO,
              |	ВЫРАЗИТЬ(FRESH.Значение КАК СТРОКА(1)) КАК FRESH,
              |	ВЫРАЗИТЬ(REASONDECREACEQUANTITYALL.Значение КАК СТРОКА(5)) КАК REASONDECREACEQUANTITYALL,
              |	ВЫРАЗИТЬ(INFO.Значение КАК СТРОКА(250)) КАК INFO,
              |	ВЫРАЗИТЬ(SENDER.Значение КАК СТРОКА(13)) КАК SENDER,
              |	ЕСТЬNULL(POSITION.ХранилищеЗначения, НЕОПРЕДЕЛЕНО) КАК POSITION
              |ПОМЕСТИТЬ ДопРеквизитыORDER
              |ИЗ
              |	DRИсточник КАК DRИсточник
              |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК Организация
              |		ПО DRИсточник.Источник = Организация.Ссылка
              |			И (Организация.Реквизит = ""Организация"")
              |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК Контрагент
              |		ПО DRИсточник.Источник = Контрагент.Ссылка
              |			И (Контрагент.Реквизит = ""Контрагент"")
              |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК ТочкаДоставки
              |		ПО DRИсточник.Источник = ТочкаДоставки.Ссылка
              |			И (ТочкаДоставки.Реквизит = ""ТочкаДоставки"")
              |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК LIMES
              |		ПО DRИсточник.Источник = LIMES.Ссылка
              |			И (LIMES.Реквизит = ""LIMES"")
              |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК CURRENCY
              |		ПО DRИсточник.Источник = CURRENCY.Ссылка
              |			И (CURRENCY.Реквизит = ""CURRENCY"")
              |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК ORDERNUMBER
              |		ПО DRИсточник.Источник = ORDERNUMBER.Ссылка
              |			И (ORDERNUMBER.Реквизит = ""NUMBER"")
              |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК ORDERDATE
              |		ПО DRИсточник.Источник = ORDERDATE.Ссылка
              |			И (ORDERDATE.Реквизит = ""DATE"")
              |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК CAMPAIGNNUMBER
              |		ПО DRИсточник.Источник = CAMPAIGNNUMBER.Ссылка
              |			И (CAMPAIGNNUMBER.Реквизит = ""CAMPAIGNNUMBER"")
              |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК DELIVERYDATE
              |		ПО DRИсточник.Источник = DELIVERYDATE.Ссылка
              |			И (DELIVERYDATE.Реквизит = ""DELIVERYDATE"")
              |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК DELIVERYTIME
              |		ПО DRИсточник.Источник = DELIVERYTIME.Ссылка
              |			И (DELIVERYTIME.Реквизит = ""DELIVERYTIME"")
              |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК PROMO
              |		ПО DRИсточник.Источник = PROMO.Ссылка
              |			И (PROMO.Реквизит = ""PROMO"")
              |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК FRESH
              |		ПО DRИсточник.Источник = FRESH.Ссылка
              |			И (FRESH.Реквизит = ""FRESH"")
              |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК REASONDECREACEQUANTITYALL
              |		ПО DRИсточник.Источник = REASONDECREACEQUANTITYALL.Ссылка
              |			И (REASONDECREACEQUANTITYALL.Реквизит = ""REASONDECREACEQUANTITYALL"")
              |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК INFO
              |		ПО DRИсточник.Источник = INFO.Ссылка
              |			И (INFO.Реквизит = ""INFO"")
              |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК SENDER
              |		ПО DRИсточник.Источник = SENDER.Ссылка
              |			И (SENDER.Реквизит = ""SENDER"")
              |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК POSITION
              |		ПО DRИсточник.Источник = POSITION.Ссылка
              |			И (POSITION.Реквизит = ""POSITION"")
              |;
              |
              |////////////////////////////////////////////////////////////////////////////////
              |ВЫБРАТЬ
              |	ДопРеквизитыORDER.Источник КАК Ссылка,
              |	ДопРеквизитыORDER.Организация КАК Организация,
              |	ДопРеквизитыORDER.ORDERNUMBER КАК NUMBER,
              |	ДопРеквизитыORDER.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
              |	ДопРеквизитыORDER.ИдентификаторОснования КАК ИдентификаторОснования,
              |	ДопРеквизитыORDER.LIMES КАК ДеталиТраспорта,
              |	ДопРеквизитыORDER.CURRENCY КАК CURRENCY,
              |	ДопРеквизитыORDER.ORDERNUMBER КАК ORDERNUMBER,
              |	ДопРеквизитыORDER.ORDERDATE КАК ORDERDATE,
              |	ДопРеквизитыORDER.CAMPAIGNNUMBER КАК CAMPAIGNNUMBER,
              |	ДопРеквизитыORDER.DELIVERYDATE КАК DELIVERYDATE,
              |	ДопРеквизитыORDER.DELIVERYTIME КАК DELIVERYTIME,
              |	ДопРеквизитыORDER.PROMO КАК PROMO,
              |	ДопРеквизитыORDER.FRESH КАК FRESH,
              |	ДопРеквизитыORDER.REASONDECREACEQUANTITYALL КАК REASONDECREACEQUANTITYALL,
              |	ДопРеквизитыORDER.INFO КАК INFO,
              |	ДопРеквизитыORDER.POSITION КАК POSITION,
              |	GLN_Контрагент.Контрагент_ФорматЭСФ КАК ФорматУПД,
              |	GLN_Контрагент.GLN КАК BUYER,
              |	GLN_Организация.GLN КАК SUPPLIER,
              |	GLN_Организация.GLN КАК SENDER,
              |	ДопРеквизитыORDER.SENDER КАК RECIPIENT,
              |	DR_ТочкиДоставки.GLN КАК DELIVERYPLACE,
              |	ВЫРАЗИТЬ("""" КАК СТРОКА(10)) КАК DATE,
              |	ВЫРАЗИТЬ("""" КАК СТРОКА(10)) КАК TIME,
              |	""27"" КАК ACTION,
              |	ВЫРАЗИТЬ("""" КАК СТРОКА(300)) КАК EDIMESSAGE,
              |	ВЫРАЗИТЬ("""" КАК СТРОКА(20)) КАК EDIINTERCHANGEID,
              |	ВЫРАЗИТЬ("""" КАК СТРОКА(300)) КАК ФайлИмя,
              |	ВЫРАЗИТЬ("""" КАК СТРОКА(300)) КАК Идентификатор,
              |	""Отправлен"" КАК Статус,
              |	""ORDRSP"" КАК ВидДокумента
              |ИЗ
              |	ДопРеквизитыORDER КАК ДопРеквизитыORDER              
              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_GLN КАК GLN_Контрагент
              |		ПО (ДопРеквизитыORDER.Контрагент = GLN_Контрагент.Объект)
              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_GLN КАК GLN_Организация
              |		ПО (ДопРеквизитыORDER.Организация = GLN_Организация.Объект)
              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_ТочкиДоставки КАК DR_ТочкиДоставки
              |		ПО (ДопРеквизитыORDER.ТочкаДоставки = DR_ТочкиДоставки.Объект)"; 

Запрос.УстановитьПараметр("Документ", Источник);

РезультатЗапроса = Запрос.Выполнить(); 
Результат = РезультатЗапроса.Выгрузить();

Результат.Колонки.Добавить("LIMES", Новый ОписаниеТипов("Массив"));

КвалификаторСтроки = Новый КвалификаторыСтроки(250,ДопустимаяДлина.Переменная);

ТаблЧастьORDRSP = новый ТаблицаЗначений;
ТаблЧастьORDRSP.Колонки.Добавить("POSITIONNUMBER"			, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
ТаблЧастьORDRSP.Колонки.Добавить("PRICE"					, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
ТаблЧастьORDRSP.Колонки.Добавить("VAT"						, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
ТаблЧастьORDRSP.Колонки.Добавить("PRICEWITHVAT"				, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
ТаблЧастьORDRSP.Колонки.Добавить("ORDRSPUNIT"				, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
ТаблЧастьORDRSP.Колонки.Добавить("ORDEREDQUANTITY"			, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
ТаблЧастьORDRSP.Колонки.Добавить("ACCEPTEDQUANTITY"			, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
ТаблЧастьORDRSP.Колонки.Добавить("QUANTITYOFCUINTU"			, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
ТаблЧастьORDRSP.Колонки.Добавить("DESCRIPTION"				, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
ТаблЧастьORDRSP.Колонки.Добавить("PRODUCT"					, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
ТаблЧастьORDRSP.Колонки.Добавить("PRODUCTIDBUYER"			, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
ТаблЧастьORDRSP.Колонки.Добавить("PRODUCTIDSUPPLIER"		, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
ТаблЧастьORDRSP.Колонки.Добавить("CALIBRE"					, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
ТаблЧастьORDRSP.Колонки.Добавить("INFO"						, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
ТаблЧастьORDRSP.Колонки.Добавить("REASONDECREACEQUANTITY"	, Новый ОписаниеТипов("Строка", КвалификаторСтроки));
ТаблЧастьORDRSP.Колонки.Добавить("PACKING"					, Новый ОписаниеТипов("Массив"));

EDIINTERCHANGEID = 0;

Для Каждого Строка Из Результат Цикл
	
	EDIINTERCHANGEID = НовыйНомерТранзакции(EDIINTERCHANGEID);   
	
    Строка.DATE	= Формат(ТекущаяДата(), "ДФ=yyyy-MM-dd");
	Строка.TIME = Формат(ТекущаяДата(), "ДФ=HH:mm");
	
	EDIINTERCHANGEID 		= НовыйНомерТранзакции(EDIINTERCHANGEID);
	Строка.EDIINTERCHANGEID = Формат(EDIINTERCHANGEID, "ЧГ=0");
	
	Строка.EDIMESSAGE       = Формат(ТекущаяДата(), "ДФ=ггггММддЧЧммсс000") + "-OUT-" + Строка.EDIINTERCHANGEID;
	Строка.ФайлИмя          = "ORDRSP" + "_" + Строка.EDIMESSAGE + ".xml";
	Строка.Идентификатор    = "ORDRSP" + "_" + Строка.EDIMESSAGE; 
	
	Если Строка.ДеталиТраспорта &lt;&gt; Неопределено Тогда		
		Строка.LIMES = Строка.ДеталиТраспорта.Получить();		
	КонецЕсли;
	
	POSITION = Строка.POSITION.Получить(); 
	
	#Область ТАБЛИЦА_Заполнение
	
	Для Каждого СтрокаНоменклатуры Из POSITION Цикл
				
		НоваяСтрокаНоменклатуры	= ТаблЧастьORDRSP.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрокаНоменклатуры, СтрокаНоменклатуры);
				
		НоваяСтрокаНоменклатуры.ORDEREDQUANTITY = Формат(СтрокаНоменклатуры.ORDEREDQUANTITY, "ЧДЦ=3; ЧРД=.; ЧГ=0; ЧН=");
		НоваяСтрокаНоменклатуры.ACCEPTEDQUANTITY  = "0.00";
		
		КоличествоВУпаковке = 0;
		СтрокаНоменклатуры.Свойство("QUANTITYOFCUINTU", КоличествоВУпаковке);
		
		Если КоличествоВУпаковке &lt;&gt; 0 Тогда			
			НоваяСтрокаНоменклатуры.QUANTITYOFCUINTU = Формат(СтрокаНоменклатуры.QUANTITYOFCUINTU, "ЧДЦ=3; ЧРД=.; ЧГ=0; ЧН=");
		Иначе
			НоваяСтрокаНоменклатуры.QUANTITYOFCUINTU = "";
		КонецЕсли;
		
		Если СтрокаНоменклатуры.Свойство("ORDERPRICE") Тогда
			НоваяСтрокаНоменклатуры.PRICE = Формат(СтрокаНоменклатуры.ORDERPRICE, "ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=");
		КонецЕсли;
		    
		НоваяСтрокаНоменклатуры.PRICEWITHVAT = Формат(СтрокаНоменклатуры.PRICEWITHVAT, "ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=");
		

		Если СтрокаНоменклатуры.Свойство("ORDERUNIT") Тогда
			НоваяСтрокаНоменклатуры.ORDRSPUNIT = СтрокаНоменклатуры.ORDERUNIT;
		КонецЕсли;
		
		Если СтрокаНоменклатуры.Свойство("PACKING") Тогда
		
		    ArrayPACKING = СтрокаНоменклатуры.ХЗ_PACKING.Получить();
			НоваяСтрокаНоменклатуры.PACKING = ?(ArrayPACKING &lt;&gt; Неопределено, ArrayPACKING, Новый Массив);
	        		
		КонецЕсли;

	КонецЦикла;
	
	#КонецОбласти
	
КонецЦикла;

#КонецОбласти 
             
#Область СОЗДАНИЕ_XML 
ОбязательныеКолонки = Новый СписокЗначений;

//ORDRSP
ОбязательныеКолонки.Добавить("NUMBER"		, "NUMBER"			, Истина);
ОбязательныеКолонки.Добавить("DATE"			, "DATE" 			, Истина);
ОбязательныеКолонки.Добавить("ORDERNUMBER"	, "ORDERNUMBER" 	, Истина);
ОбязательныеКолонки.Добавить("ORDERDATE"	, "ORDERDATE" 		, Истина);
ОбязательныеКолонки.Добавить("DELIVERYDATE"	, "DELIVERYDATE" 	, Истина);

//HEAD
ОбязательныеКолонки.Добавить("SUPPLIER"			, "SUPPLIER"		, Истина);
ОбязательныеКолонки.Добавить("BUYER"			, "BUYER"			, Истина);
ОбязательныеКолонки.Добавить("RECIPIENT"		, "RECIPIENT"		, Истина);
ОбязательныеКолонки.Добавить("DELIVERYPLACE"	, "DELIVERYPLACE"	, Истина);
ОбязательныеКолонки.Добавить("SENDER"			, "SENDER"			, Истина);

//POSITION
ОбязательныеКолонки.Добавить("POSITIONNUMBER"	, "POSITIONNUMBER"		, Истина);
ОбязательныеКолонки.Добавить("PRODUCT"			, "PRODUCT"				, Истина);
ОбязательныеКолонки.Добавить("PRODUCTIDBUYER"	, "PRODUCTIDBUYER"		, Истина);
ОбязательныеКолонки.Добавить("DESCRIPTION"		, "DESCRIPTION"			, Истина);
ОбязательныеКолонки.Добавить("ORDEREDQUANTITY"	, "ORDEREDQUANTITY"		, Истина);
ОбязательныеКолонки.Добавить("ACCEPTEDQUANTITY"	, "ACCEPTEDQUANTITY"	, Истина);

МассивСтруктурИсходящих = Новый Массив;

//Структура свойств шапки документа
СтруктураШапка = Новый Структура("NUMBER, DATE, ORDERNUMBER, ORDERDATE, TIME, DELIVERYDATE, 
								| DELIVERYTIME, CAMPAIGNNUMBER, DOCTYPE, FRESH, CURRENCY, 
								| REASONDECREACEQUANTITYALL, ACTION, PROMO, LIMES, INFO, HEAD");
									
//Структура свойств элемента HEAD
СтруктураHEAD = Новый Структура("SUPPLIER, BUYER, DELIVERYPLACE, SENDER, RECIPIENT, EDIINTERCHANGEID, EDIMESSAGE, POSITION");	

//Имена свойств элемента POSITION
СвойстваPOSITION = "POSITIONNUMBER, PRODUCT,  PRODUCTIDBUYER, PRODUCTIDSUPPLIER, ORDEREDQUANTITY, 
					| ACCEPTEDQUANTITY, QUANTITYOFCUINTU, ORDRSPUNIT, DESCRIPTION, PRICE, PRICEWITHVAT,  
					| VAT, PRODUCTTYPE, REASONDECREACEQUANTITY, CALIBRE, PACKING, INFO"; 

Для каждого СтрокаШапкиДокумента из Результат Цикл
	
	ТекстСообщенияПроверкиЗаполненияОбязательныхПолей = "";  
	
	СтруктураДок = Новый Структура("ORDRSP");
	
	СтруктураДок.ORDRSP = СтруктураШапка;
	СтруктураШапка.HEAD = СтруктураHEAD;
	
	//Заполнение значений свойств шапки документа
	ЗаполнитьЗначенияСвойств(СтруктураШапка, СтрокаШапкиДокумента);
	
	//Заполнение значений свойств элемента HEAD
	ЗаполнитьЗначенияСвойств(СтруктураHEAD, СтрокаШапкиДокумента);
	
	МассивPOSITION = Новый Массив;
	
	//ОтборСтрокНоменклатур = Новый Структура;
	//ОтборСтрокНоменклатур.Вставить("Ссылка", СтрокаШапкиДокумента.Ссылка);
	//
	//СтрокиНоменклатурДокумента = РезультатНоменклатур.НайтиСтроки(ОтборСтрокНоменклатур);
	
	Для Каждого СтрокаНоменклатурыДокумента Из ТаблЧастьORDRSP Цикл
		
		//Создание структуры POSITION
		Структура = Новый Структура(СвойстваPOSITION);
		
		//Заполнение значений свойств элемента POSITION
		ЗаполнитьЗначенияСвойств(Структура, СтрокаНоменклатурыДокумента);
		
		МассивPOSITION.Добавить(Структура);
	КонецЦикла;
	
	СтруктураHEAD.POSITION = МассивPOSITION;
	
	//Создание XML строки
	XMLДокумент        	= Новый ЗаписьXML;		
	ПараметрыЗаписиXML 	= Новый ПараметрыЗаписиXML("UTF-8", "1.0", Истина, Ложь, Символы.Таб); 
	XMLДокумент.УстановитьСтроку("UTF-8");
	XMLДокумент.ЗаписатьОбъявлениеXML();
	
	Для каждого СтрокаЭлемента Из СтруктураДок Цикл
		ЗаписатьБлоки(XMLДокумент, СтрокаЭлемента, ОбязательныеКолонки, ТекстСообщенияПроверкиЗаполненияОбязательныхПолей);
	КонецЦикла;	
	
	СтрокаXML = XMLДокумент.Закрыть(); 
	
	Если ЗначениеЗаполнено(ТекстСообщенияПроверкиЗаполненияОбязательныхПолей) Тогда
		
		ТекстЛогаСобытий = ТекстСообщенияПроверкиЗаполненияОбязательныхПолей + Символы.ПС + "Документ был пропущен.";
		
		ДобавитьЗаписьВМассивЛога(МассивЛогаСобытий, ТекстЛогаСобытий, "Предупреждение", ИмяСобытия);
		
		Продолжить;	
	Иначе	
		
		СтруктураФайлаДанных = Новый Структура;
		СтруктураФайлаДанных.Вставить("ВидДокумента"			, "ORDRSP_Исходящий");
		СтруктураФайлаДанных.Вставить("Документ"				, СтрокаШапкиДокумента.Ссылка);
		СтруктураФайлаДанных.Вставить("ИдентификаторЦепочки"	, СтрокаШапкиДокумента.ИдентификаторЦепочки);
		СтруктураФайлаДанных.Вставить("ИмяФайлаXML"				, СтрокаШапкиДокумента.ФайлИмя);
		СтруктураФайлаДанных.Вставить("КодировкаФайла"			, "UTF-8");
		СтруктураФайлаДанных.Вставить("Организация"				, СтрокаШапкиДокумента.Организация);
		СтруктураФайлаДанных.Вставить("Отправлен"				, НЕОПРЕДЕЛЕНО);
		СтруктураФайлаДанных.Вставить("Сообщение"				, "");
		СтруктураФайлаДанных.Вставить("Статус"					, СтрокаШапкиДокумента.Статус);
		СтруктураФайлаДанных.Вставить("СтрокаXML"				, СтрокаXML);
		СтруктураФайлаДанных.Вставить("ТипФайла"				, СтрокаШапкиДокумента.ВидДокумента);
		
		МассивСтруктурИсходящих.Добавить(СтруктураФайлаДанных);
		
	КонецЕсли;
	
КонецЦикла;

#КонецОбласти

//Возврат Результат;				//раскомментировать для отображения значений таблицы "Результат" на вкладке "Тестирование"  
//Возврат ТаблЧастьORDRSP;			//раскомментировать для отображения значений таблицы "РезультатНоменклатур" на вкладке "Тестирование"

Возврат МассивСтруктурИсходящих;
</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">9</lastId>
			<item>
				<value xsi:type="xs:string">Неструкт. докум.</value>
				<id xsi:type="xs:decimal">0</id>
			</item>
			<item>
				<value xsi:type="xs:string">Прайс-лист</value>
				<id xsi:type="xs:decimal">1</id>
			</item>
			<item>
				<value xsi:type="xs:string">Поставщик</value>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">2</id>
			</item>
			<item>
				<value xsi:type="xs:string">Покупатель</value>
				<id xsi:type="xs:decimal">3</id>
			</item>
			<item>
				<value xsi:type="xs:string">Синоним</value>
				<presentation>Исходящий ORDRSP</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">4</id>
			</item>
			<item>
				<value xsi:type="xs:string">ИмяКнопки</value>
				<presentation>ИсходящийORDRSPНаОснованииORDER</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">5</id>
			</item>
			<item>
				<value xsi:type="xs:string">ПередаватьТекстПричины</value>
				<id xsi:type="xs:decimal">6</id>
			</item>
			<item>
				<value xsi:type="xs:string">ПриемникВидДокумента</value>
				<presentation>ORDRSP_Исходящий</presentation>
				<id xsi:type="xs:decimal">7</id>
			</item>
			<item>
				<value xsi:type="xs:string">ИсточникВидДокумента</value>
				<presentation>ORDER_Входящий</presentation>
				<id xsi:type="xs:decimal">8</id>
			</item>
			<item>
				<value xsi:type="xs:string">НужнаПодпись</value>
				<presentation>Нет</presentation>
				<id xsi:type="xs:decimal">9</id>
			</item>
		</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">1</lastId>
			<item>
				<value xsi:type="xs:string"/>
				<presentation>ТекстЗапроса</presentation>
				<id xsi:type="xs:decimal">0</id>
			</item>
		</Value>
	</row>
</ValueTree>