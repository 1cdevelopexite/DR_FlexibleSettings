<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ТипТранзакции</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Данные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ИмяКнопки</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Регламент</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Исходящий PRICAT</Value>
		<Value xsi:type="xs:string">///МЧД
ЗапросМЧД = Новый Запрос;
ЗапросМЧД.Текст = ТекстЗапроса_МЧД_ПоОрганизациям();
ЗапросМЧД.УстановитьПараметр("ЭтоРегламентноеЗадание", Ложь); 
ЗапросМЧД.УстановитьПараметр("Пользователь", НайтиТекущегоПользователя()); 
ЗапросМЧД.УстановитьПараметр("ТекущаяДата", ТекущаяДата()); 
ТаблицаМЧД = ЗапросМЧД.Выполнить().Выгрузить();
///				
				
#Область Заполнение_Документа

Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
	|	ТаблицаМЧД.Организация КАК Организация,
	|	ТаблицаМЧД.Сертификат КАК Сертификат,
	|	ТаблицаМЧД.СертификатИНН КАК СертификатИНН,
	|	ТаблицаМЧД.СертификатНаСервере КАК СертификатНаСервере,
	|	ТаблицаМЧД.ДолжностьПодписанта КАК ДолжностьПодписанта,
	|	ТаблицаМЧД.ФамилияПодписанта КАК ФамилияПодписанта,
	|	ТаблицаМЧД.ИмяПодписанта КАК ИмяПодписанта,
	|	ТаблицаМЧД.ОтчествоПодписанта КАК ОтчествоПодписанта,
	|	ТаблицаМЧД.ОбластьПолномочий КАК ОбластьПолномочий,
	|	ТаблицаМЧД.ОснованиеПолномочий КАК ОснованиеПолномочий,
	|	ТаблицаМЧД.СтатусПодписанта КАК СтатусПодписанта,
	|	ТаблицаМЧД.Организация_ПоддерживаетМЧД КАК Организация_ПоддерживаетМЧД,
	|	ТаблицаМЧД.ТипСертификата КАК ТипСертификата,
	|	ТаблицаМЧД.МЧД_Актуальна КАК МЧД_Актуальна
	|ПОМЕСТИТЬ ВТ_DR_МЧД
	|ИЗ
	|	&amp;ТаблицаМЧД КАК ТаблицаМЧД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	DR_Документ.Ссылка КАК Ссылка,
	|	DR_Документ.Комментарий КАК Комментарий,
	|	DR_Документ.ИдентификаторДокумента КАК ИдентификаторДокумента,
	|	DR_Документ.ИдентификаторЦепочки КАК ИдентификаторЦепочки
	|ПОМЕСТИТЬ ВтДокументPricat
	|ИЗ
	|	Документ.DR_Документ КАК DR_Документ
	|ГДЕ
	|	DR_Документ.Ссылка В(&amp;Источник)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтДокументPricat.Ссылка КАК Ссылка,
	|	""Отправлен"" КАК Статус,
	|	""PRICAT"" КАК ВидДокумента,
	|	РеквизитDATE.Значение КАК DATE,
	|	РеквизитNUMBER.Значение КАК NUMBER,
	|	РеквизитДействуетС.Значение КАК ДействуетС,
	|	РеквизитДействуетПо.Значение КАК ДействуетПо,
	|	РеквизитACTION.Значение КАК ACTION,
	|	РеквизитCUSTOMERREFNUMBER.Значение КАК CUSTOMERREFNUMBER,
	|	РеквизитCAMPAIGNNUMBER.Значение КАК CAMPAIGNNUMBER,
	|	РеквизитRECIPIENT.Значение КАК RECIPIENT,
    |	РеквизитSENDER.Значение КАК SENDER,
    |	РеквизитBUYER.Значение КАК BUYER,
    |	РеквизитSUPPLIER.Значение КАК SUPPLIER,																   
	|	РеквизитКонтрагент.Значение КАК Контрагент,
	|	РеквизитОрганизация.Значение КАК Организация,
	|	РеквизитCONTACTFACE.Значение КАК CONTACTFACE,
	|	РеквизитTELEPHON.Значение КАК TELEPHON,
	|	РеквизитEMAIL.Значение КАК EMAIL,
	|	ВтДокументPricat.Комментарий КАК Комментарий,
	|	РеквизитВалюта.Значение КАК Валюта,
	|	РеквизитPOSITION.ХранилищеЗначения КАК POSITION,
	|	ВтДокументPricat.ИдентификаторДокумента КАК ИдентификаторДокумента,
	|	ВтДокументPricat.ИдентификаторЦепочки КАК ИдентификаторЦепочки
	|ПОМЕСТИТЬ ВтОсновная
	|ИЗ
	|	ВтДокументPricat КАК ВтДокументPricat
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитDATE
	|		ПО ВтДокументPricat.Ссылка = РеквизитDATE.Ссылка
	|			И (РеквизитDATE.Реквизит = ""DATE"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитNUMBER
	|		ПО ВтДокументPricat.Ссылка = РеквизитNUMBER.Ссылка
	|			И (РеквизитNUMBER.Реквизит = ""NUMBER"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитДействуетС
	|		ПО ВтДокументPricat.Ссылка = РеквизитДействуетС.Ссылка
	|			И (РеквизитДействуетС.Реквизит = ""ДействуетС"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитДействуетПо
	|		ПО ВтДокументPricat.Ссылка = РеквизитДействуетПо.Ссылка
	|			И (РеквизитДействуетПо.Реквизит = ""ДействуетПо"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитACTION
	|		ПО ВтДокументPricat.Ссылка = РеквизитACTION.Ссылка
	|			И (РеквизитACTION.Реквизит = ""ACTION"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитCUSTOMERREFNUMBER
	|		ПО ВтДокументPricat.Ссылка = РеквизитCUSTOMERREFNUMBER.Ссылка
	|			И (РеквизитCUSTOMERREFNUMBER.Реквизит = ""CUSTOMERREFNUMBER"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитCAMPAIGNNUMBER
	|		ПО ВтДокументPricat.Ссылка = РеквизитCAMPAIGNNUMBER.Ссылка
	|			И (РеквизитCAMPAIGNNUMBER.Реквизит = ""CAMPAIGNNUMBER"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитRECIPIENT
    |		ПО ВтДокументPricat.Ссылка = РеквизитRECIPIENT.Ссылка
    |			И (РеквизитRECIPIENT.Реквизит = ""RECIPIENT"")
    |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитSENDER
    |		ПО ВтДокументPricat.Ссылка = РеквизитSENDER.Ссылка
    |			И (РеквизитSENDER.Реквизит = ""SENDER"")
    |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитBUYER
    |		ПО ВтДокументPricat.Ссылка = РеквизитBUYER.Ссылка
    |			И (РеквизитBUYER.Реквизит = ""BUYER"")
    |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитSUPPLIER
    |		ПО ВтДокументPricat.Ссылка = РеквизитSUPPLIER.Ссылка
    |			И (РеквизитSUPPLIER.Реквизит = ""SUPPLIER"")																																									  																	  
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитКонтрагент																									  																																																																 
	|		ПО ВтДокументPricat.Ссылка = РеквизитКонтрагент.Ссылка
	|			И (РеквизитКонтрагент.Реквизит = ""Контрагент"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитОрганизация
	|		ПО ВтДокументPricat.Ссылка = РеквизитОрганизация.Ссылка
	|			И (РеквизитОрганизация.Реквизит = ""Организация"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитCONTACTFACE
	|		ПО ВтДокументPricat.Ссылка = РеквизитCONTACTFACE.Ссылка
	|			И (РеквизитCONTACTFACE.Реквизит = ""CONTACTFACE"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитTELEPHON
	|		ПО ВтДокументPricat.Ссылка = РеквизитTELEPHON.Ссылка
	|			И (РеквизитTELEPHON.Реквизит = ""TELEPHON"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитEMAIL
	|		ПО ВтДокументPricat.Ссылка = РеквизитEMAIL.Ссылка
	|			И (РеквизитEMAIL.Реквизит = ""EMAIL"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитВалюта
	|		ПО ВтДокументPricat.Ссылка = РеквизитВалюта.Ссылка
	|			И (РеквизитВалюта.Реквизит = ""Валюта"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитPOSITION
	|		ПО ВтДокументPricat.Ссылка = РеквизитPOSITION.Ссылка
	|			И (РеквизитPOSITION.Реквизит = ""POSITION"")
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтОсновная.Ссылка КАК Ссылка,
	|	ВтОсновная.Статус КАК Статус,
	|	ВтОсновная.ВидДокумента КАК ВидДокумента,
	|	ВтОсновная.DATE КАК DATE,
	|	ВтОсновная.NUMBER КАК NUMBER,
	|	ВтОсновная.ДействуетС КАК ДействуетС,
	|	ВтОсновная.ДействуетПо КАК ДействуетПо,
	|	ВтОсновная.ACTION КАК ACTION,
	|	ЕСТЬNULL(ВтОсновная.RECIPIENT, DR_GLN_Контрагент.GLN) КАК RECIPIENT,
    |	ЕСТЬNULL(ВтОсновная.SENDER, DR_GLN_Организация.GLN) КАК SENDER,
    |	ЕСТЬNULL(ВтОсновная.BUYER, DR_GLN_Контрагент.GLN) КАК BUYER,
    |	ЕСТЬNULL(ВтОсновная.SUPPLIER, DR_GLN_Организация.GLN) КАК SUPPLIER,
	|	ВтОсновная.CUSTOMERREFNUMBER КАК CUSTOMERREFNUMBER,
	|	ВтОсновная.CAMPAIGNNUMBER КАК CAMPAIGNNUMBER,
	|	ВтОсновная.Контрагент КАК Контрагент,
	|	ВтОсновная.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА DR_GLN_Организация.ПоддерживаетМЧД = ИСТИНА
	|				И DR_GLN_Контрагент.ПоддерживаетМЧД = ИСТИНА
	|			ТОГДА DR_МЧД.Сертификат
	|		ИНАЧЕ DR_GLN_Организация.Сертификат
	|	КОНЕЦ КАК _Сертификат,
	|	ВЫБОР
	|		КОГДА DR_GLN_Организация.ПоддерживаетМЧД = ИСТИНА
	|				И DR_GLN_Контрагент.ПоддерживаетМЧД = ИСТИНА
	|			ТОГДА DR_МЧД.СертификатНаСервере
	|		ИНАЧЕ DR_СертификатНаСервере.Значение
	|	КОНЕЦ КАК _СертификатНаСервере,
	|	ВтОсновная.CONTACTFACE КАК CONTACTFACE,
	|	ВтОсновная.TELEPHON КАК TELEPHON,
	|	ВтОсновная.EMAIL КАК EMAIL,
	|	ВтОсновная.Комментарий КАК Комментарий,
	|	ВтОсновная.Валюта КАК Валюта,
	|	Валюты.Наименование КАК CURRENCY,
	|	ВтОсновная.POSITION КАК POSITION,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(20)) КАК DATEFROM,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(20)) КАК TIMEFROM,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(20)) КАК DATETO,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(20)) КАК TIMETO,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(300)) КАК EDIMESSAGE,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(20)) КАК EDIINTERCHANGEID,
	|	""1"" КАК HIERARCHICALID,
	|	ВЫБОР
	|		КОГДА ВтОсновная.ACTION = ""9""
	|				ИЛИ ВтОсновная.ACTION = ""13""
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК АктуализироватьИдентификатор,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(300)) КАК ФайлИмя,
	|	ВтОсновная.ИдентификаторДокумента КАК Идентификатор,
	|	ВтОсновная.ИдентификаторЦепочки КАК ИдентификаторЦепочки
	|ИЗ
	|	ВтОсновная КАК ВтОсновная
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_GLN КАК DR_GLN_Организация
	|		ПО ВтОсновная.Организация = DR_GLN_Организация.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_GLN КАК DR_GLN_Контрагент
	|		ПО ВтОсновная.Контрагент = DR_GLN_Контрагент.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Валюты КАК Валюты
	|		ПО ВтОсновная.Валюта = Валюты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.DR_Настройки.ДополнительныеРеквизиты КАК DR_СертификатНаСервере
	|		ПО (DR_GLN_Организация.Сертификат = DR_СертификатНаСервере.Ссылка)
	|			И (DR_СертификатНаСервере.Реквизит = ""СертификатНаСервере"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_DR_МЧД КАК DR_МЧД
	|		ПО ВтОсновная.Организация = DR_МЧД.Организация";
 			
Запрос.УстановитьПараметр("Источник", Источник);
Запрос.УстановитьПараметр("ТаблицаМЧД", ТаблицаМЧД);
РезультатЗапроса = Запрос.Выполнить(); 
Результат = РезультатЗапроса.Выгрузить();
                
EDIINTERCHANGEID = 0;

ДатуВСтроку = Новый Соответствие;
ДатуВСтроку.Вставить("DATE", "Строка.DATE");

ТаблицаТовары = Новый ТаблицаЗначений;
ТаблицаТовары.Колонки.Добавить("BONUSRATE");
ТаблицаТовары.Колонки.Добавить("BRAND");
ТаблицаТовары.Колонки.Добавить("VARIATY");
ТаблицаТовары.Колонки.Добавить("WEIGHT");
ТаблицаТовары.Колонки.Добавить("HEIGHT");
ТаблицаТовары.Колонки.Добавить("DEPTH");
ТаблицаТовары.Колонки.Добавить("BESTBEFORDATE");
ТаблицаТовары.Колонки.Добавить("UNIT");
ТаблицаТовары.Колонки.Добавить("WEIGHTUNIT");
ТаблицаТовары.Колонки.Добавить("QUANTITYOFCUINTUUNIT");
ТаблицаТовары.Колонки.Добавить("HEIGHTUNIT");
ТаблицаТовары.Колонки.Добавить("DEPTHUNIT");
ТаблицаТовары.Колонки.Добавить("MAXORDERQUANTITYUNIT");
ТаблицаТовары.Колонки.Добавить("MINORDERQUANTITYUNIT");
ТаблицаТовары.Колонки.Добавить("VOLUMEUNIT");
ТаблицаТовары.Колонки.Добавить("WIDTHUNIT");
ТаблицаТовары.Колонки.Добавить("IDGPC");
ТаблицаТовары.Колонки.Добавить("IDINTERNATIONAL");
ТаблицаТовары.Колонки.Добавить("IDNATIONAL");
ТаблицаТовары.Колонки.Добавить("QUANTITYOFCUINTU");
ТаблицаТовары.Колонки.Добавить("QUANTITYOFBOX");
ТаблицаТовары.Колонки.Добавить("MAXORDERQUANTITY");
ТаблицаТовары.Колонки.Добавить("MINORDERQUANTITY");
ТаблицаТовары.Колонки.Добавить("QUANTITYOFPALLET");
ТаблицаТовары.Колонки.Добавить("PACKINGMULTIPLENESS");
ТаблицаТовары.Колонки.Добавить("MAXORDERPRICE");
ТаблицаТовары.Колонки.Добавить("MINORDERPRICE");
ТаблицаТовары.Колонки.Добавить("HYGIENICCERTIFICATE");
ТаблицаТовары.Колонки.Добавить("IDBUYER");
ТаблицаТовары.Колонки.Добавить("IDSUPPLIER");
ТаблицаТовары.Колонки.Добавить("CERTIFICATEOFCONFORMITY");
ТаблицаТовары.Колонки.Добавить("POSITIONNUMBER");
ТаблицаТовары.Колонки.Добавить("VOLUME");
ТаблицаТовары.Колонки.Добавить("PRODUCTNAME");
ТаблицаТовары.Колонки.Добавить("ADVICEPRICE");
ТаблицаТовары.Колонки.Добавить("RETAILPRICE");
ТаблицаТовары.Колонки.Добавить("PERCENT" );
ТаблицаТовары.Колонки.Добавить("PERUNIT");
ТаблицаТовары.Колонки.Добавить("TAXRATE");
ТаблицаТовары.Колонки.Добавить("COUNTRYORIGIN");
ТаблицаТовары.Колонки.Добавить("SUBBRAND");
ТаблицаТовары.Колонки.Добавить("TEMPERATUREOFSTORAGE_TO");
ТаблицаТовары.Колонки.Добавить("TEMPERATUREOFSTORAGE_FROM");
ТаблицаТовары.Колонки.Добавить("PACKAGE");
ТаблицаТовары.Колонки.Добавить("PRODUCTGROUP");
ТаблицаТовары.Колонки.Добавить("ACTION");
ТаблицаТовары.Колонки.Добавить("FUNCTIONNAME");
ТаблицаТовары.Колонки.Добавить("UNITPRICE");
ТаблицаТовары.Колонки.Добавить("PRICEWITHVAT");
ТаблицаТовары.Колонки.Добавить("WIDTH");
ТаблицаТовары.Колонки.Добавить("ANALOGPRODUCT");
ТаблицаТовары.Колонки.Добавить("REPLACEPRODUCT");
ТаблицаТовары.Колонки.Добавить("PRODUCT");
ТаблицаТовары.Колонки.Добавить("POSITIONCURRENCY");
ТаблицаТовары.Колонки.Добавить("Ссылка");

ШаблонПреобразование = Новый Структура;
ШаблонПреобразование.Вставить("BONUSRATE"					, "Формат(Значение, ""ЧРД  =.; ЧГ  =0"")");
ШаблонПреобразование.Вставить("WEIGHT"						, "Формат(Значение, ""ЧРД  =.; ЧГ  =0"")");
ШаблонПреобразование.Вставить("HEIGHT"						, "Формат(Значение, ""ЧРД  =.; ЧГ  =0"")");
ШаблонПреобразование.Вставить("DEPTH"						, "Формат(Значение, ""ЧРД  =.; ЧГ  =0"")");
ШаблонПреобразование.Вставить("BESTBEFORDATE"				, "Формат(Значение, ""ДФ  =dd.MM.yyyy"")"); 
ШаблонПреобразование.Вставить("QUANTITYOFCUINTU"			, "Формат(Значение, ""ЧРД  =.; ЧГ  =0"")");
ШаблонПреобразование.Вставить("QUANTITYOFBOX"				, "Формат(Значение, ""ЧРД  =.; ЧГ  =0"")");
ШаблонПреобразование.Вставить("MAXORDERQUANTITY"			, "Формат(Значение, ""ЧРД  =.; ЧГ  =0"")");
ШаблонПреобразование.Вставить("MINORDERQUANTITY"			, "Формат(Значение, ""ЧРД  =.; ЧГ  =0"")");
ШаблонПреобразование.Вставить("QUANTITYOFPALLET"			, "Формат(Значение, ""ЧРД  =.; ЧГ  =0"")");
ШаблонПреобразование.Вставить("PACKINGMULTIPLENESS"			, "Формат(Значение, ""ЧРД=.; ЧН=0.00; ЧГ=0"")");
ШаблонПреобразование.Вставить("MAXORDERPRICE"				, "Формат(Значение, ""ЧДЦ=2; ЧРД=.; ЧН=0.00; ЧГ=0"")");
ШаблонПреобразование.Вставить("MINORDERPRICE"				, "Формат(Значение, ""ЧДЦ=2; ЧРД=.; ЧН=0.00; ЧГ=0"")");
ШаблонПреобразование.Вставить("POSITIONNUMBER"				, "Формат(Значение, ""ЧРД=.; ЧН=0.00; ЧГ=0"")");
ШаблонПреобразование.Вставить("VOLUME"						, "Формат(Значение, ""ЧРД=.; ЧН=0.00; ЧГ=0"")");
ШаблонПреобразование.Вставить("ADVICEPRICE"					, "Формат(Значение, ""ЧДЦ=2; ЧРД=.; ЧН=0.00; ЧГ=0"")");
ШаблонПреобразование.Вставить("RETAILPRICE"					, "Формат(Значение, ""ЧДЦ=2; ЧРД=.; ЧН=0.00; ЧГ=0"")");
ШаблонПреобразование.Вставить("PERCENT"						, "Формат(Значение, ""ЧРД=.; ЧН=0.00; ЧГ=0"")");
ШаблонПреобразование.Вставить("PERUNIT"						, "Формат(Значение, ""ЧРД=.; ЧН=0.00; ЧГ=0"")");
ШаблонПреобразование.Вставить("TAXRATE"						, "Формат(Значение, ""ЧРД=.; ЧН=0.00; ЧГ=0"")");
ШаблонПреобразование.Вставить("TEMPERATUREOFSTORAGE_FROM"	, "Формат(Значение, ""ЧРД=.; ЧН=0.00; ЧГ=0"")");
ШаблонПреобразование.Вставить("TEMPERATUREOFSTORAGE_TO"		, "Формат(Значение, ""ЧРД=.; ЧН=0.00; ЧГ=0"")");		
ШаблонПреобразование.Вставить("UNITPRICE"					, "Формат(Значение, ""ЧДЦ=2; ЧРД=.; ЧН=0.00; ЧГ=0"")");
ШаблонПреобразование.Вставить("PRICEWITHVAT"				, "Формат(Значение, ""ЧДЦ=2; ЧРД=.; ЧН=0.00; ЧГ=0"")");
ШаблонПреобразование.Вставить("WIDTH"						, "Формат(Значение, ""ЧРД=.; ЧН=0.00; ЧГ=0"")");

Для Каждого Строка Из Результат Цикл 
	
	POSITION = Строка.POSITION.Получить(); 
	
	Для Каждого СтрокаНоменклатуры Из POSITION Цикл
		
		НоваяСтрока = ТаблицаТовары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаНоменклатуры);
		НоваяСтрока.Ссылка = Строка.Ссылка;
		НоваяСтрока.POSITIONCURRENCY = Строка.CURRENCY;
		
		Для Каждого ЭлементШаблона Из ШаблонПреобразование Цикл
			Если ТаблицаТовары.Колонки.Найти(ЭлементШаблона.Ключ) &lt;&gt; Неопределено Тогда	
				СтрокаШаблона = СтрЗаменить(ЭлементШаблона.Значение, "Значение", "НоваяСтрока[ЭлементШаблона.Ключ]"); 
				НоваяСтрока[ЭлементШаблона.Ключ] = Вычислить(СтрокаШаблона);
			КонецЕсли;	
		КонецЦикла;	
		
	КонецЦикла;
	
     // Преобразование даты в строку и заполнение значения.
    Для Каждого ЗаписьДатуВСтроку Из ДатуВСтроку Цикл
        Строка[ЗаписьДатуВСтроку.Ключ] = Формат(Вычислить(ЗаписьДатуВСтроку.Значение), "ДФ=yyyy-MM-dd");
    КонецЦикла;

    EDIINTERCHANGEID = НовыйНомерТранзакции(EDIINTERCHANGEID);
    Строка.EDIINTERCHANGEID = Формат(EDIINTERCHANGEID, "ЧГ=0");
	
	Если ЗначениеЗаполнено(Строка.ДействуетС) Тогда 
		Строка.DATEFROM = Формат(Строка.ДействуетС, "ДФ=yyyy-MM-dd");
		Строка.TIMEFROM = Формат(Строка.ДействуетС, "ДФ=HH:mm");
	КонецЕсли;	
	Если ЗначениеЗаполнено(Строка.ДействуетПо) Тогда 
		Строка.DATETO   = Формат(Строка.ДействуетПо, "ДФ=yyyy-MM-dd");
		Строка.TIMETO   = Формат(Строка.ДействуетПо, "ДФ=HH:mm");
	КонецЕсли;
		
    // EDIMESSAGE.
    ГСЧ               = Новый ГенераторСлучайныхЧисел;
    СлучЧисло         = ГСЧ.СлучайноеЧисло(100, 999);
    Строка.EDIMESSAGE = Формат(ТекущаяДата(), "ДФ=ггггММддЧЧммсс000") + СлучЧисло + "-OUT-" + Строка.EDIINTERCHANGEID;
	
    Строка.ФайлИмя       = ?(ПодписатьФайл, "PRICAT_EZP", Строка.ВидДокумента) + "_" + Строка.EDIMESSAGE + ".xml";
    Если Строка.АктуализироватьИдентификатор Тогда
    	Строка.Идентификатор = ?(ПодписатьФайл, "PRICAT_EZP", Строка.ВидДокумента) + "_" + Строка.EDIMESSAGE;
    КонецЕсли;	
        
КонецЦикла;

#КонецОбласти

#Область СОЗДАНИЕ_XML
 
//Проверка наличия обязательных полей
ОбязательныеКолонки = Новый СписокЗначений;

//PRICAT 
ОбязательныеКолонки.Добавить("ACTION"			, "ACTION"			, Истина);
ОбязательныеКолонки.Добавить("NUMBER"			, "NUMBER"			, Истина);
ОбязательныеКолонки.Добавить("DATE"				, "DATE" 			, Истина);
ОбязательныеКолонки.Добавить("DATEFROM"			, "DATEFROM" 		, Истина);
ОбязательныеКолонки.Добавить("TIMEFROM"			, "TIMEFROM" 		, Истина);
ОбязательныеКолонки.Добавить("SUPPLIER"			, "SUPPLIER" 		, Истина);
ОбязательныеКолонки.Добавить("BUYER"			, "BUYER" 			, Истина);
ОбязательныеКолонки.Добавить("SENDER "			, "SENDER " 		, Истина);
ОбязательныеКолонки.Добавить("RECIPIENT"		, "RECIPIENT" 		, Истина);
ОбязательныеКолонки.Добавить("CATALOGUE"		, "CATALOGUE" 		, Истина);

//POSITION
ОбязательныеКолонки.Добавить("POSITIONNUMBER"	, "POSITIONNUMBER"	, Истина);
ОбязательныеКолонки.Добавить("ACTION"			, "ACTION"			, Истина);
ОбязательныеКолонки.Добавить("PRODUCT"			, "PRODUCT"			, Истина);
ОбязательныеКолонки.Добавить("TAXRATE"			, "TAXRATE"			, Истина);
ОбязательныеКолонки.Добавить("UNITPRICE"		, "UNITPRICE"		, Истина);
ОбязательныеКолонки.Добавить("UNIT"				, "UNIT"			, Истина);

МассивСтруктурИсходящих = Новый Массив;
              
//Структура свойств шапки документа
СтруктураШапка = Новый Структура("ACTION, NUMBER, DATE, DATEFROM, TIMEFROM, DATETO, TIMETO, CAMPAIGNNUMBER, CUSTOMERREFNUMBER, PRICATINFO,
								| ORDERCONTACT, CURRENCY, SUPPLIER, BUYER, SENDER, RECIPIENT, EDIINTERCHANGEID, CATALOGUE");

СтруктураORDERCONTACT = Новый Структура("CONTACTFACE, TELEPHON, EMAIL");

СтруктураCATALOGUE = Новый Структура("POSITION");

                                                                                                                            
//Имена свойств элемента POSITION
СвойстваPOSITION = "POSITIONNUMBER, ACTION, PRODUCT, PRODUCTGROUPCODE, IDSUPPLIER, IDBUYER, MINORDERQUANTITY, MINORDERQUANTITYUNIT, 
                  | MAXORDERQUANTITY, MAXORDERQUANTITYUNIT, QUANTITYOFCUINTU, QUANTITYOFCUINTUUNIT, PACKINGMULTIPLENESS, IDNATIONAL,
				  | IDINTERNATIONAL, IDGPC, REPLACEPRODUCT, PRODUCTGROUP, ANALOGPRODUCT, BRAND, SUBBRAND, VARIATY, FUNCTIONNAME,
				  | PRODUCTNAME, DEPTH, DEPTHUNIT, WIDTH, WIDTHUNIT, HEIGHT, HEIGHTUNIT, HYGIENICCERTIFICATE, VOLUME, VOLUMEUNIT,
				  | WEIGHT, WEIGHTUNIT, TEMPERATUREOFSTORAGE, COUNTRYORIGIN, BESTBEFORDATE, CERTIFICATEOFCONFORMITY, TAXRATE, UNITPRICE,
				  | PRICEWITHVAT, UNIT, RETAILPRICE, ADVICEPRICE, MAXORDERPRICE, MINORDERPRICE, DISCONT, PACKAGE, QUANTITYOFBOX, 
				  | QUANTITYOFPALLET, BONUSRATE, POSITIONCURRENCY";
	
	Для каждого СтрокаШапкиДокумента из Результат Цикл

		ТекстСообщенияПроверкиЗаполненияОбязательныхПолей = "";  
	    
	    //Заполнение структуры документа
		СтруктураДок = Новый Структура("PRICAT");
	    
	    СтруктураДок.PRICAT = СтруктураШапка;
	    СтруктураШапка.ORDERCONTACT = СтруктураORDERCONTACT;
	    СтруктураШапка.CATALOGUE = СтруктураCATALOGUE;
	    
		//Заполнение значений свойств шапки документа
		ЗаполнитьЗначенияСвойств(СтруктураШапка, СтрокаШапкиДокумента);
	
		//Заполнение значений свойств элемента ORDERCONTACT
		ЗаполнитьЗначенияСвойств(СтруктураORDERCONTACT, СтрокаШапкиДокумента);
		
		//Заполнение значений свойств элемента ORDERCONTACT
		ЗаполнитьЗначенияСвойств(СтруктураORDERCONTACT, СтрокаШапкиДокумента);
	
		МассивPOSITION = Новый Массив;
	    
	    ОтборСтрокНоменклатур = Новый Структура;
		ОтборСтрокНоменклатур.Вставить("Ссылка", СтрокаШапкиДокумента.Ссылка);
	
		СтрокиНоменклатурДокумента = ТаблицаТовары.НайтиСтроки(ОтборСтрокНоменклатур);
		
		Для Каждого СтрокаНоменклатурыДокумента Из СтрокиНоменклатурДокумента Цикл

			//Создание структуры POSITION
			Структура = Новый Структура(СвойстваPOSITION);
			
			//Заполнение значений свойств элемента POSITION
			ЗаполнитьЗначенияСвойств(Структура, СтрокаНоменклатурыДокумента);
			
			//Создание структуры TEMPERATUREOFSTORAGE
			СтруктураTEMPERATUREOFSTORAGE = Новый Структура("FROM, TO");
			СтруктураTEMPERATUREOFSTORAGE.FROM = СтрокаНоменклатурыДокумента.TEMPERATUREOFSTORAGE_FROM;
			СтруктураTEMPERATUREOFSTORAGE.TO = СтрокаНоменклатурыДокумента.TEMPERATUREOFSTORAGE_TO; 
			Структура.TEMPERATUREOFSTORAGE = СтруктураTEMPERATUREOFSTORAGE;
			
			//Создание структуры TEMPERATUREOFSTORAGE
			СтруктураDISCONT = Новый Структура("PERUNIT, PERCENT");
			ЗаполнитьЗначенияСвойств(СтруктураDISCONT, СтрокаНоменклатурыДокумента);
			Структура.DISCONT = СтруктураDISCONT;
			
			МассивPOSITION.Добавить(Структура);
		КонецЦикла;
		
		СтруктураШапка.CATALOGUE.POSITION = МассивPOSITION;
		
		//Создание XML строки
		XMLДокумент        	= Новый ЗаписьXML;		
		ПараметрыЗаписиXML 	= Новый ПараметрыЗаписиXML("UTF-8", "1.0", Истина, Ложь, Символы.Таб); 
		XMLДокумент.УстановитьСтроку("UTF-8");
		XMLДокумент.ЗаписатьОбъявлениеXML();
		
		Для каждого СтрокаЭлемента Из СтруктураДок Цикл
			ЗаписатьБлоки(XMLДокумент, СтрокаЭлемента, ОбязательныеКолонки, ТекстСообщенияПроверкиЗаполненияОбязательныхПолей);
		КонецЦикла;	

			СтрокаXML = XMLДокумент.Закрыть(); 
			
			
		Если ЗначениеЗаполнено(ТекстСообщенияПроверкиЗаполненияОбязательныхПолей) Тогда
			
				ТекстЛогаСобытий = ТекстСообщенияПроверкиЗаполненияОбязательныхПолей + Символы.ПС + "Документ был пропущен.";
			
				ДобавитьЗаписьВМассивЛога(МассивЛогаСобытий, ТекстЛогаСобытий, "Предупреждение", ИмяСобытия);
			
			Продолжить;	
		Иначе	
			
			СтруктураФайлаДанных = Новый Структура;
			СтруктураФайлаДанных.Вставить("ВидДокумента"				, "PRICAT_Исходящий");
			СтруктураФайлаДанных.Вставить("Документ"					, СтрокаШапкиДокумента.Ссылка);
			СтруктураФайлаДанных.Вставить("ИдентификаторЦепочки"		, СтрокаШапкиДокумента.ИдентификаторЦепочки);
			СтруктураФайлаДанных.Вставить("Идентификатор"				, СтрокаШапкиДокумента.Идентификатор);
			СтруктураФайлаДанных.Вставить("АктуализироватьИдентификатор", СтрокаШапкиДокумента.АктуализироватьИдентификатор);
			СтруктураФайлаДанных.Вставить("ИмяФайлаXML"					, СтрокаШапкиДокумента.ФайлИмя);
			СтруктураФайлаДанных.Вставить("КодировкаФайла"				, "UTF-8");
			СтруктураФайлаДанных.Вставить("Организация"					, СтрокаШапкиДокумента.Организация);
			СтруктураФайлаДанных.Вставить("Отправлен"					, НЕОПРЕДЕЛЕНО);
			СтруктураФайлаДанных.Вставить("Сообщение"					, "");
			СтруктураФайлаДанных.Вставить("Статус"						, СтрокаШапкиДокумента.Статус);
			СтруктураФайлаДанных.Вставить("СтрокаXML"					, СтрокаXML);
			СтруктураФайлаДанных.Вставить("ТипФайла"					, СтрокаШапкиДокумента.ВидДокумента);
			СтруктураФайлаДанных.Вставить("ДанныеСертификатаЭКОМ"		, СтрокаШапкиДокумента._Сертификат);
			СтруктураФайлаДанных.Вставить("СертификатНаСервере"			, СтрокаШапкиДокумента._СертификатНаСервере);
			
			МассивСтруктурИсходящих.Добавить(СтруктураФайлаДанных);
			
		КонецЕсли;
	
КонецЦикла;

#КонецОбласти

//Возврат Результат;				//раскомментировать для отображения значений таблицы "Результат" на вкладке "Тестирование"  
//Возврат РезультатНоменклатур;		//раскомментировать для отображения значений таблицы "РезультатНоменклатур" на вкладке "Тестирование"

Возврат МассивСтруктурИсходящих;</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:string">Исходящий PRICAT</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">9</lastId>
			<item>
				<value xsi:type="xs:string">Неструкт. докум.</value>
				<id xsi:type="xs:decimal">0</id>
			</item>
			<item>
				<value xsi:type="xs:string">Прайс-лист</value>
				<presentation>СписокPricatИсходящиеПостащикПокупатель</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">1</id>
			</item>
			<item>
				<value xsi:type="xs:string">Поставщик</value>
				<id xsi:type="xs:decimal">2</id>
			</item>
			<item>
				<value xsi:type="xs:string">Покупатель</value>
				<id xsi:type="xs:decimal">3</id>
			</item>
			<item>
				<value xsi:type="xs:string">Синоним</value>
				<presentation>Исходящий PRICAT</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">4</id>
			</item>
			<item>
				<value xsi:type="xs:string">ИмяКнопки</value>
				<presentation>ИсходящийPricat</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">5</id>
			</item>
			<item>
				<value xsi:type="xs:string">ПередаватьТекстПричины</value>
				<id xsi:type="xs:decimal">6</id>
			</item>
			<item>
				<value xsi:type="xs:string">ПриемникВидДокумента</value>
				<presentation>PRICAT_Исходящий</presentation>
				<id xsi:type="xs:decimal">7</id>
			</item>
			<item>
				<value xsi:type="xs:string">ИсточникВидДокумента</value>
				<presentation>PRICAT_Исходящий</presentation>
				<id xsi:type="xs:decimal">8</id>
			</item>
			<item>
				<value xsi:type="xs:string">НужнаПодпись</value>
				<presentation>Нет</presentation>
				<id xsi:type="xs:decimal">9</id>
			</item>
		</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:string">ИсходящийPricat</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">1</lastId>
			<item>
				<value xsi:type="xs:string"/>
				<presentation>ТекстЗапроса</presentation>
				<id xsi:type="xs:decimal">0</id>
			</item>
		</Value>
	</row>
</ValueTree>