<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ТипТранзакции</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Данные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ИмяКнопки</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Регламент</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Исходящий CONDRA (отклонение)</Value>
		<Value xsi:type="xs:string">	///МЧД
	ЗапросМЧД = Новый Запрос;
	ЗапросМЧД.Текст = ТекстЗапроса_МЧД_ПоОрганизациям();
	ЗапросМЧД.УстановитьПараметр("ЭтоРегламентноеЗадание", Ложь); 
	ЗапросМЧД.УстановитьПараметр("Пользователь", НайтиТекущегоПользователя()); 
	ЗапросМЧД.УстановитьПараметр("ТекущаяДата", ТекущаяДата()); 
	ТаблицаМЧД = ЗапросМЧД.Выполнить().Выгрузить();
	///
	
	ИмяСобытия = "Подготовка condra к отправке";
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ТаблицаМЧД.Организация КАК Организация,
	|	ТаблицаМЧД.Сертификат КАК Сертификат,
	|	ТаблицаМЧД.СертификатИНН КАК СертификатИНН,
	|	ТаблицаМЧД.СертификатНаСервере КАК СертификатНаСервере,
	|	ТаблицаМЧД.ДолжностьПодписанта КАК ДолжностьПодписанта,
	|	ТаблицаМЧД.ФамилияПодписанта КАК ФамилияПодписанта,
	|	ТаблицаМЧД.ИмяПодписанта КАК ИмяПодписанта,
	|	ТаблицаМЧД.ОтчествоПодписанта КАК ОтчествоПодписанта,
	|	ТаблицаМЧД.ОбластьПолномочий КАК ОбластьПолномочий,
	|	ТаблицаМЧД.ОснованиеПолномочий КАК ОснованиеПолномочий,
	|	ТаблицаМЧД.СтатусПодписанта КАК СтатусПодписанта,
	|	ТаблицаМЧД.СтрокаМЧД КАК СтрокаМЧД,
	|	ТаблицаМЧД.Организация_ПоддерживаетМЧД КАК Организация_ПоддерживаетМЧД,
	|	ТаблицаМЧД.ТипСертификата КАК ТипСертификата,
	|	ТаблицаМЧД.МЧД_Актуальна КАК МЧД_Актуальна
	|ПОМЕСТИТЬ ВТ_DR_МЧД
	|ИЗ
	|	&amp;ТаблицаМЧД КАК ТаблицаМЧД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеквизитNUMBER.Значение КАК NUMBER,
	|	РеквизитDATE.Значение КАК DATE,
	|	РеквизитDOCTYPE.Значение КАК DOCTYPE,
	|	РеквизитHEAD_RECIPIENT.Значение КАК HEAD_SENDER,
	|	РеквизитHEAD_RECIPIENTGUID.Значение КАК HEAD_SENDERGUID,
	|	РеквизитHEAD_SENDER.Значение КАК HEAD_RECIPIENT,
	|	РеквизитHEAD_SENDERGUID.Значение КАК HEAD_RECIPIENTGUID,
	|	РеквизитHEAD_DOCGUID.Значение КАК HEAD_DOCGUID,
	|	РеквизитHEAD_TRANSGUID.Значение КАК HEAD_TRANSGUID,
	|	РеквизитHEAD_TYPE.Значение КАК HEAD_TYPE,
	|	РеквизитHEAD_SUM.Значение КАК HEAD_SUM,
	|	&amp;ТекстАн КАК HEAD_INFO,
	|	РеквизитHEAD_CONTENT_FILENAME.Значение КАК HEAD_CONTENT_FILENAME,
	|	РеквизитHEAD_CONTENT_SIGNNAME.Значение КАК HEAD_CONTENT_SIGNNAME,
	|	DR_Документ.Ссылка КАК Документ
	|ПОМЕСТИТЬ ВтРеквизитыДокумента
	|ИЗ
	|	Документ.DR_Документ КАК DR_Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитNUMBER
	|		ПО DR_Документ.Ссылка = РеквизитNUMBER.Ссылка
	|			И (РеквизитNUMBER.Реквизит = ""NUMBER"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитDATE
	|		ПО DR_Документ.Ссылка = РеквизитDATE.Ссылка
	|			И (РеквизитDATE.Реквизит = ""DATE"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитDOCTYPE
	|		ПО DR_Документ.Ссылка = РеквизитDOCTYPE.Ссылка
	|			И (РеквизитDOCTYPE.Реквизит = ""DOCTYPE"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитHEAD_SENDER
	|		ПО DR_Документ.Ссылка = РеквизитHEAD_SENDER.Ссылка
	|			И (РеквизитHEAD_SENDER.Реквизит = ""HEAD_SENDER"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитHEAD_SENDERGUID
	|		ПО DR_Документ.Ссылка = РеквизитHEAD_SENDERGUID.Ссылка
	|			И (РеквизитHEAD_SENDERGUID.Реквизит = ""HEAD_SENDERGUID"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитHEAD_RECIPIENT
	|		ПО DR_Документ.Ссылка = РеквизитHEAD_RECIPIENT.Ссылка
	|			И (РеквизитHEAD_RECIPIENT.Реквизит = ""HEAD_RECIPIENT"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитHEAD_RECIPIENTGUID
	|		ПО DR_Документ.Ссылка = РеквизитHEAD_RECIPIENTGUID.Ссылка
	|			И (РеквизитHEAD_RECIPIENTGUID.Реквизит = ""HEAD_RECIPIENTGUID"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитHEAD_DOCGUID
	|		ПО DR_Документ.Ссылка = РеквизитHEAD_DOCGUID.Ссылка
	|			И (РеквизитHEAD_DOCGUID.Реквизит = ""HEAD_DOCGUID"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитHEAD_TRANSGUID
	|		ПО DR_Документ.Ссылка = РеквизитHEAD_TRANSGUID.Ссылка
	|			И (РеквизитHEAD_TRANSGUID.Реквизит = ""HEAD_TRANSGUID"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитHEAD_TYPE
	|		ПО DR_Документ.Ссылка = РеквизитHEAD_TYPE.Ссылка
	|			И (РеквизитHEAD_TYPE.Реквизит = ""HEAD_TYPE"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитHEAD_SUM
	|		ПО DR_Документ.Ссылка = РеквизитHEAD_SUM.Ссылка
	|			И (РеквизитHEAD_SUM.Реквизит = ""HEAD_SUM"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитHEAD_CONTENT_FILENAME
	|		ПО DR_Документ.Ссылка = РеквизитHEAD_CONTENT_FILENAME.Ссылка
	|			И (РеквизитHEAD_CONTENT_FILENAME.Реквизит = ""HEAD_CONTENT_FILENAME"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК РеквизитHEAD_CONTENT_SIGNNAME
	|		ПО DR_Документ.Ссылка = РеквизитHEAD_CONTENT_SIGNNAME.Ссылка
	|			И (РеквизитHEAD_CONTENT_SIGNNAME.Реквизит = ""HEAD_CONTENT_SIGNNAME"")
	|ГДЕ
	|	DR_Документ.Ссылка В(&amp;Документ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтРеквизитыДокумента.NUMBER КАК NUMBER,
	|	ВтРеквизитыДокумента.DATE КАК DATE,
	|	ВтРеквизитыДокумента.DOCTYPE КАК DOCTYPE,
	|	ВтРеквизитыДокумента.HEAD_SENDER КАК HEAD_SENDER,
	|	ВтРеквизитыДокумента.HEAD_SENDERGUID КАК HEAD_SENDERGUID,
	|	ВтРеквизитыДокумента.HEAD_RECIPIENT КАК HEAD_RECIPIENT,
	|	ВтРеквизитыДокумента.HEAD_RECIPIENTGUID КАК HEAD_RECIPIENTGUID,
	|	ВтРеквизитыДокумента.HEAD_DOCGUID КАК HEAD_DOCGUID,
	|	ВтРеквизитыДокумента.HEAD_TRANSGUID КАК HEAD_TRANSGUID,
	|	""3"" КАК HEAD_TYPE,
	|	ВтРеквизитыДокумента.HEAD_SUM КАК HEAD_SUM,
	|	ВтРеквизитыДокумента.HEAD_INFO КАК HEAD_INFO,
	|	ВтРеквизитыДокумента.HEAD_CONTENT_FILENAME КАК HEAD_CONTENT_FILENAME,
	|	ВтРеквизитыДокумента.HEAD_CONTENT_SIGNNAME КАК HEAD_CONTENT_SIGNNAME,
	|	ВтРеквизитыДокумента.Документ КАК Документ
	|ИЗ
	|	ВтРеквизитыДокумента КАК ВтРеквизитыДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО КАК СтруктураДокумента,
	|	ЛОЖЬ КАК _Отказ,
	|	DR_События.ИдентификаторЦепочки КАК TRANSGUID,
	|	DR_События.Статус КАК Статус,
	|	DR_ЦепочкиДокументов.Организация КАК _Организация,
	|	DR_ЦепочкиДокументов.Контрагент КАК Контрагент,
	|	ВЫБОР
	|		КОГДА DR_GLN_Организация.ПоддерживаетМЧД = ИСТИНА
	|				И DR_GLN_Контрагент.ПоддерживаетМЧД = ИСТИНА
	|			ТОГДА DR_МЧД.Сертификат
	|		ИНАЧЕ DR_GLN_Организация.Сертификат
	|	КОНЕЦ КАК _Сертификат,
	|	ВЫБОР
	|		КОГДА DR_GLN_Организация.ПоддерживаетМЧД = ИСТИНА
	|				И DR_GLN_Контрагент.ПоддерживаетМЧД = ИСТИНА
	|			ТОГДА DR_МЧД.СертификатНаСервере
	|		ИНАЧЕ DR_СертификатНаСервере.Значение
	|	КОНЕЦ КАК _СертификатНаСервере,
	|	DR_GLN_Контрагент.ПоддерживаетМЧД
	|		И DR_GLN_Организация.ПоддерживаетМЧД
	|		И DR_МЧД.ТипСертификата = 2 КАК ОтправитьМЧД,
	|	DR_МЧД.МЧД_Актуальна КАК МЧД_Актуальна,
	|	DR_МЧД.СтрокаМЧД КАК СтрокаМЧД,
	|	DR_События.Документ КАК Документ,
	|	ВтРеквизитыДокумента.NUMBER КАК NUMBER,
	|	ВтРеквизитыДокумента.DATE КАК DATE,
	|	ВтРеквизитыДокумента.DOCTYPE КАК DOCTYPE,
	|	ВтРеквизитыДокумента.HEAD_SENDER КАК HEAD_SENDER,
	|	ВтРеквизитыДокумента.HEAD_SENDERGUID КАК HEAD_SENDERGUID,
	|	ВтРеквизитыДокумента.HEAD_RECIPIENT КАК HEAD_RECIPIENT,
	|	ВтРеквизитыДокумента.HEAD_RECIPIENTGUID КАК HEAD_RECIPIENTGUID,
	|	ВтРеквизитыДокумента.HEAD_DOCGUID КАК HEAD_DOCGUID,
	|	ВтРеквизитыДокумента.HEAD_TRANSGUID КАК HEAD_TRANSGUID,
	|	ВтРеквизитыДокумента.HEAD_TYPE КАК HEAD_TYPE,
	|	ВтРеквизитыДокумента.HEAD_SUM КАК HEAD_SUM,
	|	ВтРеквизитыДокумента.HEAD_INFO КАК HEAD_INFO,
	|	ВтРеквизитыДокумента.HEAD_CONTENT_FILENAME КАК HEAD_CONTENT_FILENAME,
	|	ВтРеквизитыДокумента.HEAD_CONTENT_SIGNNAME КАК HEAD_CONTENT_SIGNNAME
	|ИЗ
	|	РегистрСведений.DR_События КАК DR_События
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_ЦепочкиДокументов КАК DR_ЦепочкиДокументов
	|		ПО DR_События.ИдентификаторЦепочки = DR_ЦепочкиДокументов.ИдентификаторЦепочки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.DR_GLN КАК DR_GLN_Организация
	|		ПО (DR_ЦепочкиДокументов.Организация = DR_GLN_Организация.Объект)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.DR_Настройки.ДополнительныеРеквизиты КАК DR_СертификатНаСервере
	|		ПО (DR_GLN_Организация.Сертификат = DR_СертификатНаСервере.Ссылка)
	|			И (DR_СертификатНаСервере.Реквизит = ""СертификатНаСервере"")
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.DR_GLN КАК DR_GLN_Контрагент
	|		ПО (DR_ЦепочкиДокументов.Контрагент = DR_GLN_Контрагент.Объект)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_DR_МЧД КАК DR_МЧД
	|		ПО (DR_ЦепочкиДокументов.Организация = DR_МЧД.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтРеквизитыДокумента КАК ВтРеквизитыДокумента
	|		ПО DR_События.Документ = ВтРеквизитыДокумента.Документ
	|ГДЕ
	|	DR_События.Документ В(&amp;Документ)
	|	И DR_События.ВидДокумента = &amp;ВидДокумента";
	
	Запрос.УстановитьПараметр("Документ", Источник);
	Запрос.УстановитьПараметр("ВидДокумента", "CONDRA_Входящий");
	Запрос.УстановитьПараметр("ТаблицаМЧД", ТаблицаМЧД);
	Запрос.УстановитьПараметр("ТекстАн", ТекстАн);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыДокумента = РезультатЗапроса[2].Выгрузить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса[3].Выгрузить();
	
	ОбязательныеПоля = Новый Массив;
	ОбязательныеПоля.Добавить("NUMBER");
	ОбязательныеПоля.Добавить("DATE");
	ОбязательныеПоля.Добавить("HEAD_TYPE");
	ОбязательныеПоля.Добавить("HEAD_SENDER");
	ОбязательныеПоля.Добавить("HEAD_SENDERGUID");
	ОбязательныеПоля.Добавить("HEAD_RECIPIENT");
	ОбязательныеПоля.Добавить("HEAD_RECIPIENTGUID");
	ОбязательныеПоля.Добавить("HEAD_DOCGUID");
	ОбязательныеПоля.Добавить("HEAD_TRANSGUID");
	ОбязательныеПоля.Добавить("HEAD_INFO");
	ОбязательныеПоля.Добавить("HEAD_CONTENT_FILENAME");
	ОбязательныеПоля.Добавить("HEAD_CONTENT_SIGNNAME");
	
	Для Каждого Запись Из ВыборкаДетальныеЗаписи Цикл
		
		ПустыеПоля = Новый Массив;
		ПустыеПоляТекст = "";
		
		Если Запись.ОтправитьМЧД = Истина И (НЕ ЗначениеЗаполнено(Запись.СтрокаМЧД) ИЛИ НЕ Запись.МЧД_Актуальна) Тогда
			ТекстЛогаСобытий = "Не определена МЧД для текущего пользователя по организации! - " + Строка(Запись._Организация);			
			ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Ошибка", ИмяСобытия);
			МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
			
			Продолжить;
		КонецЕсли;
		
		Для Каждого ОбязательноеПоле Из ОбязательныеПоля Цикл
			
			ЗначениеПоля = Неопределено;
			
			Если НЕ ВыборкаДетальныеЗаписи.Колонки.Найти(ОбязательноеПоле) = Неопределено Тогда 
				ЗначениеПоля = Запись[ОбязательноеПоле];
			КонецЕсли;	
			
			Если ЗначениеПоля = Неопределено
				ИЛИ ПустаяСтрока(ЗначениеПоля) Тогда
				ПустыеПоля.Добавить(ОбязательноеПоле);
				Запись._Отказ = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
		Для Каждого ПустоеПоле Из ПустыеПоля Цикл
			ПустыеПоляТекст = ПустыеПоляТекст + ?(ПустаяСтрока(ПустыеПоляТекст), "", ", ") + ПустоеПоле;
		КонецЦикла;
		
		Если НЕ ПустаяСтрока(ПустыеПоляТекст) Тогда
			ТекстЛогаСобытий = "Для исходящего неструктурированного документа с TRANSGUID " + Запись.TRANSGUID + " не "
			+ ?(ПустыеПоля.Количество() = 1, "заполнено обязательное поле ", "заполнены обязательные поля ") + ПустыеПоляТекст;
			ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Ошибка", ИмяСобытия);
			МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);				
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Запись._Сертификат) Тогда 
			Запись._Отказ = Истина;
			ТекстЛогаСобытий = "Для исходящего неструктурированного документа с TRANSGUID " + Запись.TRANSGUID 
			+ " не указан сертификат, заполните регистр ЭКОМ GLN! Возможно пользователя нет в списке.";
			ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Ошибка", ИмяСобытия);
			МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
		КонецЕсли;	
		
		//Если прошли проверки, создаем структуру для записи XML
		Если НЕ Запись._Отказ Тогда
			
			СтрокаРеквизитов = РеквизитыДокумента.Найти(Запись.Документ, "Документ");
			
			Если НЕ СтрокаРеквизитов = Неопределено Тогда
				
				СтруктураДокумента = Новый Структура;
				СтруктураHEAD = Новый Структура;
				СтруктураCONTENT = Новый Структура;
				
				Для Каждого Колонка Из РеквизитыДокумента.Колонки Цикл
					
					Если Колонка.Имя = "Документ" Тогда
						Продолжить;
					КонецЕсли;
					
					Если Найти(Колонка.Имя, "HEAD_CONTENT_") &gt; 0 Тогда
						СтруктураCONTENT.Вставить(СтрЗаменить(Колонка.Имя, "HEAD_CONTENT_", ""), СтрокаРеквизитов[Колонка.Имя]);	
					ИначеЕсли Найти(Колонка.Имя, "HEAD_") &gt; 0 Тогда	
						СтруктураHEAD.Вставить(СтрЗаменить(Колонка.Имя, "HEAD_", ""), СтрокаРеквизитов[Колонка.Имя]);	
					Иначе
						СтруктураДокумента.Вставить(Колонка.Имя, СтрокаРеквизитов[Колонка.Имя]);
					КонецЕсли;
					
				КонецЦикла;	
				
				СтруктураHEAD.Вставить("CONTENT", СтруктураCONTENT); 
				СтруктураДокумента.Вставить("HEAD", СтруктураHEAD);
				
				Запись.СтруктураДокумента = СтруктураДокумента;
				
			КонецЕсли;
			
		КонецЕсли;	
		
	КонецЦикла;	
	
	КодировкаФайла = "windows-1251";
	ВидДокумента = "CONDRA_Исходящий";
	
	МассивСтруктурИсходящих = Новый Массив();
	ВыборкаДетальныеЗаписиБезОтказа = ВыборкаДетальныеЗаписи.НайтиСтроки(Новый Структура("_Отказ", Ложь));	
	
	ИдентификаторДокумента 	= "";	
	EDIINTERCHANGEID 		= 0;
	
	Для Каждого Запись Из ВыборкаДетальныеЗаписиБезОтказа Цикл 
		
		EDIINTERCHANGEID 		= НовыйНомерТранзакции(EDIINTERCHANGEID);
		EDIMESSAGE				= Формат(ТекущаяДатаСеанса(), "ДФ=ггггММддЧЧммсс000") + "-OUT-" + Формат(EDIINTERCHANGEID, "ЧГ=0");
		ИдентификаторДокумента  = Строка(Новый УникальныйИдентификатор);
		
		//переопределить имена файлов
		Запись.СтруктураДокумента.HEAD.CONTENT.FILENAME = "CONDRA" + "_" + EDIMESSAGE + ".xml";
		Запись.СтруктураДокумента.HEAD.CONTENT.SIGNNAME = "CONDRA" + "_" + EDIMESSAGE + ".bin";
		Запись.СтруктураДокумента.HEAD.DOCGUID = ИдентификаторДокумента;
		
		СтрокаЗаписи = Новый Структура;  
		СтрокаЗаписи.Вставить("ВидДокумента",				ВидДокумента);
		СтрокаЗаписи.Вставить("СтрокаXML", 					ЗаписатьФайлXML(Запись.СтруктураДокумента, "CONDRA", КодировкаФайла));
		//СтрокаЗаписи.Вставить("ИмяФайлаДанных", 			Запись.HEAD_CONTENT_FILENAME);
		СтрокаЗаписи.Вставить("ИмяФайлаBIN", 				"CONDRA" + "_" + EDIMESSAGE + ".bin");
		СтрокаЗаписи.Вставить("Идентификатор", 				Запись.TRANSGUID);
		СтрокаЗаписи.Вставить("ИдентификаторДокумента", 	ИдентификаторДокумента);
		СтрокаЗаписи.Вставить("ИдентификаторОснования", 	Запись.HEAD_DOCGUID);
		СтрокаЗаписи.Вставить("КодировкаФайла", 			КодировкаФайла);
		СтрокаЗаписи.Вставить("ДанныеСертификатаЭКОМ", 		Запись._Сертификат);
		СтрокаЗаписи.Вставить("СертификатНаСервере", 		Запись._СертификатНаСервере);
		СтрокаЗаписи.Вставить("Организация", 				Запись._Организация);
		СтрокаЗаписи.Вставить("Статус", 					"Отклонён");
		СтрокаЗаписи.Вставить("INFO",                       Запись.HEAD_INFO);
		СтрокаЗаписи.Вставить("Документ", 					"Исходящий неструктурированный документ № " + Запись.NUMBER + " от " + Запись.DATE);
		СтрокаЗаписи.Вставить("Сообщение", 					"");
		СтрокаЗаписи.Вставить("Отправлен", 					Ложь);
		СтрокаЗаписи.Вставить("ИмяФайлаXML", 				"CONDRA" + "_" + EDIMESSAGE + ".xml");
		СтрокаЗаписи.Вставить("ИмяЛокальногоАрхива", 		"CONDRA_" + EDIMESSAGE);
		СтрокаЗаписи.Вставить("АдресФайлаДанных",			"");
		СтрокаЗаписи.Вставить("АдресФайлаBIN",				""); // Заполняется в модуле формы после подписания документа
		СтрокаЗаписи.Вставить("ДвоичныеДанныеФайлаДанных", 	"");
		СтрокаЗаписи.Вставить("ДвоичныеДанныеФайлаBIN", 	""); // Заполняется в CondraОтправить из АдресФайлаBIN
		//МЧД
		СтрокаЗаписи.Вставить("ТипФайла", "CONDRA");
		Если Запись.ОтправитьМЧД = Истина Тогда
			СтрокаЗаписи.Вставить("СтрокаМЧД", СтрЗаменить(Запись.СтрокаМЧД, "&amp;GUID", СтрЗаменить(Формат(EDIINTERCHANGEID, "ЧГ=0"), "-", "")));
			СтрокаЗаписи.Вставить("ИмяФайлаМЧД", "DESCRIPTION_" + EDIMESSAGE + ".xml");
		КонецЕсли; 
		
		МассивСтруктурИсходящих.Добавить(СтрокаЗаписи);
	КонецЦикла;
	
	Возврат МассивСтруктурИсходящих;
</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:string">Исходящий CONDRA (отклонение)</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">9</lastId>
			<item>
				<value xsi:type="xs:string">Неструкт. докум.</value>
				<presentation>СписокДляCondra</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">0</id>
			</item>
			<item>
				<value xsi:type="xs:string">Прайс-лист</value>
				<id xsi:type="xs:decimal">1</id>
			</item>
			<item>
				<value xsi:type="xs:string">Поставщик</value>
				<id xsi:type="xs:decimal">2</id>
			</item>
			<item>
				<value xsi:type="xs:string">Покупатель</value>
				<id xsi:type="xs:decimal">3</id>
			</item>
			<item>
				<value xsi:type="xs:string">Синоним</value>
				<presentation>Исходящий CONDRA (отклонение)</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">4</id>
			</item>
			<item>
				<value xsi:type="xs:string">ИмяКнопки</value>
				<presentation>ИсходящийCondraОтклонение</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">5</id>
			</item>
			<item>
				<value xsi:type="xs:string">ПередаватьТекстПричины</value>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">6</id>
			</item>
			<item>
				<value xsi:type="xs:string">ПриемникВидДокумента</value>
				<presentation>CONDRA_Входящий</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">7</id>
			</item>
			<item>
				<value xsi:type="xs:string">ИсточникВидДокумента</value>
				<presentation>CONDRA_Исходящий</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">8</id>
			</item>
			<item>
				<value xsi:type="xs:string">НужнаПодпись</value>
				<presentation>Да</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">9</id>
			</item>
		</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:string">ИсходящийCondraОтклонение</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">-1</lastId>
		</Value>
	</row>
</ValueTree>