<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ТипТранзакции</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Данные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ИмяКнопки</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Регламент</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Исходящий ORDER</Value>
		<Value xsi:type="xs:string">#Область ШАПКА_Заполнение

Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
               |	ЗаказПоставщику.Ссылка КАК Ссылка,
               |	ЗаказПоставщику.Номер КАК Номер,
               |	ЗаказПоставщику.Дата КАК Дата,               
               |	НАЧАЛОПЕРИОДА(ЗаказПоставщику.Дата, ДЕНЬ) КАК ЗаказДата,
               |	ЗаказПоставщику.Организация КАК Организация,
               |	ЗаказПоставщику.Контрагент КАК Контрагент,
               |	ЗаказПоставщику.Склад КАК ТочкаДоставки,
               |	ЗаказПоставщику.Договор.Дата КАК ДатаДоговора,
               |	ЗаказПоставщику.Договор.Номер КАК CAMPAIGNNUMBER,
               |    ВЫБОР
               |        КОГДА ЗаказПоставщику.ПоступлениеОднойДатой = ИСТИНА
               |                И НЕ ЗаказПоставщику.ДатаПоступления = ДАТАВРЕМЯ(1, 1, 1)
               |            ТОГДА ЗаказПоставщику.ДатаПоступления
               |        КОГДА НЕ ЗаказПоставщику.ЖелаемаяДатаПоступления = ДАТАВРЕМЯ(1, 1, 1)
               |            ТОГДА ЗаказПоставщику.ЖелаемаяДатаПоступления
               |        ИНАЧЕ ЗаказПоставщику.Дата
               |    КОНЕЦ КАК ДатаПоступления
               |ПОМЕСТИТЬ втДанныеЗаказа
               |ИЗ
               |	Документ.ЗаказПоставщику КАК ЗаказПоставщику
               |ГДЕ
               |	ЗаказПоставщику.Ссылка В(&amp;Источник)
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	рсЦепочкиДокументов.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
               |	втДанныеЗаказа.Ссылка,
               |	втДанныеЗаказа.Номер КАК Номер,
               |	втДанныеЗаказа.Дата КАК Дата,
               |	втДанныеЗаказа.Номер КАК ЗаказНомер,
			   |	втДанныеЗаказа.ЗаказДата КАК ЗаказДата,
               |	втДанныеЗаказа.Контрагент КАК Контрагент,
               |	втДанныеЗаказа.Организация КАК Организация,
               |	втДанныеЗаказа.ДатаДоговора КАК ДатаДоговора,
               |	втДанныеЗаказа.CAMPAIGNNUMBER КАК CAMPAIGNNUMBER,
               |	втДанныеЗаказа.ДатаПоступления КАК ДатаПоступления,
               |	DR_GLN_Контрагент.GLN КАК SUPPLIER,
               |	DR_GLN_Организация.GLN КАК BUYER,
               |	DR_ТочкиДоставки.GLN КАК DELIVERYPLACE,
               |	DR_GLN_Организация.GLN КАК INVOICEPARTNER,
               |	DR_GLN_Организация.GLN КАК SENDER,
               |	DR_GLN_Контрагент.GLN КАК RECIPIENT,
               |	""Отправлен"" КАК Статус,
               |	""ORDER_Исходящий"" КАК ВидДокумента,
               |	""ORDER"" КАК ТипДокумента,
               |	""220"" КАК DOCUMENTNAME,
               |	""RUB"" КАК CURRENCY,
               |	""O"" КАК DOCTYPE,
			   |	ВЫРАЗИТЬ("""" КАК СТРОКА(10)) КАК DATE,
			   |	ВЫРАЗИТЬ("""" КАК СТРОКА(35)) КАК NUMBER,
			   |	ВЫРАЗИТЬ("""" КАК СТРОКА(5)) КАК TIME,
			   |	ВЫРАЗИТЬ("""" КАК СТРОКА(10)) КАК DELIVERYDATE,
			   |	ВЫРАЗИТЬ("""" КАК СТРОКА(10)) КАК CAMPAIGNDATE,
			   |	ВЫРАЗИТЬ("""" КАК СТРОКА(20)) КАК EDIINTERCHANGEID,
			   |	ВЫРАЗИТЬ("""" КАК СТРОКА(300)) КАК EDIMESSAGE,
			   |	ВЫРАЗИТЬ("""" КАК СТРОКА(300)) КАК ФайлИмя,
			   |	ВЫРАЗИТЬ("""" КАК СТРОКА(300)) КАК Идентификатор
               |ИЗ
               |	втДанныеЗаказа КАК втДанныеЗаказа
               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_ЦепочкиДокументов КАК рсЦепочкиДокументов
               |		ПО (рсЦепочкиДокументов.НомерЗаказа = втДанныеЗаказа.Номер)
               |			И (рсЦепочкиДокументов.ДатаЗаказа = втДанныеЗаказа.ЗаказДата)
               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_GLN КАК DR_GLN_Контрагент
               |		ПО втДанныеЗаказа.Контрагент = DR_GLN_Контрагент.Объект
               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_GLN КАК DR_GLN_Организация
               |		ПО втДанныеЗаказа.Организация = DR_GLN_Организация.Объект
               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_ТочкиДоставки КАК DR_ТочкиДоставки
               |		ПО втДанныеЗаказа.ТочкаДоставки = DR_ТочкиДоставки.Объект";

Запрос.УстановитьПараметр("Источник", Источник);

РезультатЗапроса = Запрос.Выполнить(); 
Результат = РезультатЗапроса.Выгрузить();

EDIINTERCHANGEID = 0;

Для Каждого Строка Из Результат Цикл

    EDIINTERCHANGEID = НовыйНомерТранзакции(EDIINTERCHANGEID);

    Строка.NUMBER               = СокрЛП(Строка.Номер);
    Строка.DATE                 = Формат(Строка.Дата, "ДФ=yyyy-MM-dd");
    Строка.TIME                 = Формат(Строка.Дата, "ДФ=HH:mm");
    Строка.DELIVERYDATE         = Формат(Строка.ДатаПоступления, "ДФ=yyyy-MM-dd");
    Строка.CAMPAIGNDATE         = Формат(Строка.ДатаДоговора, "ДФ=yyyy-MM-dd");
    Строка.EDIINTERCHANGEID     = Формат(EDIINTERCHANGEID, "ЧГ=0");
    Строка.EDIMESSAGE           = Формат(ТекущаяДата(), "ДФ=ггггММддЧЧммсс000") + "-OUT-" + Строка.EDIINTERCHANGEID;
    Строка.ФайлИмя              = Строка.ТипДокумента + "_" + Строка.EDIMESSAGE + ".xml";
    Строка.Идентификатор        = Строка.ТипДокумента + "_" + Строка.EDIMESSAGE;   
    
КонецЦикла;

#КонецОбласти

#Область ТАБЛИЦА_Заполнение

ЗапросНоменклатур = Новый Запрос;
ЗапросНоменклатур.Текст = "ВЫБРАТЬ
               |    Заказ.Ссылка КАК Ссылка,
               |    ЗаказТовары.НомерСтроки КАК POSITIONNUMBER,
               |    ЗаказТовары.Номенклатура.Код КАК Артикул,
               |    ЗаказТовары.Количество КАК Количество,
               |    ВЫБОР
               |        КОГДА ЗаказТовары.Номенклатура.ЕдиницаИзмерения.МеждународноеСокращение = """"
               |            ТОГДА ""PCE""
               |        ИНАЧЕ ЗаказТовары.Номенклатура.ЕдиницаИзмерения.МеждународноеСокращение
               |    КОНЕЦ КАК ORDERUNIT,
               |    ЗаказТовары.Цена КАК Цена,
               |    ЗаказТовары.СтавкаНДС КАК СтавкаНДС,
               |    ЗаказТовары.Номенклатура.Наименование КАК DESCRIPTION,
               |    МаксимальныйШтриКод.Штрихкод КАК ШтрихКод,
               |    """" КАК Вес,
               |    Заказ.ЦенаВключаетНДС КАК СуммаВключаетНДС,
               |    ЗаказТовары.Номенклатура.Наименование КАК НоменклатураНаименование,
               |    Заказ.Представление КАК Представление
               |ИЗ
               |    Документ.ЗаказПоставщику КАК Заказ
               |        ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.Товары КАК ЗаказТовары
               |            ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
               |                МАКСИМУМ(ШтрихкодыНоменклатуры.Штрихкод) КАК Штрихкод,
               |                ШтрихкодыНоменклатуры.Номенклатура КАК Номенклатура
               |            ИЗ
               |                Документ.ЗаказПоставщику КАК ЗаказШтрихКод
               |                    ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.Товары КАК ЗаказТоварыШтрихКод
               |                        ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
               |                        ПО ЗаказТоварыШтрихКод.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
               |                    ПО ЗаказШтрихКод.Ссылка = ЗаказТоварыШтрихКод.Ссылка
               |            ГДЕ
               |                ЗаказШтрихКод.Ссылка В(&amp;Документ)
               |            
               |            СГРУППИРОВАТЬ ПО
               |                ШтрихкодыНоменклатуры.Номенклатура) КАК МаксимальныйШтриКод
               |            ПО ЗаказТовары.Номенклатура = МаксимальныйШтриКод.Номенклатура
               |        ПО Заказ.Ссылка = ЗаказТовары.Ссылка
               |ГДЕ
               |    ЗаказТовары.Ссылка В(&amp;Документ)
               |
               |УПОРЯДОЧИТЬ ПО
               |    POSITIONNUMBER";
               
ЗапросНоменклатур.УстановитьПараметр("Документ", Источник);

РезультатЗапросаНоменклатур = ЗапросНоменклатур.Выполнить(); 
РезультатНоменклатур = РезультатЗапросаНоменклатур.Выгрузить();

РезультатНоменклатур.Колонки.Добавить("PRODUCT"        , Новый ОписаниеТипов("Строка"));
РезультатНоменклатур.Колонки.Добавить("PRODUCTIDBUYER" , Новый ОписаниеТипов("Строка"));
РезультатНоменклатур.Колонки.Добавить("ORDEREDQUANTITY", Новый ОписаниеТипов("Строка"));
РезультатНоменклатур.Колонки.Добавить("ORDERPRICE"     , Новый ОписаниеТипов("Строка"));
РезультатНоменклатур.Колонки.Добавить("PRICEWITHVAT"   , Новый ОписаниеТипов("Строка"));
РезультатНоменклатур.Колонки.Добавить("VAT"            , Новый ОписаниеТипов("Строка"));
РезультатНоменклатур.Колонки.Добавить("Отказ"          , Новый ОписаниеТипов("Булево"));

СтавкаНДСЧислом = 0;

Для Каждого СтрокаНоменклатур Из РезультатНоменклатур Цикл

	СтавкаНДС = СтавкаНДСЧислом(СтрокаНоменклатур.СтавкаНДС);
    
    СтрокаНоменклатур.Отказ = Ложь;
    
    Если ПустаяСтрока(СтрокаНоменклатур.Штрихкод) Тогда
                
        ТекстЛогаСобытий = "По документу - " + СтрокаНоменклатур.Представление + " в табличной части, в строке " 
        				 + СтрокаНоменклатур.POSITIONNUMBER + " у номенклатуры " + СтрокаНоменклатур.НоменклатураНаименование + " не заполнен штрихкод";
        	
        ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Ошибка", ИмяСобытия);
        МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
  
        СтрокаНоменклатур.Отказ = Истина;
    КонецЕсли;

    Если СтрокаНоменклатур.СуммаВключаетНДС Тогда
         Цена     = Окр(СтрокаНоменклатур.Цена - (СтрокаНоменклатур.Цена * СтавкаНДС/(100 + СтавкаНДС)), 2);
         ЦенаСНДС = СтрокаНоменклатур.Цена;
    Иначе
         Цена     = СтрокаНоменклатур.Цена;
         ЦенаСНДС = Окр(СтрокаНоменклатур.Цена + (СтрокаНоменклатур.Цена * СтавкаНДС/100), 2);
    КонецЕсли;

    СтрокаНоменклатур.ORDERPRICE        = Формат(Цена, "ЧДЦ=2; ЧРД=.; ЧН=0.00; ЧГ=0");
    СтрокаНоменклатур.PRICEWITHVAT      = Формат(ЦенаСНДС, "ЧДЦ=2; ЧРД=.; ЧН=0.00; ЧГ=0");
    СтрокаНоменклатур.PRODUCT           = СокрЛП(СтрокаНоменклатур.Штрихкод);
    СтрокаНоменклатур.PRODUCTIDBUYER    = СокрЛП(СтрокаНоменклатур.Артикул);
    СтрокаНоменклатур.ORDEREDQUANTITY   = Формат(СтрокаНоменклатур.Количество, "ЧДЦ=3; ЧРД=.; ЧН=; ЧГ=0");
    СтрокаНоменклатур.VAT               = Формат(СтавкаНДС, "ЧДЦ=; ЧГ=0");
    
    СтавкаНДСЧислом = СтавкаНДСЧислом + СтавкаНДС;
    
КонецЦикла;    

#КонецОбласти

#Область СОЗДАНИЕ_XML 

//Проверка наличия обязательных полей
ОбязательныеКолонки = Новый СписокЗначений;

//ORDER
ОбязательныеКолонки.Добавить("DOCUMENTNAME"	, "DOCUMENTNAME"	, Истина);					
ОбязательныеКолонки.Добавить("NUMBER"		, "NUMBER"			, Истина);				
ОбязательныеКолонки.Добавить("DATE"			, "DATE"			, Истина);
ОбязательныеКолонки.Добавить("DELIVERYDATE"	, "DELIVERYDATE"	, Истина);

//HEAD
ОбязательныеКолонки.Добавить("SUPPLIER"			, "SUPPLIER"		, Истина);
ОбязательныеКолонки.Добавить("BUYER"			, "BUYER"			, Истина);					
ОбязательныеКолонки.Добавить("DELIVERYPLACE"	, "DELIVERYPLACE"	, Истина);   							
ОбязательныеКолонки.Добавить("SENDER"			, "SENDER"			, Истина);
ОбязательныеКолонки.Добавить("RECIPIENT"		, "RECIPIENT"		, Истина);				

//POSITION
ОбязательныеКолонки.Добавить("POSITIONNUMBER"	, "POSITIONNUMBER"	, Истина);
ОбязательныеКолонки.Добавить("PRODUCT"			, "PRODUCT"			, Истина);					
ОбязательныеКолонки.Добавить("PRODUCTIDBUYER"	, "PRODUCTIDBUYER"	, Истина);
ОбязательныеКолонки.Добавить("ORDEREDQUANTITY"	, "ORDEREDQUANTITY"	, Истина);
ОбязательныеКолонки.Добавить("ORDERUNIT"		, "ORDERUNIT"		, Истина);
ОбязательныеКолонки.Добавить("ORDERPRICE"		, "ORDERPRICE"		, Ложь);   							
ОбязательныеКолонки.Добавить("PRICEWITHVAT"		, "PRICEWITHVAT"	, Ложь);
Если СтавкаНДСЧислом &lt;&gt; 0 Тогда
	ОбязательныеКолонки.Добавить("VAT"			, "VAT"				, Ложь);
КонецЕсли;
ОбязательныеКолонки.Добавить("DESCRIPTION"		, "DESCRIPTION"		, Ложь);

МассивСтруктурИсходящих = Новый Массив;

//Структура свойств шапки документа
СтруктураШапка = Новый Структура("DOCUMENTNAME, NUMBER, DATE, DELIVERYDATE, DELIVERYTIME, CAMPAIGNNUMBER,     
								| CAMPAIGNDATE, DOCTYPE, CURRENCY, VERSION, MIXPALLET, PROMO, FRESH, INFO, HEAD");

//Структура свойств элемента HEAD
СтруктураHEAD = Новый Структура("SUPPLIER, BUYER, DELIVERYPLACE, SENDER, RECIPIENT, INVOICEPARTNER, EDIINTERCHANGEID, EDIMESSAGE, POSITION");

//Имена свойств элемента POSITION
СвойстваPOSITION = "POSITIONNUMBER, PRODUCT, PRODUCTIDBUYER, PRODUCTIDSUPPLIER, ORDEREDQUANTITY,
				   | ORDERUNIT, ORDERPRICE, PRICEWITHVAT, VAT, CHARACTERISTIC, QUANTITYOFCUINTU";

//Основной цикл
Для каждого СтрокаШапкиДокумента из Результат Цикл

  ТекстСообщенияПроверкиЗаполненияОбязательныхПолей = "";  
	
	//Заполнение структуры документа
	СтруктураДок = Новый Структура("ORDER");
	    
	СтруктураДок.ORDER = СтруктураШапка;
	СтруктураШапка.HEAD = СтруктураHEAD;
	
	//Заполнение значений свойств шапки документа
	ЗаполнитьЗначенияСвойств(СтруктураШапка, СтрокаШапкиДокумента);
	
	//Заполнение значений свойств элемента HEAD
	ЗаполнитьЗначенияСвойств(СтруктураHEAD, СтрокаШапкиДокумента);
	
	МассивPOSITION = Новый Массив;
	    
	ОтборСтрокНоменклатур = Новый Структура;
	ОтборСтрокНоменклатур.Вставить("Ссылка", СтрокаШапкиДокумента.Ссылка);
	
	СтрокиНоменклатурДокумента = РезультатНоменклатур.НайтиСтроки(ОтборСтрокНоменклатур);
	
	Для Каждого СтрокаНоменклатурыДокумента Из СтрокиНоменклатурДокумента Цикл
		
		//Создание структуры POSITION
		Структура = Новый Структура(СвойстваPOSITION);
		
		//Заполнение значений свойств элемента POSITION
		ЗаполнитьЗначенияСвойств(Структура, СтрокаНоменклатурыДокумента);
		
		Структура.CHARACTERISTIC = Новый Структура("DESCRIPTION", СтрокаНоменклатурыДокумента.DESCRIPTION);
		
		МассивPOSITION.Добавить(Структура);
		
	КонецЦикла;
		
	СтруктураHEAD.POSITION = МассивPOSITION;
		
	//Создание XML строки
	XMLДокумент        	= Новый ЗаписьXML;		
	ПараметрыЗаписиXML 	= Новый ПараметрыЗаписиXML("UTF-8", "1.0", Истина, Ложь, Символы.Таб); 
	XMLДокумент.УстановитьСтроку("UTF-8");
	XMLДокумент.ЗаписатьОбъявлениеXML();
	
	Для каждого СтрокаЭлемента Из СтруктураДок Цикл
		ЗаписатьБлоки(XMLДокумент, СтрокаЭлемента, ОбязательныеКолонки, ТекстСообщенияПроверкиЗаполненияОбязательныхПолей);
	КонецЦикла;	
	
	СтрокаXML = XMLДокумент.Закрыть(); 
	
	Если ЗначениеЗаполнено(ТекстСообщенияПроверкиЗаполненияОбязательныхПолей) Тогда
		
		ТекстЛогаСобытий = ТекстСообщенияПроверкиЗаполненияОбязательныхПолей + Символы.ПС + "Документ был пропущен.";
		
		ДобавитьЗаписьВМассивЛога(МассивЛогаСобытий, ТекстЛогаСобытий, "Предупреждение", ИмяСобытия);
		
		Продолжить;	
	Иначе	
		
		СтруктураФайлаДанных = Новый Структура;
		СтруктураФайлаДанных.Вставить("ВидДокумента"			, "ORDER_Исходящий");
		СтруктураФайлаДанных.Вставить("Документ"				, СтрокаШапкиДокумента.Ссылка);
		СтруктураФайлаДанных.Вставить("ИдентификаторЦепочки"	, СтрокаШапкиДокумента.ИдентификаторЦепочки);
		СтруктураФайлаДанных.Вставить("ИмяФайлаXML"				, СтрокаШапкиДокумента.ФайлИмя);
		СтруктураФайлаДанных.Вставить("КодировкаФайла"			, "UTF-8");
		СтруктураФайлаДанных.Вставить("Организация"				, СтрокаШапкиДокумента.Организация);
		СтруктураФайлаДанных.Вставить("Отправлен"				, НЕОПРЕДЕЛЕНО);
		СтруктураФайлаДанных.Вставить("Сообщение"				, "");
		СтруктураФайлаДанных.Вставить("Статус"					, СтрокаШапкиДокумента.Статус);
		СтруктураФайлаДанных.Вставить("СтрокаXML"				, СтрокаXML);
		СтруктураФайлаДанных.Вставить("ТипФайла"				, СтрокаШапкиДокумента.ВидДокумента);
		
		МассивСтруктурИсходящих.Добавить(СтруктураФайлаДанных);
		
	КонецЕсли;
	
КонецЦикла;

#КонецОбласти

//Возврат Результат;				//раскомментировать для отображения значений таблицы "Результат" на вкладке "Тестирование"  
//Возврат РезультатНоменклатур;		//раскомментировать для отображения значений таблицы "РезультатНоменклатур" на вкладке "Тестирование"

Возврат МассивСтруктурИсходящих;</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:string">Исходящий ORDER</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">8</lastId>
			<item>
				<value xsi:type="xs:string">Прайс-лист</value>
				<id xsi:type="xs:decimal">0</id>
			</item>
			<item>
				<value xsi:type="xs:string">Поставщик</value>
				<id xsi:type="xs:decimal">1</id>
			</item>
			<item>
				<value xsi:type="xs:string">Покупатель</value>
				<presentation>СписокЗаказыИсходящиеПокупатель</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">2</id>
			</item>
			<item>
				<value xsi:type="xs:string">Синоним</value>
				<presentation>Исходящий ORDER</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">3</id>
			</item>
			<item>
				<value xsi:type="xs:string">ИмяКнопки</value>
				<presentation>ИсходящийORDER</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">4</id>
			</item>
			<item>
				<value xsi:type="xs:string">ПередаватьТекстПричины</value>
				<id xsi:type="xs:decimal">5</id>
			</item>
			<item>
				<value xsi:type="xs:string">ПриемникВидДокумента</value>
				<presentation>ORDER_Исходящий</presentation>
				<id xsi:type="xs:decimal">6</id>
			</item>
			<item>
				<value xsi:type="xs:string">ИсточникВидДокумента</value>
				<presentation>Заказ_Исходящий</presentation>
				<id xsi:type="xs:decimal">7</id>
			</item>
			<item>
				<value xsi:type="xs:string">НужнаПодпись</value>
				<presentation>Нет</presentation>
				<id xsi:type="xs:decimal">8</id>
			</item>
		</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:string">ИсходящийORDER</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">1</lastId>
			<item>
				<value xsi:type="xs:string">ТекстЗапроса = "ВЫБРАТЬ
               |	ЗаказПоставщику.Ссылка КАК Ссылка
               |ПОМЕСТИТЬ ВТ_Заказ
               |ИЗ
               |	Документ.ЗаказПоставщику КАК ЗаказПоставщику
               |ГДЕ
               |	ЗаказПоставщику.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&amp;ТекущаяДата, ДЕНЬ) И КОНЕЦПЕРИОДА(&amp;ТекущаяДата, ДЕНЬ)
               |	И ЗаказПоставщику.Проведен
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	ВТ_Заказ.Ссылка КАК Документ,
               |	ВТ_Заказ.Ссылка.Проведен КАК Проведен,
               |	ПРЕДСТАВЛЕНИЕ(ВТ_Заказ.Ссылка) КАК ПредставлениеДокумента,
               |	СобытияЗаказИсходящий.ИдентификаторЦепочки КАК ИдентификаторЦепочки
               |ПОМЕСТИТЬ втДанныеИсточник
               |ИЗ
               |	ВТ_Заказ КАК ВТ_Заказ
               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК СобытияЗаказИсходящий
               |		ПО (ВТ_Заказ.Ссылка = СобытияЗаказИсходящий.Документ)
               |			И (СобытияЗаказИсходящий.ВидДокумента = ""Заказ_Исходящий"")
               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК СобытияORDERИсходящий
               |		ПО (СобытияЗаказИсходящий.ИдентификаторЦепочки = СобытияORDERИсходящий.ИдентификаторЦепочки)
               |			И (СобытияORDERИсходящий.ВидДокумента = ""ORDER_Исходящий"")
               |ГДЕ
               |	СобытияORDERИсходящий.ИдентификаторЦепочки ЕСТЬ NULL
               |	И СобытияЗаказИсходящий.Статус &lt;&gt; ""Архивный""
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ ПЕРВЫЕ 2
               |	втДанныеИсточник.Документ КАК Документ,
               |	""ORDER_Исходящий"" КАК ВидДокумента,
               |	"""" КАК СтатусОбработкиДокумента
               |ИЗ
               |	втДанныеИсточник КАК втДанныеИсточник
               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_ЦепочкиДокументов КАК DR_ЦепочкиДокументов
               |		ПО (втДанныеИсточник.ИдентификаторЦепочки = DR_ЦепочкиДокументов.ИдентификаторЦепочки)
               |
               |УПОРЯДОЧИТЬ ПО
               |	DR_ЦепочкиДокументов.ДатаЗаказа УБЫВ";</value>
				<presentation>ТекстЗапроса</presentation>
				<id xsi:type="xs:decimal">0</id>
			</item>
		</Value>
	</row>
</ValueTree>