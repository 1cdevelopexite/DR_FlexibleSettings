<ValueTree xmlns="http://v8.1c.ru/8.1/data/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ValueTree">
	<column>
		<Name xsi:type="xs:string">Использовать</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ТипТранзакции</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Служебные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Данные</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Сохранение</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Загрузка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Кнопка</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">КоллекцияТЧ</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">СлужебныеТекст</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">ИмяКнопки</Name>
		<ValueType/>
	</column>
	<column>
		<Name xsi:type="xs:string">Регламент</Name>
		<ValueType/>
	</column>
	<row>
		<Value xsi:type="xs:boolean">true</Value>
		<Value xsi:type="xs:string">Исходящий ON_NSCHFDOPPOK</Value>
		<Value xsi:type="xs:string">DR_ТекстЗапроса_ОтправкаПодписаниеСчетФактурOK = 
	"ВЫБРАТЬ
	|	ТаблицаМЧД.Организация КАК Организация,
	|	ТаблицаМЧД.Сертификат КАК Сертификат,
	|	ТаблицаМЧД.СертификатИНН КАК СертификатИНН,
	|	ТаблицаМЧД.СертификатНаСервере КАК СертификатНаСервере,
	|	ТаблицаМЧД.ДолжностьПодписанта КАК ДолжностьПодписанта,
	|	ТаблицаМЧД.ФамилияПодписанта КАК ФамилияПодписанта,
	|	ТаблицаМЧД.ИмяПодписанта КАК ИмяПодписанта,
	|	ТаблицаМЧД.ОтчествоПодписанта КАК ОтчествоПодписанта,
	|	ТаблицаМЧД.ОбластьПолномочий КАК ОбластьПолномочий,
	|	ТаблицаМЧД.ОснованиеПолномочий КАК ОснованиеПолномочий,
	|	ТаблицаМЧД.СтатусПодписанта КАК СтатусПодписанта,
	|	ТаблицаМЧД.СтрокаМЧД КАК СтрокаМЧД,
	|	ТаблицаМЧД.Организация_ПоддерживаетМЧД КАК Организация_ПоддерживаетМЧД,
	|	ТаблицаМЧД.ТипСертификата КАК ТипСертификата,
	|	ТаблицаМЧД.МЧД_Актуальна КАК МЧД_Актуальна
	|ПОМЕСТИТЬ ВТ_DR_МЧД
	|ИЗ
	|	&amp;ТаблицаМЧД КАК ТаблицаМЧД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	DR_Документ.Ссылка КАК Ссылка,
	|	DR_Документ.ДанныеЭЦП КАК ДанныеЭЦП,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(DR_Документ.Комментарий КАК СТРОКА(100))) = """"
	|			ТОГДА ""1""
	|		ИНАЧЕ ""2""
	|	КОНЕЦ КАК КодИтога
	|ПОМЕСТИТЬ втDRДокумент
	|ИЗ
	|	Документ.DR_Документ КАК DR_Документ
	|ГДЕ
	|	DR_Документ.Ссылка В(&amp;МассивДок)
	|	И DR_Документ.Статус = ""Обработан""
	|	И ((ВЫРАЗИТЬ(DR_Документ.Комментарий КАК СТРОКА(100))) = """"
	|			ИЛИ DR_Документ.ВидДокумента = ""ON_NSCHFDOPPRMARK_01_Входящий""
	|			ИЛИ DR_Документ.ВидДокумента = ""ON_NSCHFDOPPRMARK_01_Испр_Входящий""
	|			ИЛИ DR_Документ.ВидДокумента = ""ON_NKORSCHFDOPPRMARK_01_Входящий""
	|			ИЛИ DR_Документ.ВидДокумента = ""ON_NKORSCHFDOPPRMARK_01_Испр_Входящий"")
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	DR_Документ.Ссылка КАК Документ_Основание,
	|	DR_Документ.КодИтога КАК КодИтога,
	|	DR_Документ.ДанныеЭЦП КАК ДанныеЭЦП,
	|	ЕСТЬNULL(Уточнения_События.ВидДокумента, НЕОПРЕДЕЛЕНО) КАК ПроверкаНаУточнение,
	|	ВЫБОР
	|		КОГДА Подпись_События.ВидДокумента ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПроверкаНаПодпись,
	|	DR_Контрагент.Значение КАК Контрагент,
	|	DR_Организация.Значение КАК Организация,
	|	ВЫРАЗИТЬ(DR_ИдФайл.Значение КАК СТРОКА(256)) КАК ИдФайлИнфПр,
	|	ЮЗД_События.ВидДокумента КАК ВидДокументаЮЗД,
	|	ЮЗД_События.ДатаЗаписи КАК ДатаЗаписи,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(DR_ФайлНомер.Значение КАК СТРОКА(100)), """") КАК ФайлНомер,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(DR_ФайлДата.Значение КАК ДАТА), ДАТАВРЕМЯ(1, 1, 1)) КАК ФайлДата,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(DR_ФайлНомерКор.Значение КАК СТРОКА(100)), """") КАК ФайлНомерКор,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(DR_ФайлДатаКор.Значение КАК ДАТА), ДАТАВРЕМЯ(1, 1, 1)) КАК ФайлДатаКор,
	|	ВЫРАЗИТЬ(DR_Документ_ДатаИнфПр.Значение КАК ДАТА) КАК Документ_ДатаИнфПр,
	|	ВЫРАЗИТЬ(DR_Документ_ВремИнфПр.Значение КАК СТРОКА(10)) КАК Документ_ВремИнфПр,
	|	ЮЗД_События.ИдентификаторЦепочки КАК ИдентификаторЦепочки
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	втDRДокумент КАК DR_Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК DR_Контрагент
	|		ПО DR_Документ.Ссылка = DR_Контрагент.Ссылка
	|			И (DR_Контрагент.Реквизит = ""Контрагент"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК DR_Организация
	|		ПО DR_Документ.Ссылка = DR_Организация.Ссылка
	|			И (DR_Организация.Реквизит = ""Организация"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК DR_ФайлНомер
	|		ПО DR_Документ.Ссылка = DR_ФайлНомер.Ссылка
	|			И (DR_ФайлНомер.Реквизит = ""Документ_СвСчФакт_НомерСчФ"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК DR_ФайлДата
	|		ПО DR_Документ.Ссылка = DR_ФайлДата.Ссылка
	|			И (DR_ФайлДата.Реквизит = ""Документ_СвСчФакт_ДатаСчФ"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК DR_ФайлНомерКор
	|		ПО DR_Документ.Ссылка = DR_ФайлНомерКор.Ссылка
	|			И (DR_ФайлНомерКор.Реквизит = ""Документ_СвКСчФ_НомерКСчФ"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК DR_ФайлДатаКор
	|		ПО DR_Документ.Ссылка = DR_ФайлДатаКор.Ссылка
	|			И (DR_ФайлДатаКор.Реквизит = ""Документ_СвКСчФ_ДатаКСчФ"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК DR_Сверено
	|		ПО DR_Документ.Ссылка = DR_Сверено.Ссылка
	|			И (DR_Сверено.Реквизит = ""Сверено"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК DR_Документ_ДатаИнфПр
	|		ПО DR_Документ.Ссылка = DR_Документ_ДатаИнфПр.Ссылка
	|			И (DR_Документ_ДатаИнфПр.Реквизит = ""Документ_ДатаИнфПр"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК DR_Документ_ВремИнфПр
	|		ПО DR_Документ.Ссылка = DR_Документ_ВремИнфПр.Ссылка
	|			И (DR_Документ_ВремИнфПр.Реквизит = ""Документ_ВремИнфПр"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.DR_Документ.ДополнительныеРеквизиты КАК DR_ИдФайл
	|		ПО DR_Документ.Ссылка = DR_ИдФайл.Ссылка
	|			И (DR_ИдФайл.Реквизит = ""ИдФайл"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК Подпись_События
	|		ПО DR_Документ.Ссылка = Подпись_События.Документ
	|			И (Подпись_События.ВидДокумента В (&amp;ВидыДокументовПодписиЮздИсходящие))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК Уточнения_События
	|		ПО DR_Документ.Ссылка = Уточнения_События.Документ
	|			И (Уточнения_События.ВидДокумента = ""DP_UVUTOCH_09"")
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК ЮЗД_События
	|		ПО DR_Документ.Ссылка = ЮЗД_События.Документ
	|			И (ЮЗД_События.ВидДокумента В (&amp;ВидыДокументовЮздВходящие))
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &amp;АвтосверкаЮЗД = ИСТИНА
	|				ТОГДА ВЫРАЗИТЬ(DR_Сверено.Значение КАК БУЛЕВО)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.Документ_Основание КАК ДокЭКОМ,
	|	ВТ.ДанныеЭЦП КАК ДанныеЭЦП,
	|	ВТ.ПроверкаНаУточнение КАК ПроверкаНаУточнение,
	|	ВТ.ПроверкаНаПодпись КАК ПроверкаНаПодпись,
	|	ВЫБОР
	|		КОГДА DR_GLN_Организация.ПоддерживаетМЧД = ИСТИНА
	|				И DR_GLN_Контрагент.ПоддерживаетМЧД = ИСТИНА
	|			ТОГДА DR_МЧД.Сертификат
	|		ИНАЧЕ DR_GLN_Организация.Сертификат
	|	КОНЕЦ КАК Сертификат,
	|	ВЫБОР
	|		КОГДА DR_GLN_Организация.ПоддерживаетМЧД = ИСТИНА
	|				И DR_GLN_Контрагент.ПоддерживаетМЧД = ИСТИНА
	|			ТОГДА DR_МЧД.СертификатНаСервере
	|		ИНАЧЕ ВЫРАЗИТЬ(DR_СертификатНаСервере.Значение КАК БУЛЕВО)
	|	КОНЕЦ КАК СертификатНаСервере,
	|	ВЫБОР
	|		КОГДА DR_GLN_Организация.ПоддерживаетМЧД = ИСТИНА
	|				И DR_GLN_Контрагент.ПоддерживаетМЧД = ИСТИНА
	|			ТОГДА DR_МЧД.ДолжностьПодписанта
	|		ИНАЧЕ ВЫРАЗИТЬ(DR_ДолжностьПодписанта.Значение КАК СТРОКА(250))
	|	КОНЕЦ КАК ДолжностьПодписанта,
	|	ВЫБОР
	|		КОГДА DR_GLN_Организация.ПоддерживаетМЧД = ИСТИНА
	|				И DR_GLN_Контрагент.ПоддерживаетМЧД = ИСТИНА
	|			ТОГДА DR_МЧД.ФамилияПодписанта
	|		ИНАЧЕ ВЫРАЗИТЬ(DR_ФамилияПодписанта.Значение КАК СТРОКА(200))
	|	КОНЕЦ КАК ФамилияПодписанта,
	|	ВЫБОР
	|		КОГДА DR_GLN_Организация.ПоддерживаетМЧД = ИСТИНА
	|				И DR_GLN_Контрагент.ПоддерживаетМЧД = ИСТИНА
	|			ТОГДА DR_МЧД.ИмяПодписанта
	|		ИНАЧЕ ВЫРАЗИТЬ(DR_ИмяПодписанта.Значение КАК СТРОКА(200))
	|	КОНЕЦ КАК ИмяПодписанта,
	|	ВЫБОР
	|		КОГДА DR_GLN_Организация.ПоддерживаетМЧД = ИСТИНА
	|				И DR_GLN_Контрагент.ПоддерживаетМЧД = ИСТИНА
	|			ТОГДА DR_МЧД.ОтчествоПодписанта
	|		ИНАЧЕ ВЫРАЗИТЬ(DR_ОтчествоПодписанта.Значение КАК СТРОКА(200))
	|	КОНЕЦ КАК ОтчествоПодписанта,
	|	ВЫБОР
	|		КОГДА DR_GLN_Организация.ПоддерживаетМЧД = ИСТИНА
	|				И DR_GLN_Контрагент.ПоддерживаетМЧД = ИСТИНА
	|			ТОГДА DR_МЧД.ОбластьПолномочий
	|		ИНАЧЕ ВЫРАЗИТЬ(DR_ОбластьПолномочий.Значение КАК СТРОКА(1))
	|	КОНЕЦ КАК ОбластьПолномочий,
	|	ВЫБОР
	|		КОГДА DR_GLN_Организация.ПоддерживаетМЧД = ИСТИНА
	|				И DR_GLN_Контрагент.ПоддерживаетМЧД = ИСТИНА
	|			ТОГДА DR_МЧД.ОснованиеПолномочий
	|		ИНАЧЕ ВЫРАЗИТЬ(DR_ОснованиеПолномочий.Значение КАК СТРОКА(100))
	|	КОНЕЦ КАК ОснованиеПолномочий,
	|	ВЫБОР
	|		КОГДА DR_GLN_Организация.ПоддерживаетМЧД = ИСТИНА
	|				И DR_GLN_Контрагент.ПоддерживаетМЧД = ИСТИНА
	|			ТОГДА DR_МЧД.СтатусПодписанта
	|		ИНАЧЕ ВЫРАЗИТЬ(DR_СтатусПодписанта.Значение КАК СТРОКА(1))
	|	КОНЕЦ КАК СтатусПодписанта,
	|	ВТ.Организация КАК Организация,
	|	ВТ.Контрагент КАК Контрагент,
	|	DR_GLN_Организация.Партнер КАК ОператорОрганизации,
	|	ВЫРАЗИТЬ(ОператорОрганизацииИНН.Значение КАК СТРОКА(10)) КАК ОператорОрганизацииИНН,
	|	ВЫРАЗИТЬ(ОператорОрганизацииИдентификатор.Значение КАК СТРОКА(3)) КАК ОператорОрганизацииИдентификатор,
	|	DR_GLN_Организация.Ид_ОЭД КАК ИдентификаторОрганизации,
	|	DR_GLN_Контрагент.Партнер КАК ОператорКонтрагента,
	|	ВЫРАЗИТЬ(ОператорКонтрагентаИНН.Значение КАК СТРОКА(10)) КАК ОператорКонтрагентаИНН,
	|	ВЫРАЗИТЬ(ОператорКонтрагентаИдентификатор.Значение КАК СТРОКА(3)) КАК ОператорКонтрагентаИдентификатор,
	|	DR_GLN_Контрагент.Ид_ОЭД КАК ИдентификаторКонтрагента,
	|	ВТ.ИдФайлИнфПр КАК ИдФайлИнфПр,
	|	ВТ.ДатаЗаписи КАК ДатаЗаписи,
	|	ВТ.ВидДокументаЮЗД КАК ВидДокументаЮЗД,
	|	ВТ.ФайлНомер КАК ФайлНомер,
	|	ВТ.ФайлДата КАК ФайлДата,
	|	ВТ.ФайлНомерКор КАК ФайлНомерКор,
	|	ВТ.ФайлДатаКор КАК ФайлДатаКор,
	|	ВТ.Документ_ДатаИнфПр КАК Документ_ДатаИнфПр,
	|	ВТ.Документ_ВремИнфПр КАК Документ_ВремИнфПр,
	|	ВТ.КодИтога КАК КодИтога,
	|	ВТ.ИдентификаторЦепочки КАК ИдентификаторЦепочки,
	|	DR_GLN_Контрагент.ПоддерживаетМЧД
	|		И DR_GLN_Организация.ПоддерживаетМЧД
	|		И DR_МЧД.ТипСертификата = 2 КАК ОтправитьМЧД,
	|	DR_МЧД.СтрокаМЧД КАК СтрокаМЧД,
	|	DR_МЧД.МЧД_Актуальна КАК МЧД_Актуальна,
	|	ВЫБОР
	|		КОГДА DR_GLN_Организация.ПоддерживаетМЧД = ИСТИНА
	|				И DR_GLN_Контрагент.ПоддерживаетМЧД = ИСТИНА
	|			ТОГДА DR_МЧД.СертификатИНН
	|		ИНАЧЕ ВТ.Организация.ИНН
	|	КОНЕЦ КАК ПодписантИНН
	|ИЗ
	|	ВТ КАК ВТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_GLN КАК DR_GLN_Организация
	|		ПО ВТ.Организация = DR_GLN_Организация.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.DR_Настройки.ДополнительныеРеквизиты КАК DR_СертификатНаСервере
	|		ПО (DR_GLN_Организация.Сертификат = DR_СертификатНаСервере.Ссылка)
	|			И (DR_СертификатНаСервере.Реквизит = ""СертификатНаСервере"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.DR_Настройки.ДополнительныеРеквизиты КАК DR_ДолжностьПодписанта
	|		ПО (DR_GLN_Организация.Сертификат = DR_ДолжностьПодписанта.Ссылка)
	|			И (DR_ДолжностьПодписанта.Реквизит = ""ДолжностьПодписанта"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.DR_Настройки.ДополнительныеРеквизиты КАК DR_ИмяПодписанта
	|		ПО (DR_GLN_Организация.Сертификат = DR_ИмяПодписанта.Ссылка)
	|			И (DR_ИмяПодписанта.Реквизит = ""ИмяПодписанта"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.DR_Настройки.ДополнительныеРеквизиты КАК DR_ФамилияПодписанта
	|		ПО (DR_GLN_Организация.Сертификат = DR_ФамилияПодписанта.Ссылка)
	|			И (DR_ФамилияПодписанта.Реквизит = ""ФамилияПодписанта"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.DR_Настройки.ДополнительныеРеквизиты КАК DR_ОтчествоПодписанта
	|		ПО (DR_GLN_Организация.Сертификат = DR_ОтчествоПодписанта.Ссылка)
	|			И (DR_ОтчествоПодписанта.Реквизит = ""ОтчествоПодписанта"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.DR_Настройки.ДополнительныеРеквизиты КАК DR_ОбластьПолномочий
	|		ПО (DR_GLN_Организация.Сертификат = DR_ОбластьПолномочий.Ссылка)
	|			И (DR_ОбластьПолномочий.Реквизит = ""ОбластьПолномочий"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.DR_Настройки.ДополнительныеРеквизиты КАК DR_ОснованиеПолномочий
	|		ПО (DR_GLN_Организация.Сертификат = DR_ОснованиеПолномочий.Ссылка)
	|			И (DR_ОснованиеПолномочий.Реквизит = ""ОснованиеПолномочий"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.DR_Настройки.ДополнительныеРеквизиты КАК DR_СтатусПодписанта
	|		ПО (DR_GLN_Организация.Сертификат = DR_СтатусПодписанта.Ссылка)
	|			И (DR_СтатусПодписанта.Реквизит = ""СтатусПодписанта"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.DR_Настройки.ДополнительныеРеквизиты КАК ОператорОрганизацииИНН
	|		ПО (DR_GLN_Организация.Партнер = ОператорОрганизацииИНН.Ссылка)
	|			И (ОператорОрганизацииИНН.Реквизит = ""ИНН"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.DR_Настройки.ДополнительныеРеквизиты КАК ОператорОрганизацииИдентификатор
	|		ПО (DR_GLN_Организация.Партнер = ОператорОрганизацииИдентификатор.Ссылка)
	|			И (ОператорОрганизацииИдентификатор.Реквизит = ""Идентификатор"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_GLN КАК DR_GLN_Контрагент
	|		ПО ВТ.Контрагент = DR_GLN_Контрагент.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.DR_Настройки.ДополнительныеРеквизиты КАК ОператорКонтрагентаИНН
	|		ПО (DR_GLN_Контрагент.Партнер = ОператорКонтрагентаИНН.Ссылка)
	|			И (ОператорКонтрагентаИНН.Реквизит = ""ИНН"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.DR_Настройки.ДополнительныеРеквизиты КАК ОператорКонтрагентаИдентификатор
	|		ПО (DR_GLN_Контрагент.Партнер = ОператорКонтрагентаИдентификатор.Ссылка)
	|			И (ОператорКонтрагентаИдентификатор.Реквизит = ""Идентификатор"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_DR_МЧД КАК DR_МЧД
	|		ПО ВТ.Организация = DR_МЧД.Организация
	|ГДЕ
	|	ВТ.ПроверкаНаПодпись
	|	И (ВТ.ПроверкаНаУточнение = НЕОПРЕДЕЛЕНО
	|			ИЛИ ВТ.ПроверкаНаУточнение = """"
	|			ИЛИ ВТ.ВидДокументаЮЗД = ""ON_NSCHFDOPPRMARK_01""
	|			ИЛИ ВТ.ВидДокументаЮЗД = ""ON_NSCHFDOPPRMARK_01_Испр""
	|			ИЛИ ВТ.ВидДокументаЮЗД = ""ON_NKORSCHFDOPPRMARK_01""
	|			ИЛИ ВТ.ВидДокументаЮЗД = ""ON_NKORSCHFDOPPRMARK_01_Испр"")";
	
	//&lt;МЧД&gt;
	ЗапросМЧД = Новый Запрос;
	ЗапросМЧД.Текст = ТекстЗапроса_МЧД_ПоОрганизациям();
	
	ЗапросМЧД.УстановитьПараметр("ЭтоРегламентноеЗадание"	, ЭтоРегламентноеЗадание); 
	ЗапросМЧД.УстановитьПараметр("Пользователь"				, НайтиТекущегоПользователя()); 
	ЗапросМЧД.УстановитьПараметр("ТекущаяДата"				, ТекущаяДата());	
	
	ТаблицаМЧД = ЗапросМЧД.Выполнить().Выгрузить();
	//&lt;/МЧД&gt;
	
	ИмяСобытия = "Создание подписи ЮЗД";
	
	МассивСтруктурИсходящих   = Новый Массив; 
	
	//Доработка ПР 
	EDI_АвтосверкаЮЗД = Ложь;
	ДеревоXMLПроизвольные = Настройка_Параметр_Прочитать("EDI_СтруктураФайлаXMLПроизвольные", Неопределено);  
	
	Если ДеревоXMLПроизвольные &lt;&gt; Неопределено Тогда
	   Отбор = Новый Структура("Использовать, ИмяКнопки", Истина, "ПроизвольныйАвтосверкаЮЗД");
	   СтрокиНастроекПоОтбору = ДеревоXMLПроизвольные.Строки.НайтиСтроки(Отбор);   
	
	   Если СтрокиНастроекПоОтбору.Количество()  Тогда  
		   EDI_АвтосверкаЮЗД = Истина;  
	   КонецЕсли;
	КонецЕсли;
	
	// Отбираем только обработанные документы ЭКОМ
	Запрос = Новый Запрос;
	Запрос.Текст = DR_ТекстЗапроса_ОтправкаПодписаниеСчетФактурOK;
	
	Запрос.УстановитьПараметр("ТаблицаМЧД"							, ТаблицаМЧД);
	//Запрос.УстановитьПараметр("АвтосверкаЮЗД"						, Настройка_Параметр_Прочитать("EDI_АвтосверкаЮЗД", Ложь)); 
	Запрос.УстановитьПараметр("АвтосверкаЮЗД"						, EDI_АвтосверкаЮЗД);
	Запрос.УстановитьПараметр("ВидыДокументовЮздВходящие"			, Вычислить("DR_EDI_ОбщегоНазначения.ВидыДокументовВходящихЮЗД()"));
	Запрос.УстановитьПараметр("ВидыДокументовПодписиЮздИсходящие"	, Вычислить("DR_EDI_ОбщегоНазначения.ВидыДокументовИсходящихПодписейЮЗД()"));
	Запрос.УстановитьПараметр("МассивДок"							, Источник);	
	
	РезультатЗапроса = Запрос.Выполнить();	
	
	ВременныйКаталог = ПутьВременногоКаталогаЭКОМ("SignPOK_out");
	КаталогВременный = ЭКОМ_СоздатьКаталогПроверитьНаЗапись(ВременныйКаталог, МассивЛогаСобытий);
	
	Если КаталогВременный = Неопределено Тогда
		
		ТекстЛогаСобытий = "Не удалось создать временный каталог, обработка была прервана.";
		ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Ошибка", ИмяСобытия);
		МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);		
		
		Перейти ~Выход;
		
	КонецЕсли;
	
	СтруктураМетаДанных = ЮрФизЛицоОпределитьМетаданные();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
	
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл 
			
			ЭЦП = Выборка.ДанныеЭЦП.Получить();
						
			Если Выборка.ОтправитьМЧД = Истина И (НЕ ЗначениеЗаполнено(Выборка.СтрокаМЧД) ИЛИ НЕ Выборка.МЧД_Актуальна) Тогда
				
				ТекстЛогаСобытий = "Не определена МЧД для текущего пользователя по организации! - " + Строка(Выборка.Организация);			
				ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Ошибка", ИмяСобытия);
				МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
				
				Продолжить;
				
			КонецЕсли;
						
			Если НЕ ЗначениеЗаполнено(Выборка.Сертификат) Тогда
				
				ТекстЛогаСобытий = "Не найден сертификат\мчд по организации " + Строка(Выборка.Организация) 
					+ ", необходимо проверить настройки в карточке организации.";
				ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Ошибка", ИмяСобытия);
				МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
				
				Продолжить;
				
			КонецЕсли; 
			
			Если НЕ ЗначениеЗаполнено(Выборка.ОператорКонтрагента) Тогда
				
				ТекстЛогаСобытий = "Нет данных по контрагенту (регистр ЭКОМ GLN)! - " + Строка(Выборка.Контрагент);
				ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Ошибка", ИмяСобытия);
				МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);

				Продолжить;
				
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Выборка.ОператорОрганизации) Тогда
				
				ТекстЛогаСобытий = "Нет данных по организации (регистр ЭКОМ GLN)! - " + Строка(Выборка.Организация);
				ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Ошибка", ИмяСобытия);
				МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
			
				Продолжить;
				
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Выборка.ИдФайлИнфПр) Тогда
				
				ТекстЛогаСобытий = "Нет данных по документу (регистр ЭКОМ события)! - " + Строка(Выборка.ДокЭКОМ);
				ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Ошибка", ИмяСобытия);
				МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);

				Продолжить;
				
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ЭЦП) Тогда	
				
				ТекстЛогаСобытий = "Не найдена ЭЦП для входящего ЮЗД документа ( не найдена запись в РС ""Docrobot События по документам"" документ: " + Выборка.ДокЭКОМ + ")";
				ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Ошибка", ИмяСобытия);
				МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
				
				Продолжить;
				
			КонецЕсли; 

			СтруктураДокумента = Новый Структура;
			
			СтруктураДокумента.Вставить("ВерсФорм"			, "5.01");
			СтруктураДокумента.Вставить("ВерсПрог"			, "Docrobot 1С Integration");
			
			//СвУчДокОбор/@ИдОтпр
			СтруктураДокумента.Вставить("ИдОтпр"	        , Выборка.ОператорОрганизацииИдентификатор + Выборка.ИдентификаторОрганизации);
			
			//СвУчДокОбор/@ИдПол
			СтруктураДокумента.Вставить("ИдПол"	            , Выборка.ОператорКонтрагентаИдентификатор + Выборка.ИдентификаторКонтрагента);
			
			//СвУчДокОбор/СвОЭДОтпр/@НаимОрг
			СтруктураДокумента.Вставить("НаимОргОператор"	, Выборка.ОператорОрганизации.Наименование);
			
			//СвУчДокОбор/СвОЭДОтпр/@ИННЮЛ
			СтруктураДокумента.Вставить("ИННОператор"		, Выборка.ОператорОрганизацииИНН);
			
			//СвУчДокОбор/СвОЭДОтпр@/ИдЭДО
			СтруктураДокумента.Вставить("ИдЭДО"				, Выборка.ОператорОрганизацииИдентификатор);
			
			//ИнфПок/@ДатаИнфПок
			СтруктураДокумента.Вставить("ДатаИнфПок"		, Формат(ТекущаяДата(), "ДФ=dd.MM.yyyy"));
			
			//ИнфПок/@ВремИнфПок
			СтруктураДокумента.Вставить("ВремИнфПок"		, Формат(ТекущаяДата(), "ДФ=HH.mm.ss"));
			//ИнфПок/@НаимЭконСубСост
			СтруктураДокумента.Вставить("НаимЭконСубСост"	, СокрЛП(Выборка.Организация.Наименование));
			
			//ИдИнфПрод/@ИдФайлИнфПр
			СтруктураДокумента.Вставить("ИдФайлИнфПр"		, Выборка.ИдФайлИнфПр);
			
			ДатаФайлИнфПр = ?(ЗначениеЗаполнено(Выборка.Документ_ДатаИнфПр), Выборка.Документ_ДатаИнфПр, Дата(1,1,1));
			ВремФайлИнфПр = ?(ЗначениеЗаполнено(Выборка.Документ_ВремИнфПр), Выборка.Документ_ВремИнфПр, "");
			
			//ИдИнфПрод/@ДатаФайлИнфПр			 
			СтруктураДокумента.Вставить("ДатаФайлИнфПр"	, Формат(ДатаФайлИнфПр, "ДФ=dd.MM.yyyy"));
			//ИдИнфПрод/@ВремФайлИнфПр
			СтруктураДокумента.Вставить("ВремФайлИнфПр" , ВремФайлИнфПр);
			
			//ИдИнфПрод/ЭП
			СтруктураДокумента.Вставить("ЭП" , ЭЦП);
			
			КлючСтруктуры = "ТипДокумента, ВидДокументаПодписи";
			
			СоответствияВидов = Новый Соответствие;
			
			СоответствияВидов.Вставить("ON_NSCHFDOPPR_01_Входящий",           
			Новый Структура(КлючСтруктуры, "ON_NSCHFDOPPOK_11", "ON_NSCHFDOPPOK_11_Исходящий")); 
			
			СоответствияВидов.Вставить("ON_NSCHFDOPPR_01_Испр_Входящий",   
			Новый Структура(КлючСтруктуры, "ON_NSCHFDOPPOK_11", "ON_NSCHFDOPPOK_11_Исходящий")); 
			
			СоответствияВидов.Вставить("ON_NSCHFDOPPRMARK_01_Входящий",   
			Новый Структура(КлючСтруктуры, "ON_NSCHFDOPPOKMARK_11", "ON_NSCHFDOPPOKMARK_11_Исходящий")); 
			
			СоответствияВидов.Вставить("ON_NSCHFDOPPRMARK_01_Испр_Входящий",   
			Новый Структура(КлючСтруктуры, "ON_NSCHFDOPPOKMARK_11", "ON_NSCHFDOPPOKMARK_11_Исходящий")); 
			
			СоответствияВидов.Вставить("ON_NSCHFDOPPRPROS_01_Входящий",        
			Новый Структура(КлючСтруктуры, "ON_NSCHFDOPPOKPROS_11", "ON_NSCHFDOPPOKPROS_11_Исходящий")); 
			
			СоответствияВидов.Вставить("ON_NSCHFDOPPRPROS_01_Испр_Входящий",   
			Новый Структура(КлючСтруктуры, "ON_NSCHFDOPPOKPROS_11", "ON_NSCHFDOPPOKPROS_11_Исходящий")); 
			
			СоответствияВидов.Вставить("ON_NKORSCHFDOPPR_01_Входящий",     
			Новый Структура(КлючСтруктуры, "ON_NKORSCHFDOPPOK_11", "ON_NKORSCHFDOPPOK_11_Исходящий")); 
			
			СоответствияВидов.Вставить("ON_NKORSCHFDOPPR_01_Испр_Входящий",     
			Новый Структура(КлючСтруктуры, "ON_NKORSCHFDOPPOK_11", "ON_NKORSCHFDOPPOK_11_Исходящий")); 
			
			СоответствияВидов.Вставить("ON_NKORSCHFDOPPRMARK_01_Входящий",    
			Новый Структура(КлючСтруктуры, "ON_NKORSCHFDOPPOKMARK_11", "ON_NKORSCHFDOPPOKMARK_11_Исходящий")); 
			
			СоответствияВидов.Вставить("ON_NKORSCHFDOPPRMARK_01_Испр_Входящий",
			Новый Структура(КлючСтруктуры, "ON_NKORSCHFDOPPOKMARK_11", "ON_NKORSCHFDOPPOKMARK_11_Исходящий")); 
			
            СоответствияВидов.Вставить("ON_NKORSCHFDOPPRPROS_01_Входящий",    
			Новый Структура(КлючСтруктуры, "ON_NKORSCHFDOPPOKPROS_11", "ON_NKORSCHFDOPPOKPROS_11_Исходящий")); 
			
			СоответствияВидов.Вставить("ON_NKORSCHFDOPPRPROS_01_Испр_Входящий", 
			Новый Структура(КлючСтруктуры, "ON_NKORSCHFDOPPOKPROS_11", "ON_NKORSCHFDOPPOKPROS_11_Исходящий")); 

			Данные = СоответствияВидов.Получить(Выборка.ВидДокументаЮЗД);
			
			ТипДокумента = Данные.ТипДокумента;
            
            ВидДокументаПодписи = Данные.ВидДокументаПодписи;
			
			ПодписантДолжность = СокрЛП(Выборка.ДолжностьПодписанта);
			ПодписантФамилия   = СокрЛП(Выборка.ФамилияПодписанта);
			ПодписантИмя 	   = СокрЛП(Выборка.ИмяПодписанта);
			ПодписантОтчество  = СокрЛП(Выборка.ОтчествоПодписанта);	
			
			//Статус подписанта
			//1 - работник организации покупателя;
			//2 - работник организации – составителя информации покупателя;
			//3 - работник иной уполномоченной организации;
			//4 - уполномоченное физическое лицо, в том числе индивидуальный предприниматель;
			//5 - работник организации - покупателя;
			//6 - работник организации - составителя информации покупателя;
			
			Если ТипДокумента = "ON_NSCHFDOPPOK_11"
				ИЛИ ТипДокумента = "ON_NSCHFDOPPOKMARK_11"
				ИЛИ ТипДокумента = "ON_NSCHFDOPPOKPROS_11" Тогда  
				
				//СвПрин/@СодОпер
				СтруктураДокумента.Вставить("СодОпер"	, "Товары принял");
				
				//СвПрин/@ДатаПрин
				СтруктураДокумента.Вставить("ДатаПрин"	, Формат(Выборка.ДатаЗаписи, "ДФ=dd.MM.yyyy"));
				
				Если Выборка.СтатусПодписанта = "1" Тогда
					ПодписантСтатус = "5";
				ИначеЕсли Выборка.СтатусПодписанта = "2" Тогда
					ПодписантСтатус = "6";	
				Иначе
					ПодписантСтатус = Выборка.СтатусПодписанта;
				КонецЕсли;
				
				//КодСодОпер/@КодИтога
				СтруктураДокумента.Вставить("КодИтога"		, Выборка.КодИтога);
				//ИнфПок/@КНД
				СтруктураДокумента.Вставить("КНД"		    , "1115132");
				
				//РабОргПок/@Должность
				СтруктураДокумента.Вставить("ОтпрДолжность"	, ПодписантДолжность);
				
				//РабОргПок/@ОснПолн
				СтруктураДокумента.Вставить("ОтпрОснПолн"	, "Должностные обязанности");
				
				//РабОргПок/@ИныеСвед
				СтруктураДокумента.Вставить("ИныеСвед"		, "");
				
				//РабОргПок/ФИО/@Фамилия, @Имя, @Отчество
				СтруктураДокумента.Вставить("ОтпрФамилия"	, ПодписантФамилия);
				СтруктураДокумента.Вставить("ОтпрИмя"		, ПодписантИмя);
				СтруктураДокумента.Вставить("ОтпрОтчество"	, ПодписантОтчество);			
				
				//Подписант/@Статус
				СтруктураДокумента.Вставить("лПодписантСтатус", ПодписантСтатус);
				
				ФайлНомер = СокрЛП(Выборка.ФайлНомер);		
				ФайлДата  = Формат(Выборка.ФайлДата, "ДФ=dd.MM.yyyy");
				СЧФНомер  = ФайлНомер;
				СЧФДата   = Выборка.ФайлДата;
				
				//СодФХЖ4/@НаимДокОпрПр
				СтруктураДокумента.Вставить("НаимДокОпрПр"	, "Счет-фактура и документ об отгрузке товаров (выполнении работ), " 
															  + "передаче имущественных прав (документ об оказании услуг)");
			    //СодФХЖ4/@Функция
				СтруктураДокумента.Вставить("Функция" , "СЧФДОП");
				
				//СодФХЖ4/@НомСчФИнфПр
				СтруктураДокумента.Вставить("НомСчФИнфПр"	, ФайлНомер);
				
				//СодФХЖ4/@ДатаСчФИнфПр
				СтруктураДокумента.Вставить("ДатаСчФИнфПр"	, ФайлДата);
				
				ЭтоУПД = Истина;
				
			ИначеЕсли ТипДокумента = "ON_NKORSCHFDOPPOK_11"
				ИЛИ ТипДокумента = "ON_NKORSCHFDOPPOKMARK_11"
				ИЛИ ТипДокумента = "ON_NKORSCHFDOPPOKPROS_11" Тогда 
				
				//СвСоглас/@СодОпер
				СтруктураДокумента.Вставить("СодОпер"	, "Уведомление об изменении стоимости принято к учету");
				
				//СвСоглас/@ДатаСоглас
				СтруктураДокумента.Вставить("ДатаСоглас", Формат(Выборка.ДатаЗаписи, "ДФ=dd.MM.yyyy"));
				
				Если Выборка.СтатусПодписанта = "1" Тогда
					ПодписантСтатус = "5";
				ИначеЕсли Выборка.СтатусПодписанта = "2" Тогда
					ПодписантСтатус = "6";	
				Иначе
					ПодписантСтатус = Выборка.СтатусПодписанта;
				КонецЕсли;
				
				//ИнфПок/@КНД
				СтруктураДокумента.Вставить("КНД"	, "1115134");
				
				//Подписант/@Статус
				СтруктураДокумента.Вставить("лПодписантСтатус", ПодписантСтатус);			
				
				ФайлНомер = СокрЛП(Выборка.ФайлНомерКор);		
				ФайлДата  = Формат(Выборка.ФайлДатаКор, "ДФ=dd.MM.yyyy");
				СЧФНомер  = ФайлНомер;
				СЧФДата   = Выборка.ФайлДатаКор;
				
				//СодФХЖ4/НаимДокОпрПр УКД
				СтруктураДокумента.Вставить("НаимДокОпрПр"	, "Корректировочный счет-фактура и документ об изменении " 
														  	+ "стоимости отгруженных товаров (выполненных работ, оказанных услуг), переданных имущественных прав");
				//СодФХЖ4/@ФункцияПр										  
				СтруктураДокумента.Вставить("ФункцияПр"		, "КСЧФДИС");
				
				//СодФХЖ4/@НомДокИнфПр
				СтруктураДокумента.Вставить("НомДокИнфПр"	, ФайлНомер);
				
				//СодФХЖ4/@ДатаДокИнфПр
				СтруктураДокумента.Вставить("ДатаДокИнфПр"	, ФайлДата);
				
				ЭтоУПД = Ложь;
				
			КонецЕсли;	
			
			//Подписант/@ОблПолн
			СтруктураДокумента.Вставить("лПодписантОблПолн"	, Выборка.ОбластьПолномочий);
			
			//Подписант/@ОснПолн
			СтруктураДокумента.Вставить("лПодписантОснПолн", Выборка.ОснованиеПолномочий);			
			
			ЭтоЮрЛицоОрганизация = ЮрФизЛицоОпределитьТипОбъекта(Выборка.Организация, 
																СтруктураМетаДанных.ИмяРеквизитаорганизации, 
																СтруктураМетаДанных.ПеречислениеЮрЛицо);
																
			Если Выборка.ОтправитьМЧД Тогда
				ПодписантТип = "ФЛ";
			ИначеЕсли ЭтоЮрЛицоОрганизация Тогда
				ПодписантТип = "ЮЛ";
			Иначе 
				ПодписантТип = "ИП";
			КонецЕсли;
			
			//&lt;Служебные переменные&gt;						
			ТипДокументаБезНомера = Лев(ТипДокумента,СтрДлина(ТипДокумента)-3); 
						
			Идентификатор      = Новый УникальныйИдентификатор;
			ИдентификаторФайла = ТипДокументаБезНомера + "_" + СтруктураДокумента.ИдПол + "_" 
								+ СтруктураДокумента.ИдОтпр + "_" + Формат(ТекущаяДата(), "ДФ=yyyyMMdd") +"_"+ Идентификатор;
	
			ПредставлениеДок = "Счет-фактура № " + СЧФНомер + " от " + СЧФДата;				
			//&lt;/Служебные переменные&gt;
			
			СтруктураДокумента.Вставить("ИдФайл"	  , ИдентификаторФайла);
			СтруктураДокумента.Вставить("ИмяПостФайла", Выборка.ИдФайлИнфПр);
			
			ФайлXMLПолноеИмя = ВременныйКаталог + СтруктураДокумента.ИдФайл + ".xml";			
			
			ОбязательныеРеквизиты = Новый СписокЗначений;
			//Ключ - Имя Элемент(атрибута)
			
			ОбязательныеРеквизиты.Добавить("Файл");
			ОбязательныеРеквизиты.Добавить("ИдФайл");
			ОбязательныеРеквизиты.Добавить("ВерсФорм");
			ОбязательныеРеквизиты.Добавить("СвУчДокОбор");
			ОбязательныеРеквизиты.Добавить("ИнфПок");
			ОбязательныеРеквизиты.Добавить("ИдОтпр");
			ОбязательныеРеквизиты.Добавить("ИдПол");
			ОбязательныеРеквизиты.Добавить("СвОЭДОтпр");
			ОбязательныеРеквизиты.Добавить("НаимОрг");
			ОбязательныеРеквизиты.Добавить("ИННЮЛ");
			ОбязательныеРеквизиты.Добавить("ИдЭДО");
			ОбязательныеРеквизиты.Добавить("ИнфПок");
			ОбязательныеРеквизиты.Добавить("ДатаИнфПок");
			ОбязательныеРеквизиты.Добавить("ВремИнфПок");
			ОбязательныеРеквизиты.Добавить("НаимЭконСубСост");
			ОбязательныеРеквизиты.Добавить("ИдИнфПрод");
			ОбязательныеРеквизиты.Добавить("СодФХЖ4");
			ОбязательныеРеквизиты.Добавить("ИдФайлИнфПр");
			ОбязательныеРеквизиты.Добавить("ДатаФайлИнфПр");
			ОбязательныеРеквизиты.Добавить("ВремФайлИнфПр");
			ОбязательныеРеквизиты.Добавить("ЭП");
			ОбязательныеРеквизиты.Добавить("НаимДокОпрПр");
			ОбязательныеРеквизиты.Добавить("Функция");
			ОбязательныеРеквизиты.Добавить("НомСчФИнфПр");
			ОбязательныеРеквизиты.Добавить("ДатаСчФИнфПр");			
			ОбязательныеРеквизиты.Добавить("СвПрин");
			ОбязательныеРеквизиты.Добавить("ДатаПрин");
			ОбязательныеРеквизиты.Добавить("КодСодОпер");
			ОбязательныеРеквизиты.Добавить("КодИтога");
			ОбязательныеРеквизиты.Добавить("СвЛицПрин");
			ОбязательныеРеквизиты.Добавить("РабОргПок");
			ОбязательныеРеквизиты.Добавить("Должность");
			ОбязательныеРеквизиты.Добавить("ОснПолн");
			ОбязательныеРеквизиты.Добавить("ФИО");
			ОбязательныеРеквизиты.Добавить("ОблПолн");
			ОбязательныеРеквизиты.Добавить("Статус");
			ОбязательныеРеквизиты.Добавить("ОснПолн");
			ОбязательныеРеквизиты.Добавить("ФЛ");
			ОбязательныеРеквизиты.Добавить("ИП");
			ОбязательныеРеквизиты.Добавить("ЮЛ");			
			ОбязательныеРеквизиты.Добавить("Должн");
			ОбязательныеРеквизиты.Добавить("ИННФЛ");
			ОбязательныеРеквизиты.Добавить("Фамилия");
			ОбязательныеРеквизиты.Добавить("Имя");
			ОбязательныеРеквизиты.Добавить("НомДокИнфПр");
			ОбязательныеРеквизиты.Добавить("ФункцияПр");
			ОбязательныеРеквизиты.Добавить("ДатаДокИнфПр");
			ОбязательныеРеквизиты.Добавить("СвСоглас");			
			ОбязательныеРеквизиты.Добавить("СодОпер");
			
			//Указать список обязательных реквизитов согласно спецификации
			//Опционально: добавить проверку наличия колонок в результирующих 
			//таблицах, чтобы исключить блокировку транзакции и пропустить создание документов.

			ТекстОшибкиПроверкиОбязательныхПолей = "";
			
			СтруктураФайла = Новый Структура;
		    	//+Файл 
			    СтруктураФайл = Новый Структура;
			    СписокЗначенийФайл = Новый СписокЗначений;
			    СписокЗначенийФайл.Добавить("ИдФайл"	, СтруктураДокумента.ИдФайл);
			    СписокЗначенийФайл.Добавить("ВерсПрог"	, СтруктураДокумента.ВерсПрог);
			    СписокЗначенийФайл.Добавить("ВерсФорм"	, СтруктураДокумента.ВерсФорм);
			    СтруктураФайл.Вставить("Файл", СписокЗначенийФайл);//Верхний Уровень
				
					//+СвУчДокОбор
				    СтруктураСвУчДокОбор = Новый Структура;
				    СписокЗначенийСвУчДокОбор = Новый СписокЗначений;
				    СписокЗначенийСвУчДокОбор.Добавить("ИдОтпр"	, СтруктураДокумента.ИдОтпр);
				    СписокЗначенийСвУчДокОбор.Добавить("ИдПол"	, СтруктураДокумента.ИдПол);
					
				    СтруктураСвУчДокОбор.Вставить("СвУчДокОбор", СписокЗначенийСвУчДокОбор);
					
						//+СвОЭДОтпр
					    СтруктураСвОЭДОтпр = Новый Структура;
					    СписокЗначенийСвОЭДОтпр = Новый СписокЗначений;
					    СписокЗначенийСвОЭДОтпр.Добавить("НаимОрг"	, СтруктураДокумента.НаимОргОператор);
					    СписокЗначенийСвОЭДОтпр.Добавить("ИННЮЛ"	, СтруктураДокумента.ИННОператор);
					    СписокЗначенийСвОЭДОтпр.Добавить("ИдЭДО"	, СтруктураДокумента.ИдЭДО); 
					    СтруктураСвОЭДОтпр.Вставить("СвОЭДОтпр", СписокЗначенийСвОЭДОтпр);
						
					    СтруктураСвУчДокОбор.Вставить("СвОЭДОтпр", СтруктураСвОЭДОтпр);//Вложенность "Файл/СвУчДокОбор/СвОЭДОтпр"
					    //-СвОЭДОтпр
					//-СвУчДокОбо
					
				СтруктураФайл.Вставить("СвУчДокОбор"	, СтруктураСвУчДокОбор);//Вложенность "Файл/СвУчДокОбор"
				    				
					//+ИнфПок
					СтруктураИнфПок = Новый Структура;
					СписокЗначенийИнфПок = Новый СписокЗначений;
					СписокЗначенийИнфПок.Добавить("КНД"				, СтруктураДокумента.КНД);
					СписокЗначенийИнфПок.Добавить("ВремИнфПок"		, СтруктураДокумента.ВремИнфПок);
					СписокЗначенийИнфПок.Добавить("ДатаИнфПок"		, СтруктураДокумента.ДатаИнфПок); 
					СписокЗначенийИнфПок.Добавить("НаимЭконСубСост"	, СтруктураДокумента.НаимЭконСубСост);
					СтруктураИнфПок.Вставить("ИнфПок", СписокЗначенийИнфПок);
					
						//+ИдИнфПрод
						СтруктураИдИнфПрод = Новый Структура;
					    СписокЗначенийИдИнфПрод = Новый СписокЗначений;
						СписокЗначенийИдИнфПрод.Добавить("ВремФайлИнфПр"	, СтруктураДокумента.ВремФайлИнфПр);
						СписокЗначенийИдИнфПрод.Добавить("ДатаФайлИнфПр"	, СтруктураДокумента.ДатаФайлИнфПр);
						СписокЗначенийИдИнфПрод.Добавить("ИдФайлИнфПр"		, СтруктураДокумента.ИдФайлИнфПр);						
						
						СтруктураИдИнфПрод.Вставить("ИдИнфПрод" , СписокЗначенийИдИнфПрод);
						    													
						СтруктураИдИнфПрод.Вставить("ЭП",СтруктураДокумента.ЭП);//Файл/ИнфПок/ИдИнфПрод/ЭП
						
					СтруктураИнфПок.Вставить("ИдИнфПрод", СтруктураИдИнфПрод); //Файл/ИнфПок/ИдИнфПрод
					
						//+СодФХЖ4
						СтруктураСодФХЖ4 = Новый Структура;
					    СписокЗначенийСодФХЖ4 = Новый СписокЗначений;
						
						Если ЭтоУПД Тогда						
							СписокЗначенийСодФХЖ4.Добавить("Функция"		, СтруктураДокумента.Функция);
							СписокЗначенийСодФХЖ4.Добавить("НомСчФИнфПр"	, СтруктураДокумента.НомСчФИнфПр);
							СписокЗначенийСодФХЖ4.Добавить("ДатаСчФИнфПр"	, СтруктураДокумента.ДатаСчФИнфПр);							
						Иначе
							СписокЗначенийСодФХЖ4.Добавить("ФункцияПр"		, СтруктураДокумента.ФункцияПр);
							СписокЗначенийСодФХЖ4.Добавить("НомДокИнфПр"	, СтруктураДокумента.НомДокИнфПр);
							СписокЗначенийСодФХЖ4.Добавить("ДатаДокИнфПр"	, СтруктураДокумента.ДатаДокИнфПр);							
						КонецЕсли;
						
						СписокЗначенийСодФХЖ4.Добавить("НаимДокОпрПр"	, СтруктураДокумента.НаимДокОпрПр);
					    СтруктураСодФХЖ4.Вставить("СодФХЖ4", СписокЗначенийСодФХЖ4);
						
						Если ЭтоУПД Тогда
							
							//+СвПрин
						    СтруктураСвПрин = Новый Структура;
					    	СписокЗначенийСвПрин = Новый СписокЗначений;
							СписокЗначенийСвПрин.Добавить("ДатаПрин"	, СтруктураДокумента.ДатаПрин);
							СтруктураСвПрин.Вставить("СвПрин", СписокЗначенийСвПрин);
							
								//+КодСодОпер
						    	СтруктураКодСодОпер = Новый Структура;
					    		СписокЗначенийКодСодОпер = Новый СписокЗначений;
								СписокЗначенийКодСодОпер.Добавить("КодИтога"	, СтруктураДокумента.КодИтога);
							    СтруктураКодСодОпер.Вставить("КодСодОпер", СписокЗначенийКодСодОпер);
								
							СтруктураСвПрин.Вставить("КодСодОпер", СтруктураКодСодОпер);
								
								//+СвЛицПрин
						    	СтруктураСвЛицПрин = Новый Структура;
								
									//+РабОргПок
								    СтруктураРабОргПок = Новый Структура;
							    	СписокЗначенийРабОргПок = Новый СписокЗначений;
									СписокЗначенийРабОргПок.Добавить("Должность"	, СтруктураДокумента.ОтпрДолжность);
									СписокЗначенийРабОргПок.Добавить("ОснПолн"		, СтруктураДокумента.ОтпрОснПолн);
									СписокЗначенийРабОргПок.Добавить("ИныеСвед"		, СтруктураДокумента.ИныеСвед);
								    СтруктураРабОргПок.Вставить("РабОргПок", СписокЗначенийРабОргПок);
									
										//+ФИО
										СтруктураФИО = Новый Структура;
								    	СписокЗначенийФИО = Новый СписокЗначений;
										СписокЗначенийФИО.Добавить("Фамилия"	, СтруктураДокумента.ОтпрФамилия);
										СписокЗначенийФИО.Добавить("Имя"		, СтруктураДокумента.ОтпрИмя);
										СписокЗначенийФИО.Добавить("Отчество"	, СтруктураДокумента.ОтпрОтчество);
									    СтруктураФИО.Вставить("ФИО", СписокЗначенийФИО);
									
									СтруктураРабОргПок.Вставить("ФИО", СтруктураФИО);
									
								СтруктураСвЛицПрин.Вставить("РабОргПок", СтруктураРабОргПок);
								
							СтруктураСвПрин.Вставить("СвЛицПрин", СтруктураСвЛицПрин);
						
					    СтруктураСодФХЖ4.Вставить("СвПрин", СтруктураСвПрин);
							
						Иначе
							
							//+СвСоглас
							СтруктураСвСоглас = Новый Структура;
						    СписокЗначенийСвСоглас = Новый СписокЗначений;
							СписокЗначенийСвСоглас.Добавить("СодОпер"		, СтруктураДокумента.СодОпер);
							СписокЗначенийСвСоглас.Добавить("ДатаСоглас"	, СтруктураДокумента.ДатаСоглас);
							СтруктураСвСоглас.Вставить("СвСоглас", СписокЗначенийСвСоглас);
							
							СтруктураСодФХЖ4.Вставить("СвСоглас", СтруктураСвСоглас);
							
						КонецЕсли;
						
					СтруктураИнфПок.Вставить("СодФХЖ4", СтруктураСодФХЖ4); //Файл/ИнфПок/СодФХЖ4
					
					//+Подписант
					СтруктураПодписант = Новый Структура;
					СписокЗначенийПодписант = Новый СписокЗначений;
					СписокЗначенийПодписант.Добавить("ОснПолн"	, СтруктураДокумента.лПодписантОснПолн);
					СписокЗначенийПодписант.Добавить("ОблПолн"	, СтруктураДокумента.лПодписантОблПолн);
					СписокЗначенийПодписант.Добавить("Статус"	, СтруктураДокумента.лПодписантСтатус);
					СтруктураПодписант.Вставить("Подписант", СписокЗначенийПодписант);
											
					Если ПодписантТип = "ЮЛ" Тогда
						//+ЮЛ
	   	 				СтруктураЮЛ = Новый Структура;
	   	 				CписокЗначенийЮЛ = Новый СписокЗначений;
	    				CписокЗначенийЮЛ.Добавить("ИННЮЛ"	, Выборка.ПодписантИНН);
	    				CписокЗначенийЮЛ.Добавить("Должн"	, ПодписантДолжность);
						CписокЗначенийЮЛ.Добавить("НаимОрг"	, Строка(Выборка.Организация));
	   	 				СтруктураЮЛ.Вставить("ЮЛ", CписокЗначенийЮЛ);//
	   	 					//+ФИО
	   	 					СтруктураФИО = Новый Структура;
	   	 					CписокЗначенийФИО = Новый СписокЗначений;
	    					CписокЗначенийФИО.Добавить("Фамилия"	, ПодписантФамилия);
	    					CписокЗначенийФИО.Добавить("Имя"		, ПодписантИмя);
	    					CписокЗначенийФИО.Добавить("Отчество"	, ПодписантОтчество);
							
	   	 					СтруктураФИО.Вставить("ФИО", CписокЗначенийФИО);
	   	 					СтруктураЮЛ.Вставить("ФИО", СтруктураФИО);//Вложенность "Файл.Документ.Подписант.ЮЛ"
	   	 					//-ФИО	
	   	 				СтруктураПодписант.Вставить("ЮЛ", СтруктураЮЛ);//Вложенность "Файл.Документ.Подписант"	
		        		//-ЮЛ
					ИначеЕсли ПодписантТип = "ИП" Тогда
						//+ИП
	   	 				СтруктураИП = Новый Структура;
	   	 				CписокЗначенийИП = Новый СписокЗначений;
	    				CписокЗначенийИП.Добавить("ИННФЛ"			, Выборка.ПодписантИНН);
						CписокЗначенийИП.Добавить("ОргСвГосРегИП"	, СтруктураДокумента.ПодписантСвГосРегИП);
	   	 				СтруктураИП.Вставить("ИП", CписокЗначенийИП);//
	   	 					//+ФИО
	   	 					СтруктураФИО = Новый Структура;
	   	 					CписокЗначенийФИО = Новый СписокЗначений;
	    					CписокЗначенийФИО.Добавить("Фамилия"	, ПодписантФамилия);
	    					CписокЗначенийФИО.Добавить("Имя"		, ПодписантИмя);
	    					CписокЗначенийФИО.Добавить("Отчество"	, ПодписантОтчество);
	   	 					СтруктураФИО.Вставить("ФИО", CписокЗначенийФИО);
	   	 					СтруктураИП.Вставить("ФИО", СтруктураФИО);//Вложенность "Файл.Документ.Подписант.ИП"
	   	 					//-ФИО	
	   	 				СтруктураПодписант.Вставить("ИП", СтруктураИП);//Вложенность "Файл.Документ.Подписант"	
	    	        	//-ИП	
					ИначеЕсли ПодписантТип = "ФЛ" Тогда
						//+ФЛ
	   	 				СтруктураФЛ = Новый Структура;
	   	 				CписокЗначенийФЛ = Новый СписокЗначений;
	    				CписокЗначенийФЛ.Добавить("ИННФЛ", Выборка.ПодписантИНН);
													
						СтруктураФЛ.Вставить("ФЛ", CписокЗначенийФЛ);
	   	 					//+ФИО
	   	 					СтруктураФИО = Новый Структура;
	   	 					CписокЗначенийФИО = Новый СписокЗначений;
	    					CписокЗначенийФИО.Добавить("Фамилия"	, ПодписантФамилия);
	    					CписокЗначенийФИО.Добавить("Имя"		, ПодписантИмя);
	    					CписокЗначенийФИО.Добавить("Отчество"	, ПодписантОтчество);
	   	 					СтруктураФИО.Вставить("ФИО", CписокЗначенийФИО);
	   	 					СтруктураФЛ.Вставить("ФИО", СтруктураФИО);//Вложенность "Файл.Документ.Подписант.ФЛ"
	   	 					//-ФИО	
	   	 				СтруктураПодписант.Вставить("ФЛ", СтруктураФЛ);//Вложенность "Файл.Документ.Подписант"	
	    	        	//-ФЛ
					КонецЕсли;					
					
		        СтруктураИнфПок.Вставить("Подписант", СтруктураПодписант);//Вложенность "Файл.Документ"
				
				СтруктураФайл.Вставить("ИнфПок", СтруктураИнфПок);
				
				СтруктураФайла.Вставить("Файл", СтруктураФайл);		
			
				XMLДокумент        	= Новый ЗаписьXML;		
				ПараметрыЗаписиXML 	= Новый ПараметрыЗаписиXML("WINDOWS-1251", "1.0", Истина, Ложь, Символы.Таб); 
				XMLДокумент.УстановитьСтроку("WINDOWS-1251");
				XMLДокумент.ЗаписатьОбъявлениеXML();
				
				Для каждого СтрокаЭлемента Из СтруктураФайла Цикл
					ЗаписатьБлоки(XMLДокумент, СтрокаЭлемента, ОбязательныеРеквизиты, ТекстОшибкиПроверкиОбязательныхПолей);
				КонецЦикла;	
				
				СтрокаXML = XMLДокумент.Закрыть();
							
				Если ЗначениеЗаполнено(ТекстОшибкиПроверкиОбязательныхПолей) Тогда
					ТекстЛогаСобытий = ТекстОшибкиПроверкиОбязательныхПолей + Символы.ПС + "Документ был пропущен.";
					ДобавитьЗаписьВМассивЛога(МассивЛогаСобытий, ТекстЛогаСобытий, "Предупреждение", ИмяСобытия);
					Продолжить;	
				Иначе						
					
					СтруктураСтроки = Новый Структура;
					СтруктураСтроки.Вставить("ТипДокумента"         	, ТипДокумента);
					СтруктураСтроки.Вставить("Документ"             	, Выборка.ДокЭКОМ);
					СтруктураСтроки.Вставить("ИмяФайлаXML"          	, СтруктураДокумента.ИдФайл + ".xml");
					СтруктураСтроки.Вставить("СтруктураДокумента"   	, СтруктураДокумента);		
					СтруктураСтроки.Вставить("Статус"               	, "Отправлен");
					СтруктураСтроки.Вставить("ВидДокумента"         	, ВидДокументаПодписи);
					СтруктураСтроки.Вставить("ВидДокументаУПД"      	, Выборка.ВидДокументаЮЗД);
					СтруктураСтроки.Вставить("ДанныеСертификатаЭКОМ"	, Выборка.Сертификат);
					СтруктураСтроки.Вставить("СертификатНаСервере"  	, Выборка.СертификатНаСервере);
					СтруктураСтроки.Вставить("ПредставлениеДок"     	, ПредставлениеДок);
					СтруктураСтроки.Вставить("Контрагент"           	, Выборка.Контрагент);
					СтруктураСтроки.Вставить("Организация"          	, Выборка.Организация);
					СтруктураСтроки.Вставить("ИдентификаторИспр"    	, СтруктураДокумента.ИмяПостФайла);
					СтруктураСтроки.Вставить("СтрокаXML"            	, СтрокаXML);
					СтруктураСтроки.Вставить("КодировкаФайла"       	, "windows-1251");
					СтруктураСтроки.Вставить("НомерДокумента"       	, ФайлНомер);
					СтруктураСтроки.Вставить("ДатаДокумента"        	, ФайлДата);
					СтруктураСтроки.Вставить("ИдентификаторЦепочки" 	, Выборка.ИдентификаторЦепочки);
					СтруктураСтроки.Вставить("ИдентификаторОснования"	, Прав(Выборка.ИдФайлИнфПр, 36));
					СтруктураСтроки.Вставить("Идентификатор"			, Идентификатор);
					
					СтруктураСтроки.Вставить("ТипФайла", СтрЗаменить(ТипДокумента, "_11", ""));
					
					Если Выборка.ОтправитьМЧД = Истина Тогда
						СтруктураСтроки.Вставить("СтрокаМЧД", СтрЗаменить(Выборка.СтрокаМЧД, "&amp;GUID", СтрЗаменить(Идентификатор, "-", "")));
					КонецЕсли;
					
					МассивСтруктурИсходящих.Добавить(СтруктураСтроки);
							
				КонецЕсли;
		
		КонецЦикла;
		
	Иначе		
		
		ТекстЛогаСобытий = "Нет документов для подписания. Возможно документ уже подписан или не обработан или по нему отправлено уточнение!";
		ЗаписьСтруктурыЛога = ЗаполненнаяЗаписьЛога(ТекстЛогаСобытий, "Предупреждение", ИмяСобытия);
		МассивЛогаСобытий.Добавить(ЗаписьСтруктурыЛога);
		
	КонецЕсли;
	
	~Выход:
	Возврат МассивСтруктурИсходящих;
</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:decimal">0</Value>
		<Value xsi:type="xs:string">Подписать УПД/УКД</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">8</lastId>
			<item>
				<value xsi:type="xs:string">Прайс-лист</value>
				<id xsi:type="xs:decimal">0</id>
			</item>
			<item>
				<value xsi:type="xs:string">Поставщик</value>
				<id xsi:type="xs:decimal">1</id>
			</item>
			<item>
				<value xsi:type="xs:string">Покупатель</value>
				<presentation>СписокOnNschfdopprВходящиеПокупатель; СписокOnNkorschfdopprВходящиеПокупатель; СписокOnNschfdopprИспрВходящиеПокупатель</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">2</id>
			</item>
			<item>
				<value xsi:type="xs:string">Синоним</value>
				<presentation>Подписать УПД/УКД</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">3</id>
			</item>
			<item>
				<value xsi:type="xs:string">ИмяКнопки</value>
				<presentation>ИсходящийON_NSCHFDOPPOK</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">4</id>
			</item>
			<item>
				<value xsi:type="xs:string">ПередаватьТекстПричины</value>
				<id xsi:type="xs:decimal">5</id>
			</item>
			<item>
				<value xsi:type="xs:string">ПриемникВидДокумента</value>
				<presentation>ON_NSCHFDOPPOK_11_Исходящий; ON_NSCHFDOPPOKPROS_11_Исходящий; ON_NSCHFDOPPOKMARK_11_Исходящий; ON_NKORSCHFDOPPOK_11_Исходящий; ON_NKORSCHFDOPPOKPROS_11_Исходящий; ON_NKORSCHFDOPPOKMARK_11_Исходящий</presentation>
				<id xsi:type="xs:decimal">6</id>
			</item>
			<item>
				<value xsi:type="xs:string">ИсточникВидДокумента</value>
				<presentation>ON_NSCHFDOPPR_01_Входящий; ON_NSCHFDOPPR_01_Испр_Входящий; ON_NSCHFDOPPRMARK_01_Входящий; ON_NSCHFDOPPRMARK_01_Испр_Входящий; ON_NSCHFDOPPRPROS_01_Входящий; ON_NSCHFDOPPRPROS_01_Испр_Входящий; ON_NKORSCHFDOPPR_01_Входящий; ON_NKORSCHFDOPPR_01_Испр_Входящий; ON_NKORSCHFDOPPRMARK_01_Входящий; ON_NKORSCHFDOPPRMARK_01_Испр_Входящий; ON_NKORSCHFDOPPRPROS_01_Входящий; ON_NKORSCHFDOPPRPROS_01_Испр_Входящий</presentation>
				<id xsi:type="xs:decimal">7</id>
			</item>
			<item>
				<value xsi:type="xs:string">НужнаПодпись</value>
				<presentation>Да</presentation>
				<checkState>1</checkState>
				<id xsi:type="xs:decimal">8</id>
			</item>
		</Value>
		<Value xsi:type="xs:string"/>
		<Value xsi:type="xs:string">ИсходящийON_NSCHFDOPPOK</Value>
		<Value xsi:type="ValueListType">
			<valueType/>
			<lastId xsi:type="xs:decimal">1</lastId>
			<item>
				<value xsi:type="xs:string">ТекстЗапроса = "ВЫБРАТЬ
               |	DR_Документ.Ссылка КАК Ссылка
               |ПОМЕСТИТЬ вт_DR_Документ
               |ИЗ
               |	Документ.DR_Документ КАК DR_Документ
               |ГДЕ
               |	DR_Документ.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&amp;ТекущаяДата, ДЕНЬ) И КОНЕЦПЕРИОДА(&amp;ТекущаяДата, ДЕНЬ)
               |	И DR_Документ.ВидДокумента В (""ON_NSCHFDOPPR_01_Входящий"", ""ON_NSCHFDOPPR_01_Испр_Входящий"", ""ON_NSCHFDOPPRMARK_01_Входящий"", ""ON_NSCHFDOPPRMARK_01_Испр_Входящий"", ""ON_NSCHFDOPPRPROS_01_Входящий"", ""ON_NSCHFDOPPRPROS_01_Испр_Входящий"", ""ON_NKORSCHFDOPPR_01_Входящий"", ""ON_NKORSCHFDOPPR_01_Испр_Входящий"", ""ON_NKORSCHFDOPPRMARK_01_Входящий"", ""ON_NKORSCHFDOPPRMARK_01_Испр_Входящий"", ""ON_NKORSCHFDOPPRPROS_01_Входящий"", ""ON_NKORSCHFDOPPRPROS_01_Испр_Входящий"")
               |	И DR_Документ.Статус = ""Обработан""
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	вт_DR_Документ.Ссылка КАК Документ,
               |	ПРЕДСТАВЛЕНИЕ(вт_DR_Документ.Ссылка) КАК ПредставлениеДокумента,
               |	DR_УПД_Входящий.ИдентификаторЦепочки КАК ИдентификаторЦепочки
               |ПОМЕСТИТЬ втДанныеИсточник
               |ИЗ
               |	вт_DR_Документ КАК вт_DR_Документ
               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК DR_УПД_Входящий
               |		ПО вт_DR_Документ.Ссылка = DR_УПД_Входящий.Документ
               |			И (DR_УПД_Входящий.ВидДокумента В (""ON_NSCHFDOPPR_01_Входящий"", ""ON_NSCHFDOPPR_01_Испр_Входящий"", ""ON_NSCHFDOPPRMARK_01_Входящий"", ""ON_NSCHFDOPPRMARK_01_Испр_Входящий"", ""ON_NSCHFDOPPRPROS_01_Входящий"", ""ON_NSCHFDOPPRPROS_01_Испр_Входящий"", ""ON_NKORSCHFDOPPR_01_Входящий"", ""ON_NKORSCHFDOPPR_01_Испр_Входящий"", ""ON_NKORSCHFDOPPRMARK_01_Входящий"", ""ON_NKORSCHFDOPPRMARK_01_Испр_Входящий"", ""ON_NKORSCHFDOPPRPROS_01_Входящий"", ""ON_NKORSCHFDOPPRPROS_01_Испр_Входящий""))
               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_События КАК СобытияПодписьИсходящий
               |		ПО (DR_УПД_Входящий.ИдентификаторЦепочки = СобытияПодписьИсходящий.ИдентификаторЦепочки)
               |			И (СобытияПодписьИсходящий.ВидДокумента В (""ON_NSCHFDOPPOK_11_Исходящий"", ""ON_NSCHFDOPPOKMARK_11_Исходящий"", ""ON_NSCHFDOPPOKPROS_11_Исходящий"", ""ON_NKORSCHFDOPPOK_11_Исходящий"", ""ON_NKORSCHFDOPPOKMARK_11_Исходящий"", ""ON_NKORSCHFDOPPOKPROS_11_Исходящий""))
               |ГДЕ
               |	СобытияПодписьИсходящий.ИдентификаторЦепочки ЕСТЬ NULL
               |	И DR_УПД_Входящий.Статус &lt;&gt; ""Архивный""
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ ПЕРВЫЕ 2
               |	втДанныеИсточник.Документ КАК Документ,
               |	""ON_NSCHFDOPPOK_11_Исходящий"" КАК ВидДокумента,
               |	втДанныеИсточник.ПредставлениеДокумента КАК ПредставлениеДокумента,
               |	втДанныеИсточник.Документ.Статус КАК СтатусОбработкиДокумента
               |ИЗ
               |	втДанныеИсточник КАК втДанныеИсточник
               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.DR_ЦепочкиДокументов КАК DR_ЦепочкиДокументов
               |		ПО втДанныеИсточник.ИдентификаторЦепочки = DR_ЦепочкиДокументов.ИдентификаторЦепочки
               |
               |УПОРЯДОЧИТЬ ПО
               |	DR_ЦепочкиДокументов.ДатаЗаказа УБЫВ";</value>
				<presentation>ТекстЗапроса</presentation>
				<id xsi:type="xs:decimal">0</id>
			</item>
		</Value>
	</row>
</ValueTree>